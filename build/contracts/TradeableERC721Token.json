{
  "contractName": "TradeableERC721Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "adminRightsOf",
      "outputs": [
        {
          "internalType": "int16",
          "name": "",
          "type": "int16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canMintBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterBurnerRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinterBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "revokeAdminRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFromWithData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_total",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"adminRightsOf\",\"outputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterBurnerRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinterBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFromWithData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"adminRightsOf(address)\":{\"details\":\"know if an address has admin rights and what type of right it has\",\"params\":{\"_admin\":\"the address to find admin rights of\"},\"returns\":{\"_0\":\"int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens \"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"batchMintTo(uint256,address)\":{\"details\":\"Mint several tokens to an address.\",\"params\":{\"_to\":\"default owner of the new created NFT (reverts if a zero address)\",\"_total\":\"total number of NFT to mint (reverts if <= 0)\"}},\"burn(uint256)\":{\"details\":\"External Burn NFT method\"},\"canMint()\":{\"details\":\"canMint external \",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens\"}},\"canMintBurn()\":{\"details\":\"canBurn external\",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"grantMinterBurnerRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter and burner rights to\"}},\"grantMinterRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter rights to\"}},\"isMinter(address)\":{\"details\":\"verifiy if an address can mint new tokens\",\"params\":{\"_admin\":\": the address to verify minting rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint new tokens\"}},\"isMinterBurner(address)\":{\"details\":\"verifiy if an address has rights to mint and burn new tokens\",\"params\":{\"_admin\":\": the address to verify minter-burner rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint and burn new tokens\"}},\"mintTo(address)\":{\"details\":\"Mints a token to an address.\",\"params\":{\"_to\":\"address of the future owner of the token\"}},\"name()\":{\"details\":\"Gets the token name\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"revokeAdminRights(address)\":{\"details\":\"owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to revoke admin access to\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFromWithData(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokensOf(address)\":{\"details\":\"@notice Non-Standard method to retrieve all NFTs that specific owner owns\",\"returns\":{\"_0\":\"uint[] containing all NFTs that owner owns\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"TradeableERC721Token TradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality.\"},\"userdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}},\"notice\":\"an external 'burn' function restricted to owner as been added\"}},\"settings\":{\"compilationTarget\":{\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/TradeableERC721Token.sol\":\"TradeableERC721Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Administrable.sol\":{\"keccak256\":\"0x9eac93e3e1b07915dd8692b5b28b41e5f752ccc5619d88ffca41fa6a43e5e80e\",\"urls\":[\"bzz-raw://61894147015518559f69a121f294faec5d71aac9bd0f6a21ec439bca33cfb7eb\",\"dweb:/ipfs/QmXUwVk3eZv4huEom7AdnU4wrT5ZJ5sHRuiPr2nVGJecxh\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ERC165.sol\":{\"keccak256\":\"0x40d2a7003ca4114cc34bc1039cce291ae946765152ccf008804044076bdafa1e\",\"urls\":[\"bzz-raw://c39e812ce66de48141e5e506422a1e42b5391116d7ecbc3736c9fcbdb30bf028\",\"dweb:/ipfs/QmabumN3GS7NE2QbuAs3pvKBPfxD8zErfvVZUZSsNkoGMY\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ERC721.sol\":{\"keccak256\":\"0x53093c6bd5dd2d48fbd8f4ce56494e33cbc4a9b353d25e0845ba69d30ab64c85\",\"urls\":[\"bzz-raw://be5b1e0d897a60703128113a6b100dc2d3996322534f4ebc423bb4bbbc363441\",\"dweb:/ipfs/QmZcKuKEFKqBzWqzf1zXQMXs2ErUJtHCrGVmRdjfqmQqXV\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ERC721Full.sol\":{\"keccak256\":\"0x486127af5cf75a1f5c89cc938fe291c0b99c490f689c2cf9246cb21e0d4bfba0\",\"urls\":[\"bzz-raw://2adefb75478aa7cb97fe438a56a2bc9f1101b891624cc02a3b2b38b5b25dc932\",\"dweb:/ipfs/QmSCBPyodxYJKZvevYPufr5yTsqo9mTLzyEYcKdkxFQy4a\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Interfaces/IERC165.sol\":{\"keccak256\":\"0xb5c11194ee0591a687c4e855574850e9defc3e60415ebd20618220ec27aacf9d\",\"urls\":[\"bzz-raw://8187d58ed77c8bc94bc8f51e72a930538492f4e96bda45f003e6b22fde2cf4b3\",\"dweb:/ipfs/QmW2rdZBL6k6kdNQRMmKUnBu6m1uS9jAgv1A9cob1fBC8B\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Interfaces/IERC721.sol\":{\"keccak256\":\"0x50ba4f192bf03f70c08227935d81d906d2d3591120ff2770b92f023f81775c87\",\"urls\":[\"bzz-raw://2dd5283e6379ab433e5fb3f4f92b5ae5c814912ea0e4894bea67c1b45c3288ad\",\"dweb:/ipfs/QmUk4mJYtFaWiCBJXWV897d81j2hfXP5Wjoy8G9LFGqEYD\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Interfaces/IERC721Full.sol\":{\"keccak256\":\"0x0947267be9df72236b96eb1dde103e967512b2fce87594594c41d7d70febdaae\",\"urls\":[\"bzz-raw://dfab1506a185a04120d89e34ffda8dc5a6c78e14ed006ec504a730afddedaa86\",\"dweb:/ipfs/QmWzdoWqyv9imyKWBJztWEBmcna5pBz27vGyueB8Sn1fm9\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xaf926ee5f8e0fb4941e267163e5200150e1890509828788bc58987f4628a0a3e\",\"urls\":[\"bzz-raw://0a3ee50fe936a0e5811ddfe21801b9857cfa0267a8caf4def1736b515b3550aa\",\"dweb:/ipfs/QmZ6zmvuDZSv6GwkamZaVtkzjB7DEnVUScfgu7Kx5kym9b\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/Address.sol\":{\"keccak256\":\"0xc1b21eba9e61e8c264e5c1f69e5807b5397044d3455a53b52b49cb904a5b9232\",\"urls\":[\"bzz-raw://6b274194f5da7871e693c78149cd691dde2d5981e3b992da26fd66a3915c0dd8\",\"dweb:/ipfs/QmVitNkxSaak1PA7EPhoEMbEVg25HHGyFU2A2ixU5nfpxm\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/Counters.sol\":{\"keccak256\":\"0x86f66ff91d9134f2a5a4897053a57333c3c8729fc821b84fdc89090be92de467\",\"urls\":[\"bzz-raw://acfadf8930b4c52606690af843144a97d25ab503c8fca3785209c053acd62037\",\"dweb:/ipfs/QmNTSZvh6SZ5FwXT8yP1BLZJQ37FZGAWSTTXhAupMERWM1\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/SafeMath.sol\":{\"keccak256\":\"0x7ec50df97342f10890706aab8d8fba17d9740b8ea96ac5daa9170fe2263cf909\",\"urls\":[\"bzz-raw://f88c51f5fb102b26ef38ac42a886460970ffb3a424f83aa54d46228b7d5012e1\",\"dweb:/ipfs/Qmd9WfsMKCymG16NsMKMhdBBLTHPwqLeUBZrySrSWb3pwR\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/Strings.sol\":{\"keccak256\":\"0x9742061a3f1f2afd8b609d0b635f7507b03a92e02f9ae0a38c25bd5cb73e988b\",\"urls\":[\"bzz-raw://ef5c7a85e069f3c2b98c2f2bc535212f82ba4d3e9a511eb1c66fd23af2010ec1\",\"dweb:/ipfs/QmQngMmTKaT9xBDung38sTi7ZkFLdQDg1r3QVLiexcajNd\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Ownable.sol\":{\"keccak256\":\"0x6b5f1de105009c7328c43f578bd5db364536736ee34e66882d92d0eaa0737248\",\"urls\":[\"bzz-raw://c28b5c64e4fdcd4990e01b58b4b3874883938025d0814507cadeac12ac6a4488\",\"dweb:/ipfs/QmTwzyF3BPrK4G6fiNDgMyD2eadgpm6r6PVMBFHiXdKdKE\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/OwnableDelegateProxy.sol\":{\"keccak256\":\"0x10ea8662e140be0f88f92878a07656151c2634e1b7355499433eff4a93296425\",\"urls\":[\"bzz-raw://085d8002476c8570ab0df5e617b5ef611612e77f5e11a2cf008ffa1bcb326fe0\",\"dweb:/ipfs/QmPaXii2SXdYS9wraiYXeDJo1HbycVf9cCnoiksgx12P5j\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ProxyRegistry.sol\":{\"keccak256\":\"0x0a054cd34afd2166b0b009c6732b3f6d9edf3c202ac7c9d758502eed9a1f85e7\",\"urls\":[\"bzz-raw://839172c96576a0e8c6a2ab9e02f7e3d3c5c4e432970df3d0190ec744e839e416\",\"dweb:/ipfs/QmTh6CoY9NHkpktSdDTzFtQs3MCLci4pTRds9qMF7q5SwR\"]},\"/Users/joachimlebrun/IdeaProjects/ERC721/contracts/TradeableERC721Token.sol\":{\"keccak256\":\"0x5c0ec893ef2e062516a4743c00dd63fb4dabecf6697df30aeb7e9b2392e8d092\",\"urls\":[\"bzz-raw://55b6a997a5526293f07347648c4fbbea4c8a766a5845c3c9566bbe5cd9d6909a\",\"dweb:/ipfs/QmQu8SJZRJxpF7pV3J6rEuUMyZ2sZ7UFHZEpbi1vVP2fC8\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600f553480156200001657600080fd5b506040516200238e3803806200238e833981810160405260608110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010f57600080fd5b9083019060208201858111156200012557600080fd5b82516401000000008111828201881017156200014057600080fd5b82525081516020918201929091019080838360005b838110156200016f57818101518382015260200162000155565b50505050905090810190601f1680156200019d5780820380516001836020036101000a031916815260200191505b5060405260200151915083905082620001c66301ffc9a760e01b6001600160e01b03620002ba16565b620001e16380ac58cd60e01b6001600160e01b03620002ba16565b8151620001f69060059060208501906200032f565b5080516200020c9060069060208401906200032f565b5062000228635b5e139f60e01b6001600160e01b03620002ba16565b6200024363780e9d6360e01b6001600160e01b03620002ba16565b5050600c80546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600e80546001600160a01b0319166001600160a01b039290921691909117905550620003d49050565b6001600160e01b031980821614156200030a576040805162461bcd60e51b815260206004820152600d60248201526c62616420696e7465726661636560981b604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200037257805160ff1916838001178555620003a2565b82800160010185558215620003a2579182015b82811115620003a257825182559160200191906001019062000385565b50620003b0929150620003b4565b5090565b620003d191905b80821115620003b05760008155600101620003bb565b90565b611faa80620003e46000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6811901161010f5780639adfecf9116100a2578063beb9716d11610071578063beb9716d14610724578063cd7c03261461072c578063e985e9c514610734578063f2fde38b14610762576101f0565b80639adfecf91461066b578063a22cb465146106aa578063a2e4d239146106d8578063aa271e1a146106fe576101f0565b80638d0f5b70116100de5780638d0f5b70146106275780638da5cb5b146106535780638f32d59b1461065b57806395d89b4114610663576101f0565b80636a681190146105ad57806370a08231146105d3578063715018a6146105f9578063755edd1714610601576101f0565b80632f745c59116101875780634f6ccce7116101565780634f6ccce7146104375780635a3f26721461045457806360a11672146104ca5780636352211e14610590576101f0565b80632f745c591461039257806342679683146103be57806342842e0e146103e457806342966c681461041a576101f0565b8063095ea7b3116101c3578063095ea7b31461030e57806318160ddd1461033a5780631f6eeb681461035457806323b872dd1461035c576101f0565b806301ffc9a7146101f557806305d52d091461023057806306fdde0314610258578063081812fc146102d5575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b031916610788565b604080519115158252519081900360200190f35b6102566004803603602081101561024657600080fd5b50356001600160a01b03166107ab565b005b610260610871565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029a578181015183820152602001610282565b50505050905090810190601f1680156102c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f2600480360360208110156102eb57600080fd5b5035610907565b604080516001600160a01b039092168252519081900360200190f35b6102566004803603604081101561032457600080fd5b506001600160a01b038135169060200135610977565b610342610aa2565b60408051918252519081900360200190f35b61021c610aa8565b6102566004803603606081101561037257600080fd5b506001600160a01b03813581169160208101359091169060400135610ab8565b610342600480360360408110156103a857600080fd5b506001600160a01b038135169060200135610b23565b61021c600480360360208110156103d457600080fd5b50356001600160a01b0316610bad565b610256600480360360608110156103fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610c01565b6102566004803603602081101561043057600080fd5b5035610c1c565b6103426004803603602081101561044d57600080fd5b5035610c81565b61047a6004803603602081101561046a57600080fd5b50356001600160a01b0316610cf1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104b657818101518382015260200161049e565b505050509050019250505060405180910390f35b610256600480360360808110156104e057600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561051b57600080fd5b82018360208201111561052d57600080fd5b8035906020019184600183028401116401000000008311171561054f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d52945050505050565b6102f2600480360360208110156105a657600080fd5b5035610db7565b610256600480360360208110156105c357600080fd5b50356001600160a01b0316610e1d565b610342600480360360208110156105e957600080fd5b50356001600160a01b0316610ee6565b610256610f60565b6102566004803603602081101561061757600080fd5b50356001600160a01b0316610ff9565b6102566004803603604081101561063d57600080fd5b50803590602001356001600160a01b0316611074565b6102f261118b565b61021c61119a565b6102606111ab565b6106916004803603602081101561068157600080fd5b50356001600160a01b031661120c565b60408051600192830b90920b8252519081900360200190f35b610256600480360360408110156106c057600080fd5b506001600160a01b0381351690602001351515611259565b610256600480360360208110156106ee57600080fd5b50356001600160a01b031661131f565b61021c6004803603602081101561071457600080fd5b50356001600160a01b03166113e8565b61021c61143a565b6102f2611445565b61021c6004803603604081101561074a57600080fd5b506001600160a01b0381358116916020013516611454565b6102566004803603602081101561077857600080fd5b50356001600160a01b03166114ff565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6107b361119a565b6107fa576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b03811661084e576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19169055565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b600061091282611557565b61095b576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b925108191bd95cdb89dd08195e1a5cdd605a1b604482015290519081900360640190fd5b506000908152600260205260409020546001600160a01b031690565b600061098282610db7565b9050806001600160a01b0316836001600160a01b031614156109e5576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336001600160a01b0382161480610a015750610a018133611454565b610a46576040805162461bcd60e51b81526020600482015260116024820152701c195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015290519081900360640190fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a5490565b6000610ab333610bad565b905090565b610ac23382611574565b610b13576040805162461bcd60e51b815260206004820152601760248201527f7370656e646572206973206e6f7420617070726f766564000000000000000000604482015290519081900360640190fd5b610b1e8383836115cb565b505050565b6000610b2e83610ee6565b8210610b75576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600860205260409020805483908110610b9957fe5b906000526020600020015490505b92915050565b6000610bb761118b565b6001600160a01b0316826001600160a01b03161415610bd8575060016107a6565b506001600160a01b0381166000908152600d6020526040902054600190810b900b6002146107a6565b610b1e83838360405180602001604052806000815250610d52565b610c24610aa8565b610c75576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206275726e696e6720726967687473604482015290519081900360640190fd5b610c7e816115ea565b50565b6000610c8b610aa2565b8210610cd2576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b600a8281548110610cdf57fe5b90600052602060002001549050919050565b6060610cfc826115fc565b805480602002602001604051908101604052809291908181526020018280548015610d4657602002820191906000526020600020905b815481526020019060010190808311610d32575b50505050509050919050565b610d5d848484610ab8565b610d6984848484611616565b610db1576040805162461bcd60e51b81526020600482015260146024820152736461746120636865636b206973206e6f74206f6b60601b604482015290519081900360640190fd5b50505050565b6000818152600160205260408120546001600160a01b031680610ba7576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b610e2561119a565b610e6c576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b038116610ec0576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19166001179055565b60006001600160a01b038216610f3f576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6001600160a01b0382166000908152600360205260409020610ba790611749565b610f6861119a565b610faf576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b600c546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c80546001600160a01b0319169055565b61100161143a565b611052576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b600061105c61174d565b90506110688282611764565b611070611781565b5050565b61107c61143a565b6110cd576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b60008211611119576040805162461bcd60e51b815260206004820152601460248201527336b4b73a1036b4b734b6bab69018903a37b5b2b760611b604482015290519081900360640190fd5b6001600160a01b03811661116f576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b60005b82811015610b1e5761118382610ff9565b600101611172565b600c546001600160a01b031690565b600c546001600160a01b0316331490565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b600061121661118b565b6001600160a01b0316826001600160a01b03161415611237575060026107a6565b506001600160a01b0381166000908152600d602052604090205460010b6107a6565b6001600160a01b0382163314156112b1576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61132761119a565b61136e576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b0381166113c2576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19166002179055565b60006113f261118b565b6001600160a01b0316826001600160a01b03161415611413575060016107a6565b506001600160a01b0381166000908152600d6020526040812054600190810b900b136107a6565b6000610ab3336113e8565b600e546001600160a01b031681565b600e546040805163c455279160e01b81526001600160a01b0385811660048301529151600093831692851691839163c455279191602480820192602092909190829003018186803b1580156114a857600080fd5b505afa1580156114bc573d6000803e3d6000fd5b505050506040513d60208110156114d257600080fd5b50516001600160a01b031614156114ed576001915050610ba7565b6114f7848461178c565b949350505050565b61150761119a565b61154e576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b610c7e816117ba565b6000908152600160205260409020546001600160a01b0316151590565b60008061158083610db7565b9050806001600160a01b0316846001600160a01b031614806115bb5750836001600160a01b03166115b084610907565b6001600160a01b0316145b806114f757506114f78185611454565b6115d6838383611871565b6115e083826119e1565b610b1e8282611ae3565b610c7e6115f682610db7565b82611b21565b6001600160a01b0316600090815260086020526040902090565b600061162a846001600160a01b0316611b4d565b611636575060016114f7565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156116b0578181015183820152602001611698565b50505050905090810190601f1680156116dd5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156116ff57600080fd5b505af1158015611713573d6000803e3d6000fd5b505050506040513d602081101561172957600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b5490565b600f54600090610ab390600163ffffffff611b5316565b61176e8282611bb4565b6117788282611ae3565b61107081611cd7565b600f80546001019055565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6001600160a01b038116611815576040805162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e65722063616e6e6f7420626520616464726573732030000000604482015290519081900360640190fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661188482610db7565b6001600160a01b0316146118df576040805162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f74206f776e6572206f662074686520746f6b656e604482015290519081900360640190fd5b6001600160a01b03821661193a576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f742073656e6420746f203020616464726573730000000000000000604482015290519081900360640190fd5b61194381611d1b565b6001600160a01b038316600090815260036020526040902061196490611d56565b6001600160a01b038216600090815260036020526040902061198590611d6d565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260086020526040812054611a0b90600163ffffffff611d7616565b600083815260096020526040902054909150808214611aa6576001600160a01b0384166000908152600860205260408120805484908110611a4857fe5b906000526020600020015490508060086000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110611a8657fe5b600091825260208083209091019290925591825260099052604090208190555b6001600160a01b0384166000908152600860205260409020805480611ac757fe5b6001900381819060005260206000200160009055905550505050565b6001600160a01b0390911660009081526008602081815260408084208054868652600984529185208290559282526001810183559183529091200155565b611b2b8282611dd3565b611b3582826119e1565b60008181526009602052604081205561107081611ec0565b3b151590565b600082820183811015611bad576040805162461bcd60e51b815260206004820181905260248201527f626f7468206e756d62657273206861766520746f20626520706f736974697665604482015290519081900360640190fd5b9392505050565b6001600160a01b038216611c0a576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b611c1381611557565b15611c5c576040805162461bcd60e51b8152602060048201526014602482015273746f6b656e20616c72656164792065786973747360601b604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020611c9b90611d6d565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b6000818152600260205260409020546001600160a01b031615610c7e57600090815260026020526040902080546001600160a01b0319169055565b8054611d6990600163ffffffff611d7616565b9055565b80546001019055565b600082821115611dcd576040805162461bcd60e51b815260206004820152601d60248201527f726573756c742063616e6e6f74206265206c6f776572207468616e2030000000604482015290519081900360640190fd5b50900390565b816001600160a01b0316611de682610db7565b6001600160a01b031614611e41576040805162461bcd60e51b815260206004820152601f60248201527f61646472657373206973206e6f74206f776e6572206f6620746f6b656e494400604482015290519081900360640190fd5b611e4a81611d1b565b6001600160a01b0382166000908152600360205260409020611e6b90611d56565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a54600090611ed790600163ffffffff611d7616565b6000838152600b6020526040812054600a8054939450909284908110611ef957fe5b9060005260206000200154905080600a8381548110611f1457fe5b6000918252602080832090910192909255828152600b90915260409020829055600a805480611f3f57fe5b600190038181906000526020600020016000905590556000600b6000868152602001908152602001600020819055505050505056fea264697066735822122026a4847708c46eb8a0f0630f9a32535fe76f1508636ef92914d2542e145b707964736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6811901161010f5780639adfecf9116100a2578063beb9716d11610071578063beb9716d14610724578063cd7c03261461072c578063e985e9c514610734578063f2fde38b14610762576101f0565b80639adfecf91461066b578063a22cb465146106aa578063a2e4d239146106d8578063aa271e1a146106fe576101f0565b80638d0f5b70116100de5780638d0f5b70146106275780638da5cb5b146106535780638f32d59b1461065b57806395d89b4114610663576101f0565b80636a681190146105ad57806370a08231146105d3578063715018a6146105f9578063755edd1714610601576101f0565b80632f745c59116101875780634f6ccce7116101565780634f6ccce7146104375780635a3f26721461045457806360a11672146104ca5780636352211e14610590576101f0565b80632f745c591461039257806342679683146103be57806342842e0e146103e457806342966c681461041a576101f0565b8063095ea7b3116101c3578063095ea7b31461030e57806318160ddd1461033a5780631f6eeb681461035457806323b872dd1461035c576101f0565b806301ffc9a7146101f557806305d52d091461023057806306fdde0314610258578063081812fc146102d5575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b031916610788565b604080519115158252519081900360200190f35b6102566004803603602081101561024657600080fd5b50356001600160a01b03166107ab565b005b610260610871565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029a578181015183820152602001610282565b50505050905090810190601f1680156102c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f2600480360360208110156102eb57600080fd5b5035610907565b604080516001600160a01b039092168252519081900360200190f35b6102566004803603604081101561032457600080fd5b506001600160a01b038135169060200135610977565b610342610aa2565b60408051918252519081900360200190f35b61021c610aa8565b6102566004803603606081101561037257600080fd5b506001600160a01b03813581169160208101359091169060400135610ab8565b610342600480360360408110156103a857600080fd5b506001600160a01b038135169060200135610b23565b61021c600480360360208110156103d457600080fd5b50356001600160a01b0316610bad565b610256600480360360608110156103fa57600080fd5b506001600160a01b03813581169160208101359091169060400135610c01565b6102566004803603602081101561043057600080fd5b5035610c1c565b6103426004803603602081101561044d57600080fd5b5035610c81565b61047a6004803603602081101561046a57600080fd5b50356001600160a01b0316610cf1565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156104b657818101518382015260200161049e565b505050509050019250505060405180910390f35b610256600480360360808110156104e057600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561051b57600080fd5b82018360208201111561052d57600080fd5b8035906020019184600183028401116401000000008311171561054f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d52945050505050565b6102f2600480360360208110156105a657600080fd5b5035610db7565b610256600480360360208110156105c357600080fd5b50356001600160a01b0316610e1d565b610342600480360360208110156105e957600080fd5b50356001600160a01b0316610ee6565b610256610f60565b6102566004803603602081101561061757600080fd5b50356001600160a01b0316610ff9565b6102566004803603604081101561063d57600080fd5b50803590602001356001600160a01b0316611074565b6102f261118b565b61021c61119a565b6102606111ab565b6106916004803603602081101561068157600080fd5b50356001600160a01b031661120c565b60408051600192830b90920b8252519081900360200190f35b610256600480360360408110156106c057600080fd5b506001600160a01b0381351690602001351515611259565b610256600480360360208110156106ee57600080fd5b50356001600160a01b031661131f565b61021c6004803603602081101561071457600080fd5b50356001600160a01b03166113e8565b61021c61143a565b6102f2611445565b61021c6004803603604081101561074a57600080fd5b506001600160a01b0381358116916020013516611454565b6102566004803603602081101561077857600080fd5b50356001600160a01b03166114ff565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b6107b361119a565b6107fa576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b03811661084e576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19169055565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b820191906000526020600020905b8154815290600101906020018083116108e057829003601f168201915b5050505050905090565b600061091282611557565b61095b576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b925108191bd95cdb89dd08195e1a5cdd605a1b604482015290519081900360640190fd5b506000908152600260205260409020546001600160a01b031690565b600061098282610db7565b9050806001600160a01b0316836001600160a01b031614156109e5576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336001600160a01b0382161480610a015750610a018133611454565b610a46576040805162461bcd60e51b81526020600482015260116024820152701c195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015290519081900360640190fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a5490565b6000610ab333610bad565b905090565b610ac23382611574565b610b13576040805162461bcd60e51b815260206004820152601760248201527f7370656e646572206973206e6f7420617070726f766564000000000000000000604482015290519081900360640190fd5b610b1e8383836115cb565b505050565b6000610b2e83610ee6565b8210610b75576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600860205260409020805483908110610b9957fe5b906000526020600020015490505b92915050565b6000610bb761118b565b6001600160a01b0316826001600160a01b03161415610bd8575060016107a6565b506001600160a01b0381166000908152600d6020526040902054600190810b900b6002146107a6565b610b1e83838360405180602001604052806000815250610d52565b610c24610aa8565b610c75576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206275726e696e6720726967687473604482015290519081900360640190fd5b610c7e816115ea565b50565b6000610c8b610aa2565b8210610cd2576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b600a8281548110610cdf57fe5b90600052602060002001549050919050565b6060610cfc826115fc565b805480602002602001604051908101604052809291908181526020018280548015610d4657602002820191906000526020600020905b815481526020019060010190808311610d32575b50505050509050919050565b610d5d848484610ab8565b610d6984848484611616565b610db1576040805162461bcd60e51b81526020600482015260146024820152736461746120636865636b206973206e6f74206f6b60601b604482015290519081900360640190fd5b50505050565b6000818152600160205260408120546001600160a01b031680610ba7576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b610e2561119a565b610e6c576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b038116610ec0576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19166001179055565b60006001600160a01b038216610f3f576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6001600160a01b0382166000908152600360205260409020610ba790611749565b610f6861119a565b610faf576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b600c546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c80546001600160a01b0319169055565b61100161143a565b611052576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b600061105c61174d565b90506110688282611764565b611070611781565b5050565b61107c61143a565b6110cd576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b60008211611119576040805162461bcd60e51b815260206004820152601460248201527336b4b73a1036b4b734b6bab69018903a37b5b2b760611b604482015290519081900360640190fd5b6001600160a01b03811661116f576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b60005b82811015610b1e5761118382610ff9565b600101611172565b600c546001600160a01b031690565b600c546001600160a01b0316331490565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108fd5780601f106108d2576101008083540402835291602001916108fd565b600061121661118b565b6001600160a01b0316826001600160a01b03161415611237575060026107a6565b506001600160a01b0381166000908152600d602052604090205460010b6107a6565b6001600160a01b0382163314156112b1576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61132761119a565b61136e576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b0381166113c2576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b506001600160a01b03166000908152600d60205260409020805461ffff19166002179055565b60006113f261118b565b6001600160a01b0316826001600160a01b03161415611413575060016107a6565b506001600160a01b0381166000908152600d6020526040812054600190810b900b136107a6565b6000610ab3336113e8565b600e546001600160a01b031681565b600e546040805163c455279160e01b81526001600160a01b0385811660048301529151600093831692851691839163c455279191602480820192602092909190829003018186803b1580156114a857600080fd5b505afa1580156114bc573d6000803e3d6000fd5b505050506040513d60208110156114d257600080fd5b50516001600160a01b031614156114ed576001915050610ba7565b6114f7848461178c565b949350505050565b61150761119a565b61154e576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b610c7e816117ba565b6000908152600160205260409020546001600160a01b0316151590565b60008061158083610db7565b9050806001600160a01b0316846001600160a01b031614806115bb5750836001600160a01b03166115b084610907565b6001600160a01b0316145b806114f757506114f78185611454565b6115d6838383611871565b6115e083826119e1565b610b1e8282611ae3565b610c7e6115f682610db7565b82611b21565b6001600160a01b0316600090815260086020526040902090565b600061162a846001600160a01b0316611b4d565b611636575060016114f7565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156116b0578181015183820152602001611698565b50505050905090810190601f1680156116dd5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156116ff57600080fd5b505af1158015611713573d6000803e3d6000fd5b505050506040513d602081101561172957600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b5490565b600f54600090610ab390600163ffffffff611b5316565b61176e8282611bb4565b6117788282611ae3565b61107081611cd7565b600f80546001019055565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6001600160a01b038116611815576040805162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e65722063616e6e6f7420626520616464726573732030000000604482015290519081900360640190fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b031661188482610db7565b6001600160a01b0316146118df576040805162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f74206f776e6572206f662074686520746f6b656e604482015290519081900360640190fd5b6001600160a01b03821661193a576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f742073656e6420746f203020616464726573730000000000000000604482015290519081900360640190fd5b61194381611d1b565b6001600160a01b038316600090815260036020526040902061196490611d56565b6001600160a01b038216600090815260036020526040902061198590611d6d565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260086020526040812054611a0b90600163ffffffff611d7616565b600083815260096020526040902054909150808214611aa6576001600160a01b0384166000908152600860205260408120805484908110611a4857fe5b906000526020600020015490508060086000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110611a8657fe5b600091825260208083209091019290925591825260099052604090208190555b6001600160a01b0384166000908152600860205260409020805480611ac757fe5b6001900381819060005260206000200160009055905550505050565b6001600160a01b0390911660009081526008602081815260408084208054868652600984529185208290559282526001810183559183529091200155565b611b2b8282611dd3565b611b3582826119e1565b60008181526009602052604081205561107081611ec0565b3b151590565b600082820183811015611bad576040805162461bcd60e51b815260206004820181905260248201527f626f7468206e756d62657273206861766520746f20626520706f736974697665604482015290519081900360640190fd5b9392505050565b6001600160a01b038216611c0a576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b611c1381611557565b15611c5c576040805162461bcd60e51b8152602060048201526014602482015273746f6b656e20616c72656164792065786973747360601b604482015290519081900360640190fd5b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020611c9b90611d6d565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a80546000838152600b60205260408120829055600182018355919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80155565b6000818152600260205260409020546001600160a01b031615610c7e57600090815260026020526040902080546001600160a01b0319169055565b8054611d6990600163ffffffff611d7616565b9055565b80546001019055565b600082821115611dcd576040805162461bcd60e51b815260206004820152601d60248201527f726573756c742063616e6e6f74206265206c6f776572207468616e2030000000604482015290519081900360640190fd5b50900390565b816001600160a01b0316611de682610db7565b6001600160a01b031614611e41576040805162461bcd60e51b815260206004820152601f60248201527f61646472657373206973206e6f74206f776e6572206f6620746f6b656e494400604482015290519081900360640190fd5b611e4a81611d1b565b6001600160a01b0382166000908152600360205260409020611e6b90611d56565b60008181526001602052604080822080546001600160a01b0319169055518291906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600a54600090611ed790600163ffffffff611d7616565b6000838152600b6020526040812054600a8054939450909284908110611ef957fe5b9060005260206000200154905080600a8381548110611f1457fe5b6000918252602080832090910192909255828152600b90915260409020829055600a805480611f3f57fe5b600190038181906000526020600020016000905590556000600b6000868152602001908152602001600020819055505050505056fea264697066735822122026a4847708c46eb8a0f0630f9a32535fe76f1508636ef92914d2542e145b707964736f6c63430006020033",
  "sourceMap": "362:2256:18:-:0;;;565:1;531:35;;573:182;8:9:-1;5:2;;;30:1;27;20:12;5:2;573:182:18;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;573:182:18;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;573:182:18;;420:4:-1;411:14;;;;573:182:18;;;;;411:14:-1;573:182:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;573:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;573:182:18;;420:4:-1;411:14;;;;573:182:18;;;;;411:14:-1;573:182:18;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;573:182:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;573:182:18;;;;;;-1:-1:-1;678:5:18;;-1:-1:-1;685:7:18;710:40:1;-1:-1:-1;;;;;;;;710:18:1;:40;:::i;:::-;2031::2;-1:-1:-1;;;;;;;;2031:18:2;:40;:::i;:::-;1777:12:3;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1799:16:3;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1903:49:3;-1:-1:-1;;;;;;;;1903:18:3;:49;:::i;:::-;2048:51;-1:-1:-1;;;;;;;;2048:18:3;:51;:::i;:::-;-1:-1:-1;;577:6:14;:28;;-1:-1:-1;;;;;;577:28:14;594:10;577:28;;;;;620:40;;-1:-1:-1;;;;;653:6:14;;;;;577;;620:40;;577:6;;620:40;704:20:18::1;:44:::0;;-1:-1:-1;;;;;;704:44:18::1;-1:-1:-1::0;;;;;704:44:18;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;362:2256:18;;-1:-1:-1;362:2256:18;1065:175:1;-1:-1:-1;;;;;;1140:25:1;;;;;1132:51;;;;;-1:-1:-1;;;1132:51:1;;;;;;;;;;;;-1:-1:-1;;;1132:51:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1193:33:1;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1193:40:1;1229:4;1193:40;;;1065:175::o;362:2256:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;362:2256:18;;;-1:-1:-1;362:2256:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "362:2256:18:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;362:2256:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:142:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;846:142:1;-1:-1:-1;;;;;;846:142:1;;:::i;:::-;;;;;;;;;;;;;;;;;;3729:118:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3729:118:0;-1:-1:-1;;;;;3729:118:0;;:::i;:::-;;2207:92:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2207:92:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3948:185:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3948:185:2;;:::i;:::-;;;;-1:-1:-1;;;;;3948:185:2;;;;;;;;;;;;;;3319:349;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3319:349:2;;;;;;;;:::i;3229:103:3:-;;;:::i;:::-;;;;;;;;;;;;;;;;2154:122:0;;;:::i;5574:216:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5574:216:2;;;;;;;;;;;;;;;;;:::i;2868:212:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2868:212:3;;;;;;;;:::i;1578:182:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1578:182:0;-1:-1:-1;;;;;1578:182:0;;:::i;6413:149:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6413:149:2;;;;;;;;;;;;;;;;;:::i;1559:91:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1559:91:18;;:::i;3664:178:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3664:178:3;;:::i;9955:114::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9955:114:3;-1:-1:-1;;;;;9955:114:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9955:114:3;;;;;;;;;;;;;;;;;7256:252:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7256:252:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7256:252:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7256:252:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7256:252:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7256:252:2;;-1:-1:-1;7256:252:2;;-1:-1:-1;;;;;7256:252:2:i;2689:215::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2689:215:2;;:::i;3057:118:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3057:118:0;-1:-1:-1;;;;;3057:118:0;;:::i;2277:198:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2277:198:2;-1:-1:-1;;;;;2277:198:2;;:::i;1505:137:14:-;;;:::i;874:163:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;874:163:18;-1:-1:-1;;;;;874:163:18;;:::i;1256:246::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1256:246:18;;;;;;-1:-1:-1;;;;;1256:246:18;;:::i;728:77:14:-;;;:::i;1067:90::-;;;:::i;2404:96:3:-;;;:::i;798:150:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;798:150:0;-1:-1:-1;;;;;798:150:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4420:249:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4420:249:2;;;;;;;;;;:::i;3422:124:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3422:124:0;-1:-1:-1;;;;;3422:124:0;;:::i;1158:175::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1158:175:0;-1:-1:-1;;;;;1158:175:0;;:::i;1889:112::-;;;:::i;490:35:18:-;;;:::i;2182:434::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2182:434:18;;;;;;;;;;:::i;1810:107:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1810:107:14;-1:-1:-1;;;;;1810:107:14;;:::i;846:142:1:-;-1:-1:-1;;;;;;948:33:1;;925:4;948:33;;;;;;;;;;;;;846:142;;;;:::o;3729:118:0:-;930:9:14;:7;:9::i;:::-;922:41;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;;;;3804:6:0;-1:-1:-1;;;;;2758:20:0;::::1;2750:54;;;::::0;;-1:-1:-1;;;2750:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2750:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;;3822:14:0::2;3839:1;3822:14:::0;;;:6:::2;:14;::::0;;;;:18;;-1:-1:-1;;3822:18:0::2;::::0;;3729:118::o;2207:92:3:-;2287:5;2280:12;;;;;;;;-1:-1:-1;;2280:12:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2255:13;;2280:12;;2287:5;;2280:12;;2287:5;2280:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:92;:::o;3948:185:2:-;4016:7;4043:16;4051:7;4043;:16::i;:::-;4035:50;;;;;-1:-1:-1;;;4035:50:2;;;;;;;;;;;;-1:-1:-1;;;4035:50:2;;;;;;;;;;;;;;;-1:-1:-1;4102:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4102:24:2;;3948:185::o;3319:349::-;3391:13;3407:16;3415:7;3407;:16::i;:::-;3391:32;;3447:5;-1:-1:-1;;;;;3441:11:2;:2;-1:-1:-1;;;;;3441:11:2;;;3433:47;;;;;-1:-1:-1;;;3433:47:2;;;;;;;;;;;;-1:-1:-1;;;3433:47:2;;;;;;;;;;;;;;;3498:10;-1:-1:-1;;;;;3498:19:2;;;;:58;;;3521:35;3538:5;3545:10;3521:16;:35::i;:::-;3490:88;;;;;-1:-1:-1;;;3490:88:2;;;;;;;;;;;;-1:-1:-1;;;3490:88:2;;;;;;;;;;;;;;;3589:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3589:29:2;-1:-1:-1;;;;;3589:29:2;;;;;;;;;3633:28;;3589:24;;3633:28;;;;;;;3319:349;;;:::o;3229:103:3:-;3308:10;:17;3229:103;:::o;2154:122:0:-;2197:4;2233:26;2248:10;2233:14;:26::i;:::-;2213:56;;2154:122;:::o;5574:216:2:-;5673:39;5692:10;5704:7;5673:18;:39::i;:::-;5665:75;;;;;-1:-1:-1;;;5665:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;5751:32;5765:4;5771:2;5775:7;5751:13;:32::i;:::-;5574:216;;;:::o;2868:212:3:-;2957:7;2992:16;3002:5;2992:9;:16::i;:::-;2984:5;:24;2976:54;;;;;-1:-1:-1;;;2976:54:3;;;;;;;;;;;;-1:-1:-1;;;2976:54:3;;;;;;;;;;;;;;;-1:-1:-1;;;;;3047:19:3;;;;;;:12;:19;;;;;:26;;3067:5;;3047:26;;;;;;;;;;;;;;3040:33;;2868:212;;;;;:::o;1578:182:0:-;1639:4;1669:7;:5;:7::i;:::-;-1:-1:-1;;;;;1659:17:0;:6;-1:-1:-1;;;;;1659:17:0;;1655:98;;;-1:-1:-1;1685:4:0;1678:11;;1655:98;-1:-1:-1;;;;;;1724:14:0;;;;;;:6;:14;;;;;;;;;;:19;;1742:1;1724:19;1704:49;;6413:149:2;6508:47;6533:4;6539:2;6543:7;6508:47;;;;;;;;;;;;:24;:47::i;1559:91:18:-;2607:13:0;:11;:13::i;:::-;2586:92;;;;;-1:-1:-1;;;2586:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1622:21:18::1;1634:8;1622:11;:21::i;:::-;1559:91:::0;:::o;3664:178:3:-;3731:7;3766:13;:11;:13::i;:::-;3758:5;:21;3750:51;;;;;-1:-1:-1;;;3750:51:3;;;;;;;;;;;;-1:-1:-1;;;3750:51:3;;;;;;;;;;;;;;;3818:10;3829:5;3818:17;;;;;;;;;;;;;;;;3811:24;;3664:178;;;:::o;9955:114::-;10009:13;10041:21;10056:5;10041:14;:21::i;:::-;10034:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9955:114;;;:::o;7256:252:2:-;7379:31;7392:4;7398:2;7402:7;7379:12;:31::i;:::-;7428:48;7451:4;7457:2;7461:7;7470:5;7428:22;:48::i;:::-;7420:81;;;;;-1:-1:-1;;;7420:81:2;;;;;;;;;;;;-1:-1:-1;;;7420:81:2;;;;;;;;;;;;;;;7256:252;;;;:::o;2689:215::-;2753:7;2788:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2788:20:2;2826:19;2818:57;;;;;-1:-1:-1;;;2818:57:2;;;;;;;;;;;;-1:-1:-1;;;2818:57:2;;;;;;;;;;;;;;3057:118:0;930:9:14;:7;:9::i;:::-;922:41;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;;;;3132:6:0;-1:-1:-1;;;;;2758:20:0;::::1;2750:54;;;::::0;;-1:-1:-1;;;2750:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2750:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;;3150:14:0::2;;::::0;;;:6:::2;:14;::::0;;;;:18;;-1:-1:-1;;3150:18:0::2;3167:1;3150:18;::::0;;3057:118::o;2277:198:2:-;2341:7;-1:-1:-1;;;;;2368:19:2;;2360:57;;;;;-1:-1:-1;;;2360:57:2;;;;;;;;;;;;-1:-1:-1;;;2360:57:2;;;;;;;;;;;;;;;-1:-1:-1;;;;;2434:24:2;;;;;;:17;:24;;;;;:34;;:32;:34::i;1505:137:14:-;930:9;:7;:9::i;:::-;922:41;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;;;;1587:6:::1;::::0;1566:40:::1;::::0;1603:1:::1;::::0;-1:-1:-1;;;;;1587:6:14::1;::::0;1566:40:::1;::::0;1603:1;;1566:40:::1;1616:6;:19:::0;;-1:-1:-1;;;;;;1616:19:14::1;::::0;;1505:137::o;874:163:18:-;2410:9:0;:7;:9::i;:::-;2389:88;;;;;-1:-1:-1;;;2389:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;931:18:18::1;952:17;:15;:17::i;:::-;931:38;;979:22;985:3;990:10;979:5;:22::i;:::-;1011:19;:17;:19::i;:::-;2487:1:0;874:163:18::0;:::o;1256:246::-;2410:9:0;:7;:9::i;:::-;2389:88;;;;;-1:-1:-1;;;2389:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:1:18::1;1339:6;:10;1331:43;;;::::0;;-1:-1:-1;;;1331:43:18;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1331:43:18;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;1392:17:18;::::1;1384:54;;;::::0;;-1:-1:-1;;;1384:54:18;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1384:54:18;;;;;;;;;;;;;::::1;;1454:6;1449:45;1470:6;1466:1;:10;1449:45;;;1483:11;1490:3;1483:6;:11::i;:::-;1478:3;;1449:45;;728:77:14::0;792:6;;-1:-1:-1;;;;;792:6:14;728:77;:::o;1067:90::-;1144:6;;-1:-1:-1;;;;;1144:6:14;1130:10;:20;;1067:90::o;2404:96:3:-;2486:7;2479:14;;;;;;;;-1:-1:-1;;2479:14:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2454:13;;2479:14;;2486:7;;2479:14;;2486:7;2479:14;;;;;;;;;;;;;;;;;;;;;;;;798:150:0;857:5;888:7;:5;:7::i;:::-;-1:-1:-1;;;;;878:17:0;:6;-1:-1:-1;;;;;878:17:0;;874:67;;;-1:-1:-1;904:1:0;897:8;;874:67;-1:-1:-1;;;;;;927:14:0;;;;;;:6;:14;;;;;;;;920:21;;4420:249:2;-1:-1:-1;;;;;4508:16:2;;4514:10;4508:16;;4500:52;;;;;-1:-1:-1;;;4500:52:2;;;;;;;;;;;;-1:-1:-1;;;4500:52:2;;;;;;;;;;;;;;;4581:10;4562:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4562:34:2;;;;;;;;;;;;:45;;-1:-1:-1;;4562:45:2;;;;;;;;;;4622:40;;;;;;;4562:34;;4581:10;4622:40;;;;;;;;;;;4420:249;;:::o;3422:124:0:-;930:9:14;:7;:9::i;:::-;922:41;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;;;;3503:6:0;-1:-1:-1;;;;;2758:20:0;::::1;2750:54;;;::::0;;-1:-1:-1;;;2750:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2750:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;;3521:14:0::2;;::::0;;;:6:::2;:14;::::0;;;;:18;;-1:-1:-1;;3521:18:0::2;3538:1;3521:18;::::0;;3422:124::o;1158:175::-;1213:4;1243:7;:5;:7::i;:::-;-1:-1:-1;;;;;1233:17:0;:6;-1:-1:-1;;;;;1233:17:0;;1229:97;;;-1:-1:-1;1259:4:0;1252:11;;1229:97;-1:-1:-1;;;;;;1298:14:0;;1315:1;1298:14;;;:6;:14;;;;;;;;;;:18;;;1278:48;;1889:112;1928:4;1964:20;1973:10;1964:8;:20::i;490:35:18:-;;;-1:-1:-1;;;;;490:35:18;;:::o;2182:434::-;2431:20;;2474:28;;;-1:-1:-1;;;2474:28:18;;-1:-1:-1;;;;;2474:28:18;;;;;;;;;2305:4;;2431:20;;;2466:49;;;2431:20;;2474:21;;:28;;;;;;;;;;;;;;;2431:20;2474:28;;;5:2:-1;;;;30:1;27;20:12;5:2;2474:28:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2474:28:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2474:28:18;-1:-1:-1;;;;;2466:49:18;;2462:91;;;2538:4;2531:11;;;;;2462:91;2570:39;2593:5;2600:8;2570:22;:39::i;:::-;2563:46;2182:434;-1:-1:-1;;;;2182:434:18:o;1810:107:14:-;930:9;:7;:9::i;:::-;922:41;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;-1:-1:-1;;;922:41:14;;;;;;;;;;;;;;;1882:28:::1;1901:8;1882:18;:28::i;7698:152:2:-:0;7755:4;7787:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7787:20:2;7824:19;;;7698:152::o;8204:246::-;8289:4;8305:13;8321:16;8329:7;8321;:16::i;:::-;8305:32;;8366:5;-1:-1:-1;;;;;8355:16:2;:7;-1:-1:-1;;;;;8355:16:2;;:51;;;;8399:7;-1:-1:-1;;;;;8375:31:2;:20;8387:7;8375:11;:20::i;:::-;-1:-1:-1;;;;;8375:31:2;;8355:51;:87;;;;8410:32;8427:5;8434:7;8410:16;:32::i;4211:248:3:-;4305:38;4325:4;4331:2;4335:7;4305:19;:38::i;:::-;4354:47;4387:4;4393:7;4354:32;:47::i;:::-;4412:40;4440:2;4444:7;4412:27;:40::i;9775:90:2:-;9826:32;9832:16;9840:7;9832;:16::i;:::-;9850:7;9826:5;:32::i;5754:124:3:-;-1:-1:-1;;;;;5852:19:3;5816:17;5852:19;;;:12;:19;;;;;;5754:124::o;11188:343:2:-;11305:4;11330:15;:2;-1:-1:-1;;;;;11330:13:2;;:15::i;:::-;11325:58;;-1:-1:-1;11368:4:2;11361:11;;11325:58;11409:70;;-1:-1:-1;;;11409:70:2;;11446:10;11409:70;;;;;;-1:-1:-1;;;;;11409:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;11393:13;;11409:36;;;;;;11446:10;;11458:4;;11464:7;;11473:5;;11409:70;;;;;;;;;;;11393:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11409:70:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11409:70:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11409:70:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11409:70:2;-1:-1:-1;;;;;;11497:26:2;-1:-1:-1;;;11497:26:2;;-1:-1:-1;;11188:343:2;;;;;;:::o;1114:112:10:-;1205:14;;1114:112::o;1801:104:18:-;1876:15;;1850:7;;1876:22;;1896:1;1876:22;:19;:22;:::i;4709:205:3:-;4781:24;4793:2;4797:7;4781:11;:24::i;:::-;4816:40;4844:2;4848:7;4816:27;:40::i;:::-;4867;4899:7;4867:31;:40::i;1985:72:18:-;2033:15;:17;;;;;;1985:72::o;4985:162:2:-;-1:-1:-1;;;;;5105:25:2;;;5082:4;5105:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4985:162::o;2058:216:14:-;-1:-1:-1;;;;;2131:22:14;;2123:64;;;;;-1:-1:-1;;;2123:64:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:6;;2202:38;;-1:-1:-1;;;;;2202:38:14;;;;2223:6;;2202:38;;2223:6;;2202:38;2250:6;:17;;-1:-1:-1;;;;;;2250:17:14;-1:-1:-1;;;;;2250:17:14;;;;;;;;;;2058:216::o;10234:434:2:-;10355:4;-1:-1:-1;;;;;10335:24:2;:16;10343:7;10335;:16::i;:::-;-1:-1:-1;;;;;10335:24:2;;10327:69;;;;;-1:-1:-1;;;10327:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10414:16:2;;10406:53;;;;;-1:-1:-1;;;10406:53:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;10470:23;10485:7;10470:14;:23::i;:::-;-1:-1:-1;;;;;10504:23:2;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;10549:21:2;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10593:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;10593:25:2;-1:-1:-1;;;;;10593:25:2;;;;;;;;;10634:27;;10593:20;;10634:27;;;;;;;10234:434;;;:::o;7312:1125:3:-;-1:-1:-1;;;;;7599:18:3;;7574:22;7599:18;;;:12;:18;;;;;:25;:32;;7629:1;7599:32;:29;:32;:::i;:::-;7641:18;7662:26;;;:17;:26;;;;;;7574:57;;-1:-1:-1;7792:28:3;;;7788:323;;-1:-1:-1;;;;;7858:18:3;;7836:19;7858:18;;;:12;:18;;;;;:34;;7877:14;;7858:34;;;;;;;;;;;;;;7836:56;;7940:11;7907:12;:18;7920:4;-1:-1:-1;;;;;7907:18:3;-1:-1:-1;;;;;7907:18:3;;;;;;;;;;;;7926:10;7907:30;;;;;;;;;;;;;;;;;;;:44;;;;8023:30;;;:17;:30;;;;;:43;;;7788:323;-1:-1:-1;;;;;8197:18:3;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;7312:1125;;;;:::o;6168:183::-;-1:-1:-1;;;;;6281:16:3;;;;;;;:12;:16;;;;;;;;:23;;6252:26;;;:17;:26;;;;;:52;;;6314:16;;;39:1:-1;23:18;;45:23;;6314:30:3;;;;;;;;6168:183::o;5180:374::-;5255:27;5267:5;5274:7;5255:11;:27::i;:::-;5293:48;5326:5;5333:7;5293:32;:48::i;:::-;5489:1;5460:26;;;:17;:26;;;;;:30;5501:45;5478:7;5501:36;:45::i;521:524:9:-;992:20;1030:8;;;521:524::o;1569:181:11:-;1627:7;1658:5;;;1681:6;;;;1673:51;;;;;-1:-1:-1;;;1673:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1742:1;1569:181;-1:-1:-1;;;1569:181:11:o;8688:319:2:-;-1:-1:-1;;;;;8767:16:2;;8759:53;;;;;-1:-1:-1;;;8759:53:2;;;;;;;;;;;;-1:-1:-1;;;8759:53:2;;;;;;;;;;;;;;;8831:16;8839:7;8831;:16::i;:::-;8830:17;8822:50;;;;;-1:-1:-1;;;8822:50:2;;;;;;;;;;;;-1:-1:-1;;;8822:50:2;;;;;;;;;;;;;;;8883:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8883:25:2;-1:-1:-1;;;;;8883:25:2;;;;;;;;8918:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8967;;8992:7;;-1:-1:-1;;;;;8967:33:2;;;8984:1;;8967:33;;8984:1;;8967:33;8688:319;;:::o;6543:161:3:-;6646:10;:17;;6619:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;6673:24:3;;;;;;;6543:161::o;11689:171:2:-;11788:1;11752:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11752:24:2;:38;11748:106;;11841:1;11806:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11806:37:2;;;11689:171::o;1327:108:10:-;1407:14;;:21;;1426:1;1407:21;:18;:21;:::i;:::-;1390:38;;1327:108::o;1232:89::-;1295:19;;1313:1;1295:19;;;1232:89::o;1310:178:11:-;1368:7;1400:1;1395;:6;;1387:48;;;;;-1:-1:-1;;;1387:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1457:5:11;;;1310:178::o;9274:326:2:-;9376:5;-1:-1:-1;;;;;9356:25:2;:16;9364:7;9356;:16::i;:::-;-1:-1:-1;;;;;9356:25:2;;9348:69;;;;;-1:-1:-1;;;9348:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;9428:23;9443:7;9428:14;:23::i;:::-;-1:-1:-1;;;;;9462:24:2;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;9539:1;9508:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;9508:33:2;;;9557:36;9520:7;;9539:1;-1:-1:-1;;;;;9557:36:2;;;;;9539:1;;9557:36;9274:326;;:::o;8721:1061:3:-;8995:10;:17;8970:22;;8995:24;;9017:1;8995:24;:21;:24;:::i;:::-;9029:18;9050:24;;;:15;:24;;;;;;9418:10;:26;;8970:49;;-1:-1:-1;9050:24:3;;8970:49;;9418:26;;;;;;;;;;;;;;9396:48;;9480:11;9455:10;9466;9455:22;;;;;;;;;;;;;;;;;;;:36;;;;9559:28;;;:15;:28;;;;;;:41;;;9721:10;:16;;;;;;;;;;;;;;;;;;;;;;;;9774:1;9747:15;:24;9763:7;9747:24;;;;;;;;;;;:28;;;;8721:1061;;;;:::o",
  "source": "pragma solidity 0.6.2;\n\nimport \"./ERC721Full.sol\";\nimport \"./Administrable.sol\";\nimport \"./Libraries/Strings.sol\";\nimport \"./ProxyRegistry.sol\";\n\n/**\n* @title TradeableERC721Token\n* TradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality.\n* @notice an external 'burn' function restricted to owner as been added\n*/\ncontract TradeableERC721Token is ERC721Full, Administrable {\n    using Strings for string;\n    using SafeMath for uint256;\n\n    address public proxyRegistryAddress;\n    uint256 private _currentTokenId = 0;\n\n    constructor(string memory _name, string memory _symbol, address _proxyRegistryAddress) public ERC721Full(_name, _symbol) {\n        proxyRegistryAddress = _proxyRegistryAddress;\n    }\n\n    /**\n    * @dev Mints a token to an address.\n    * @param _to address of the future owner of the token\n    */\n    function mintTo(address _to) public onlyMinter {\n        uint256 newTokenId = _getNextTokenId();\n        _mint(_to, newTokenId);\n        _incrementTokenId();\n    }\n\n    /**\n     * @dev Mint several tokens to an address.\n     * @param _total total number of NFT to mint (reverts if <= 0)\n     * @param _to default owner of the new created NFT (reverts if a zero address)\n     */\n    function batchMintTo(uint _total, address _to) public onlyMinter {\n        require(_total > 0, \"mint minimum 1 token\");\n        require(_to != address(0), \"cannot mint to address 0\");\n\n        for (uint i = 0; i < _total; i++) mintTo(_to);\n\n    }\n\n    /**\n    * @dev External Burn NFT method\n    */\n    function burn(uint _tokenId) public onlyMinterBurner {\n        super._burn(_tokenId);\n    }\n\n    /**\n        * @dev calculates the next token ID based on value of _currentTokenId\n        * @return uint256 for the next token ID\n        */\n    function _getNextTokenId() private view returns (uint256) {\n        return _currentTokenId.add(1);\n    }\n\n    /**\n        * @dev increments the value of _currentTokenId\n        */\n    function _incrementTokenId() private  {\n        _currentTokenId++;\n    }\n\n    /**\n    * Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\n    */\n    function isApprovedForAll(\n        address owner,\n        address operator\n    )\n    public override\n    view\n    returns (bool)\n    {\n        // Whitelist OpenSea proxy contract for easy trading.\n        ProxyRegistry proxyRegistry = ProxyRegistry(proxyRegistryAddress);\n        if (address(proxyRegistry.proxies(owner)) == operator) {\n            return true;\n        }\n\n        return super.isApprovedForAll(owner, operator);\n    }\n}",
  "sourcePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/TradeableERC721Token.sol",
  "ast": {
    "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/TradeableERC721Token.sol",
    "exportedSymbols": {
      "TradeableERC721Token": [
        2496
      ]
    },
    "id": 2497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2327,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:18"
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2328,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 1215,
        "src": "24:26:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Administrable.sol",
        "file": "./Administrable.sol",
        "id": 2329,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 184,
        "src": "51:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/Strings.sol",
        "file": "./Libraries/Strings.sol",
        "id": 2330,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2084,
        "src": "81:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 2331,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2270,
        "src": "115:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2332,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1214,
              "src": "395:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1214",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 2333,
            "nodeType": "InheritanceSpecifier",
            "src": "395:10:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2334,
              "name": "Administrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 183,
              "src": "407:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administrable_$183",
                "typeString": "contract Administrable"
              }
            },
            "id": 2335,
            "nodeType": "InheritanceSpecifier",
            "src": "407:13:18"
          }
        ],
        "contractDependencies": [
          183,
          236,
          813,
          1214,
          1300,
          1403,
          1440,
          2258
        ],
        "contractKind": "contract",
        "documentation": "@title TradeableERC721Token\nTradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality.\n@notice an external 'burn' function restricted to owner as been added",
        "fullyImplemented": true,
        "id": 2496,
        "linearizedBaseContracts": [
          2496,
          183,
          2258,
          1214,
          1440,
          813,
          1403,
          236,
          1300
        ],
        "name": "TradeableERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2338,
            "libraryName": {
              "contractScope": null,
              "id": 2336,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2083,
              "src": "433:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$2083",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "427:25:18",
            "typeName": {
              "id": 2337,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "445:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 2341,
            "libraryName": {
              "contractScope": null,
              "id": 2339,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1657,
              "src": "463:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1657",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "457:27:18",
            "typeName": {
              "id": 2340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "476:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cd7c0326",
            "id": 2343,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2496,
            "src": "490:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2342,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2346,
            "name": "_currentTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2496,
            "src": "531:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "531:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 2345,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "565:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2363,
              "nodeType": "Block",
              "src": "694:61:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2359,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2343,
                      "src": "704:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2360,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2352,
                      "src": "727:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "704:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2362,
                  "nodeType": "ExpressionStatement",
                  "src": "704:44:18"
                }
              ]
            },
            "documentation": null,
            "id": 2364,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2355,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2348,
                    "src": "678:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2356,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2350,
                    "src": "685:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2357,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2354,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1214,
                  "src": "667:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1214_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "667:26:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2348,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "585:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2350,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "606:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2352,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "629:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:75:18"
            },
            "returnParameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:18"
            },
            "scope": 2496,
            "src": "573:182:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "921:116:18",
              "statements": [
                {
                  "assignments": [
                    2372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2372,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2384,
                      "src": "931:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2375,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2373,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2452,
                      "src": "952:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "931:38:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "985:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "990:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2376,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1007
                      ],
                      "referencedDeclaration": 1007,
                      "src": "979:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "979:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "979:22:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2381,
                      "name": "_incrementTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2459,
                      "src": "1011:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:19:18"
                }
              ]
            },
            "documentation": "@dev Mints a token to an address.\n@param _to address of the future owner of the token",
            "functionSelector": "755edd17",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2369,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2368,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "910:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "910:10:18"
              }
            ],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2385,
                  "src": "890:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:13:18"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:18"
            },
            "scope": 2496,
            "src": "874:163:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "1321:181:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2395,
                          "name": "_total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1339:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1348:1:18",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1339:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206d696e696d756d203120746f6b656e",
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:22:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20f1493e208f8957fba59ea64823604b45a291cea46bb899d02d9f47b867b3be",
                          "typeString": "literal_string \"mint minimum 1 token\""
                        },
                        "value": "mint minimum 1 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20f1493e208f8957fba59ea64823604b45a291cea46bb899d02d9f47b867b3be",
                          "typeString": "literal_string \"mint minimum 1 token\""
                        }
                      ],
                      "id": 2394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1331:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2400,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:43:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2402,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1392:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1407:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1399:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1399:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1392:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f74206d696e7420746f20616464726573732030",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:26:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea3eb20c71adda31b617cbddca32d308d8237718e3ade028a7330c6e2bf53762",
                          "typeString": "literal_string \"cannot mint to address 0\""
                        },
                        "value": "cannot mint to address 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea3eb20c71adda31b617cbddca32d308d8237718e3ade028a7330c6e2bf53762",
                          "typeString": "literal_string \"cannot mint to address 0\""
                        }
                      ],
                      "id": 2401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1384:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:54:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:54:18"
                },
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2422,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1490:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2421,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1483:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1483:11:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2424,
                    "nodeType": "ExpressionStatement",
                    "src": "1483:11:18"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2415,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "1466:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2416,
                      "name": "_total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2387,
                      "src": "1470:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2425,
                  "initializationExpression": {
                    "assignments": [
                      2412
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2412,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2425,
                        "src": "1454:6:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2411,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2414,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1463:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1454:10:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1478:3:18",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2412,
                        "src": "1478:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2420,
                    "nodeType": "ExpressionStatement",
                    "src": "1478:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "1449:45:18"
                }
              ]
            },
            "documentation": "@dev Mint several tokens to an address.\n@param _total total number of NFT to mint (reverts if <= 0)\n@param _to default owner of the new created NFT (reverts if a zero address)",
            "functionSelector": "8d0f5b70",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2391,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "1310:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1310:10:18"
              }
            ],
            "name": "batchMintTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "name": "_total",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2427,
                  "src": "1277:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2427,
                  "src": "1290:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:26:18"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:18"
            },
            "scope": 2496,
            "src": "1256:246:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2440,
              "nodeType": "Block",
              "src": "1612:38:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2437,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "1634:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2434,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1622:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TradeableERC721Token_$2496",
                          "typeString": "contract super TradeableERC721Token"
                        }
                      },
                      "id": 2436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "1622:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2439,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:21:18"
                }
              ]
            },
            "documentation": "@dev External Burn NFT method",
            "functionSelector": "42966c68",
            "id": 2441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2432,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2431,
                  "name": "onlyMinterBurner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 115,
                  "src": "1595:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1595:16:18"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2441,
                  "src": "1573:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1572:15:18"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:18"
            },
            "scope": 2496,
            "src": "1559:91:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "1859:46:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1896:1:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2446,
                        "name": "_currentTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2346,
                        "src": "1876:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1635,
                      "src": "1876:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2445,
                  "id": 2450,
                  "nodeType": "Return",
                  "src": "1869:29:18"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on value of _currentTokenId\n@return uint256 for the next token ID",
            "id": 2452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:18"
            },
            "returnParameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2452,
                  "src": "1850:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1849:9:18"
            },
            "scope": 2496,
            "src": "1801:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2458,
              "nodeType": "Block",
              "src": "2023:34:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2033:17:18",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2455,
                      "name": "_currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "2033:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:17:18"
                }
              ]
            },
            "documentation": "@dev increments the value of _currentTokenId",
            "id": 2459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_incrementTokenId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2011:2:18"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2023:0:18"
            },
            "scope": 2496,
            "src": "1985:72:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              459
            ],
            "body": {
              "id": 2494,
              "nodeType": "Block",
              "src": "2315:301:18",
              "statements": [
                {
                  "assignments": [
                    2470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2470,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2494,
                      "src": "2387:27:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2469,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2269,
                        "src": "2387:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2474,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2472,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2343,
                        "src": "2431:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2471,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2269,
                      "src": "2417:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$2269_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 2473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:65:18"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2479,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2461,
                              "src": "2496:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2477,
                              "name": "proxyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "2474:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                                "typeString": "contract ProxyRegistry"
                              }
                            },
                            "id": 2478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proxies",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "2474:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$2261_$",
                              "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                            }
                          },
                          "id": 2480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2474:28:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$2261",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$2261",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        ],
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2466:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2466:37:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2482,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "2507:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2466:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2487,
                  "nodeType": "IfStatement",
                  "src": "2462:91:18",
                  "trueBody": {
                    "id": 2486,
                    "nodeType": "Block",
                    "src": "2517:36:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2538:4:18",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2468,
                        "id": 2485,
                        "nodeType": "Return",
                        "src": "2531:11:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2593:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2491,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "2600:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2488,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2570:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TradeableERC721Token_$2496",
                          "typeString": "contract super TradeableERC721Token"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "2570:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2468,
                  "id": 2493,
                  "nodeType": "Return",
                  "src": "2563:46:18"
                }
              ]
            },
            "documentation": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.",
            "functionSelector": "e985e9c5",
            "id": 2495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2274:8:18"
            },
            "parameters": {
              "id": 2464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2217:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2240:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2207:55:18"
            },
            "returnParameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2467,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2305:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2304:6:18"
            },
            "scope": 2496,
            "src": "2182:434:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2497,
        "src": "362:2256:18"
      }
    ],
    "src": "0:2618:18"
  },
  "legacyAST": {
    "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/TradeableERC721Token.sol",
    "exportedSymbols": {
      "TradeableERC721Token": [
        2496
      ]
    },
    "id": 2497,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2327,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:18"
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2328,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 1215,
        "src": "24:26:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Administrable.sol",
        "file": "./Administrable.sol",
        "id": 2329,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 184,
        "src": "51:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/Libraries/Strings.sol",
        "file": "./Libraries/Strings.sol",
        "id": 2330,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2084,
        "src": "81:33:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/joachimlebrun/IdeaProjects/ERC721/contracts/ProxyRegistry.sol",
        "file": "./ProxyRegistry.sol",
        "id": 2331,
        "nodeType": "ImportDirective",
        "scope": 2497,
        "sourceUnit": 2270,
        "src": "115:29:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2332,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1214,
              "src": "395:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1214",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 2333,
            "nodeType": "InheritanceSpecifier",
            "src": "395:10:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2334,
              "name": "Administrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 183,
              "src": "407:13:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Administrable_$183",
                "typeString": "contract Administrable"
              }
            },
            "id": 2335,
            "nodeType": "InheritanceSpecifier",
            "src": "407:13:18"
          }
        ],
        "contractDependencies": [
          183,
          236,
          813,
          1214,
          1300,
          1403,
          1440,
          2258
        ],
        "contractKind": "contract",
        "documentation": "@title TradeableERC721Token\nTradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality.\n@notice an external 'burn' function restricted to owner as been added",
        "fullyImplemented": true,
        "id": 2496,
        "linearizedBaseContracts": [
          2496,
          183,
          2258,
          1214,
          1440,
          813,
          1403,
          236,
          1300
        ],
        "name": "TradeableERC721Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2338,
            "libraryName": {
              "contractScope": null,
              "id": 2336,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2083,
              "src": "433:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$2083",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "427:25:18",
            "typeName": {
              "id": 2337,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "445:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            }
          },
          {
            "id": 2341,
            "libraryName": {
              "contractScope": null,
              "id": 2339,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1657,
              "src": "463:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1657",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "457:27:18",
            "typeName": {
              "id": 2340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "476:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "cd7c0326",
            "id": 2343,
            "name": "proxyRegistryAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2496,
            "src": "490:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2342,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "490:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2346,
            "name": "_currentTokenId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2496,
            "src": "531:35:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "531:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 2345,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "565:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2363,
              "nodeType": "Block",
              "src": "694:61:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2359,
                      "name": "proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2343,
                      "src": "704:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2360,
                      "name": "_proxyRegistryAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2352,
                      "src": "727:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "704:44:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2362,
                  "nodeType": "ExpressionStatement",
                  "src": "704:44:18"
                }
              ]
            },
            "documentation": null,
            "id": 2364,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2355,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2348,
                    "src": "678:5:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2356,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2350,
                    "src": "685:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2357,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2354,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1214,
                  "src": "667:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1214_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "667:26:18"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2348,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "585:19:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2347,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2350,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "606:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2349,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2352,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2364,
                  "src": "629:29:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:75:18"
            },
            "returnParameters": {
              "id": 2358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:0:18"
            },
            "scope": 2496,
            "src": "573:182:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "921:116:18",
              "statements": [
                {
                  "assignments": [
                    2372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2372,
                      "name": "newTokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2384,
                      "src": "931:18:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2371,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2375,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2373,
                      "name": "_getNextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2452,
                      "src": "952:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "952:17:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "931:38:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2377,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2366,
                        "src": "985:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2378,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "990:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2376,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1007
                      ],
                      "referencedDeclaration": 1007,
                      "src": "979:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "979:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2380,
                  "nodeType": "ExpressionStatement",
                  "src": "979:22:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2381,
                      "name": "_incrementTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2459,
                      "src": "1011:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1011:19:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:19:18"
                }
              ]
            },
            "documentation": "@dev Mints a token to an address.\n@param _to address of the future owner of the token",
            "functionSelector": "755edd17",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2369,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2368,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "910:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "910:10:18"
              }
            ],
            "name": "mintTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2366,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2385,
                  "src": "890:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "889:13:18"
            },
            "returnParameters": {
              "id": 2370,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "921:0:18"
            },
            "scope": 2496,
            "src": "874:163:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "1321:181:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2395,
                          "name": "_total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "1339:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1348:1:18",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1339:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206d696e696d756d203120746f6b656e",
                        "id": 2398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1351:22:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20f1493e208f8957fba59ea64823604b45a291cea46bb899d02d9f47b867b3be",
                          "typeString": "literal_string \"mint minimum 1 token\""
                        },
                        "value": "mint minimum 1 token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20f1493e208f8957fba59ea64823604b45a291cea46bb899d02d9f47b867b3be",
                          "typeString": "literal_string \"mint minimum 1 token\""
                        }
                      ],
                      "id": 2394,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1331:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1331:43:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2400,
                  "nodeType": "ExpressionStatement",
                  "src": "1331:43:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2402,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1392:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1407:1:18",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1399:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1399:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:10:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1392:17:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e6e6f74206d696e7420746f20616464726573732030",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1411:26:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea3eb20c71adda31b617cbddca32d308d8237718e3ade028a7330c6e2bf53762",
                          "typeString": "literal_string \"cannot mint to address 0\""
                        },
                        "value": "cannot mint to address 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea3eb20c71adda31b617cbddca32d308d8237718e3ade028a7330c6e2bf53762",
                          "typeString": "literal_string \"cannot mint to address 0\""
                        }
                      ],
                      "id": 2401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1384:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:54:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:54:18"
                },
                {
                  "body": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2422,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2389,
                          "src": "1490:3:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2421,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1483:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 2423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1483:11:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2424,
                    "nodeType": "ExpressionStatement",
                    "src": "1483:11:18"
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2415,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2412,
                      "src": "1466:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2416,
                      "name": "_total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2387,
                      "src": "1470:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1466:10:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2425,
                  "initializationExpression": {
                    "assignments": [
                      2412
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2412,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 2425,
                        "src": "1454:6:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2411,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1454:4:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 2414,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1463:1:18",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1454:10:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1478:3:18",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 2418,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2412,
                        "src": "1478:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2420,
                    "nodeType": "ExpressionStatement",
                    "src": "1478:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "1449:45:18"
                }
              ]
            },
            "documentation": "@dev Mint several tokens to an address.\n@param _total total number of NFT to mint (reverts if <= 0)\n@param _to default owner of the new created NFT (reverts if a zero address)",
            "functionSelector": "8d0f5b70",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2391,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 105,
                  "src": "1310:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1310:10:18"
              }
            ],
            "name": "batchMintTo",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "name": "_total",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2427,
                  "src": "1277:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2427,
                  "src": "1290:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1290:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:26:18"
            },
            "returnParameters": {
              "id": 2393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1321:0:18"
            },
            "scope": 2496,
            "src": "1256:246:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2440,
              "nodeType": "Block",
              "src": "1612:38:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2437,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "1634:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2434,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1622:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TradeableERC721Token_$2496",
                          "typeString": "contract super TradeableERC721Token"
                        }
                      },
                      "id": 2436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "1622:11:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1622:21:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2439,
                  "nodeType": "ExpressionStatement",
                  "src": "1622:21:18"
                }
              ]
            },
            "documentation": "@dev External Burn NFT method",
            "functionSelector": "42966c68",
            "id": 2441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2432,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2431,
                  "name": "onlyMinterBurner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 115,
                  "src": "1595:16:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1595:16:18"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2441,
                  "src": "1573:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1572:15:18"
            },
            "returnParameters": {
              "id": 2433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1612:0:18"
            },
            "scope": 2496,
            "src": "1559:91:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2451,
              "nodeType": "Block",
              "src": "1859:46:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 2448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1896:1:18",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2446,
                        "name": "_currentTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2346,
                        "src": "1876:15:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1635,
                      "src": "1876:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:22:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2445,
                  "id": 2450,
                  "nodeType": "Return",
                  "src": "1869:29:18"
                }
              ]
            },
            "documentation": "@dev calculates the next token ID based on value of _currentTokenId\n@return uint256 for the next token ID",
            "id": 2452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getNextTokenId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1825:2:18"
            },
            "returnParameters": {
              "id": 2445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2444,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2452,
                  "src": "1850:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2443,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1849:9:18"
            },
            "scope": 2496,
            "src": "1801:104:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2458,
              "nodeType": "Block",
              "src": "2023:34:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2033:17:18",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 2455,
                      "name": "_currentTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "2033:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:17:18"
                }
              ]
            },
            "documentation": "@dev increments the value of _currentTokenId",
            "id": 2459,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_incrementTokenId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2011:2:18"
            },
            "returnParameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2023:0:18"
            },
            "scope": 2496,
            "src": "1985:72:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              459
            ],
            "body": {
              "id": 2494,
              "nodeType": "Block",
              "src": "2315:301:18",
              "statements": [
                {
                  "assignments": [
                    2470
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2470,
                      "name": "proxyRegistry",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2494,
                      "src": "2387:27:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                        "typeString": "contract ProxyRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2469,
                        "name": "ProxyRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2269,
                        "src": "2387:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                          "typeString": "contract ProxyRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2474,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2472,
                        "name": "proxyRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2343,
                        "src": "2431:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2471,
                      "name": "ProxyRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2269,
                      "src": "2417:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ProxyRegistry_$2269_$",
                        "typeString": "type(contract ProxyRegistry)"
                      }
                    },
                    "id": 2473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                      "typeString": "contract ProxyRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:65:18"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2479,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2461,
                              "src": "2496:5:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2477,
                              "name": "proxyRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2470,
                              "src": "2474:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ProxyRegistry_$2269",
                                "typeString": "contract ProxyRegistry"
                              }
                            },
                            "id": 2478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proxies",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2268,
                            "src": "2474:21:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_contract$_OwnableDelegateProxy_$2261_$",
                              "typeString": "function (address) view external returns (contract OwnableDelegateProxy)"
                            }
                          },
                          "id": 2480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2474:28:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$2261",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OwnableDelegateProxy_$2261",
                            "typeString": "contract OwnableDelegateProxy"
                          }
                        ],
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2466:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2466:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2466:37:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2482,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2463,
                      "src": "2507:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2466:49:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2487,
                  "nodeType": "IfStatement",
                  "src": "2462:91:18",
                  "trueBody": {
                    "id": 2486,
                    "nodeType": "Block",
                    "src": "2517:36:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 2484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2538:4:18",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2468,
                        "id": 2485,
                        "nodeType": "Return",
                        "src": "2531:11:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2461,
                        "src": "2593:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2491,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2463,
                        "src": "2600:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2488,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2570:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TradeableERC721Token_$2496",
                          "typeString": "contract super TradeableERC721Token"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 459,
                      "src": "2570:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view returns (bool)"
                      }
                    },
                    "id": 2492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2468,
                  "id": 2493,
                  "nodeType": "Return",
                  "src": "2563:46:18"
                }
              ]
            },
            "documentation": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.",
            "functionSelector": "e985e9c5",
            "id": 2495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2274:8:18"
            },
            "parameters": {
              "id": 2464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2217:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2240:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2207:55:18"
            },
            "returnParameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2467,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2495,
                  "src": "2305:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2466,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2304:6:18"
            },
            "scope": 2496,
            "src": "2182:434:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2497,
        "src": "362:2256:18"
      }
    ],
    "src": "0:2618:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.0",
  "updatedAt": "2020-10-15T20:40:47.732Z",
  "devdoc": {
    "methods": {
      "adminRightsOf(address)": {
        "details": "know if an address has admin rights and what type of right it has",
        "params": {
          "_admin": "the address to find admin rights of"
        },
        "returns": {
          "_0": "int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens "
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "batchMintTo(uint256,address)": {
        "details": "Mint several tokens to an address.",
        "params": {
          "_to": "default owner of the new created NFT (reverts if a zero address)",
          "_total": "total number of NFT to mint (reverts if <= 0)"
        }
      },
      "burn(uint256)": {
        "details": "External Burn NFT method"
      },
      "canMint()": {
        "details": "canMint external ",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens"
        }
      },
      "canMintBurn()": {
        "details": "canBurn external",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "grantMinterBurnerRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter and burner rights to"
        }
      },
      "grantMinterRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter rights to"
        }
      },
      "isMinter(address)": {
        "details": "verifiy if an address can mint new tokens",
        "params": {
          "_admin": ": the address to verify minting rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint new tokens"
        }
      },
      "isMinterBurner(address)": {
        "details": "verifiy if an address has rights to mint and burn new tokens",
        "params": {
          "_admin": ": the address to verify minter-burner rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint and burn new tokens"
        }
      },
      "mintTo(address)": {
        "details": "Mints a token to an address.",
        "params": {
          "_to": "address of the future owner of the token"
        }
      },
      "name()": {
        "details": "Gets the token name",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revokeAdminRights(address)": {
        "details": "owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to revoke admin access to"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFromWithData(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokensOf(address)": {
        "details": "@notice Non-Standard method to retrieve all NFTs that specific owner owns",
        "returns": {
          "_0": "uint[] containing all NFTs that owner owns"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "TradeableERC721Token TradeableERC721Token - ERC721 contract that whitelists a trading address, and has minting functionality."
  },
  "userdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    },
    "notice": "an external 'burn' function restricted to owner as been added"
  }
}