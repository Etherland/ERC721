{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.source : openzeppelin-solidity/contracts/drafts/Counters.sol\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol\":{\"keccak256\":\"0x86f66ff91d9134f2a5a4897053a57333c3c8729fc821b84fdc89090be92de467\",\"urls\":[\"bzz-raw://acfadf8930b4c52606690af843144a97d25ab503c8fca3785209c053acd62037\",\"dweb:/ipfs/QmNTSZvh6SZ5FwXT8yP1BLZJQ37FZGAWSTTXhAupMERWM1\"]},\"/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/SafeMath.sol\":{\"keccak256\":\"0x7ec50df97342f10890706aab8d8fba17d9740b8ea96ac5daa9170fe2263cf909\",\"urls\":[\"bzz-raw://f88c51f5fb102b26ef38ac42a886460970ffb3a424f83aa54d46228b7d5012e1\",\"dweb:/ipfs/Qmd9WfsMKCymG16NsMKMhdBBLTHPwqLeUBZrySrSWb3pwR\"]}},\"version\":1}",
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220628e3ec1465a5896c8661b48ae9474bd19b30c30e0d92f6889af2549efdb117c64736f6c63430006020033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220628e3ec1465a5896c8661b48ae9474bd19b30c30e0d92f6889af2549efdb117c64736f6c63430006020033",
  "sourceMap": "678:759:13:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "678:759:13:-:0;;;;;;;;",
  "source": "pragma solidity 0.6.2;\n\nimport \"./SafeMath.sol\";\n\n\n/**\n* @title Counters\n* @author Matt Condon (@shrugs)\n* @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n* of elements in a mapping, issuing ERC721 ids, or counting request ids\n*\n* Include with `using Counters for Counters.Counter;`\n* Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\n* overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n* directly accessed.\n* @dev source : openzeppelin-solidity/contracts/drafts/Counters.sol\n*/\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}",
  "sourcePath": "/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol",
  "ast": {
    "absolutePath": "/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        1696
      ]
    },
    "id": 1697,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1649,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:13"
      },
      {
        "absolutePath": "/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1650,
        "nodeType": "ImportDirective",
        "scope": 1697,
        "sourceUnit": 1830,
        "src": "24:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids\n* Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.\n@dev source : openzeppelin-solidity/contracts/drafts/Counters.sol",
        "fullyImplemented": true,
        "id": 1696,
        "linearizedBaseContracts": [
          1696
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1653,
            "libraryName": {
              "contractScope": null,
              "id": 1651,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1829,
              "src": "707:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1829",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "701:27:13",
            "typeName": {
              "id": 1652,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "720:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 1656,
            "members": [
              {
                "constant": false,
                "id": 1655,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1656,
                "src": "1073:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1654,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1073:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 1696,
            "src": "734:374:13",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1188:38:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1663,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1658,
                      "src": "1205:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1655,
                    "src": "1205:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1662,
                  "id": 1665,
                  "nodeType": "Return",
                  "src": "1198:21:13"
                }
              ]
            },
            "documentation": null,
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1667,
                  "src": "1131:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1657,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1131:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:25:13"
            },
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1661,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1667,
                  "src": "1179:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:9:13"
            },
            "scope": 1696,
            "src": "1114:112:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1678,
              "nodeType": "Block",
              "src": "1285:36:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1672,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1669,
                        "src": "1295:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1295:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1313:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1295:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1677,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:19:13"
                }
              ]
            },
            "documentation": null,
            "id": 1679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1679,
                  "src": "1251:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1668,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1251:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:25:13"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:13"
            },
            "scope": 1696,
            "src": "1232:89:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1694,
              "nodeType": "Block",
              "src": "1380:55:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1684,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "1390:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1686,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1390:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1426:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1687,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "1407:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1655,
                          "src": "1407:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1782,
                        "src": "1407:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1407:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1390:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1693,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:38:13"
                }
              ]
            },
            "documentation": null,
            "id": 1695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1681,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1695,
                  "src": "1346:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1680,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1346:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1345:25:13"
            },
            "returnParameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:13"
            },
            "scope": 1696,
            "src": "1327:108:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1697,
        "src": "678:759:13"
      }
    ],
    "src": "0:1437:13"
  },
  "legacyAST": {
    "absolutePath": "/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        1696
      ]
    },
    "id": 1697,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1649,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:13"
      },
      {
        "absolutePath": "/Users/proapps/Documents/Mat/Apps/Etherland/ERC721/contracts/Libraries/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 1650,
        "nodeType": "ImportDirective",
        "scope": 1697,
        "sourceUnit": 1830,
        "src": "24:24:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids\n* Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.\n@dev source : openzeppelin-solidity/contracts/drafts/Counters.sol",
        "fullyImplemented": true,
        "id": 1696,
        "linearizedBaseContracts": [
          1696
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1653,
            "libraryName": {
              "contractScope": null,
              "id": 1651,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1829,
              "src": "707:8:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1829",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "701:27:13",
            "typeName": {
              "id": 1652,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "720:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 1656,
            "members": [
              {
                "constant": false,
                "id": 1655,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1656,
                "src": "1073:14:13",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1654,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1073:7:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 1696,
            "src": "734:374:13",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1666,
              "nodeType": "Block",
              "src": "1188:38:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1663,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1658,
                      "src": "1205:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 1664,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1655,
                    "src": "1205:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1662,
                  "id": 1665,
                  "nodeType": "Return",
                  "src": "1198:21:13"
                }
              ]
            },
            "documentation": null,
            "id": 1667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1658,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1667,
                  "src": "1131:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1657,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1131:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1130:25:13"
            },
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1661,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1667,
                  "src": "1179:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1179:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1178:9:13"
            },
            "scope": 1696,
            "src": "1114:112:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1678,
              "nodeType": "Block",
              "src": "1285:36:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1672,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1669,
                        "src": "1295:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1295:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1313:1:13",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1295:19:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1677,
                  "nodeType": "ExpressionStatement",
                  "src": "1295:19:13"
                }
              ]
            },
            "documentation": null,
            "id": 1679,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1669,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1679,
                  "src": "1251:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1668,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1251:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1250:25:13"
            },
            "returnParameters": {
              "id": 1671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:0:13"
            },
            "scope": 1696,
            "src": "1232:89:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1694,
              "nodeType": "Block",
              "src": "1380:55:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1684,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "1390:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1686,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1655,
                      "src": "1390:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1426:1:13",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1687,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1681,
                            "src": "1407:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1655,
                          "src": "1407:14:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1782,
                        "src": "1407:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1407:21:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1390:38:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1693,
                  "nodeType": "ExpressionStatement",
                  "src": "1390:38:13"
                }
              ]
            },
            "documentation": null,
            "id": 1695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1681,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1695,
                  "src": "1346:23:13",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1680,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1656,
                    "src": "1346:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1656_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1345:25:13"
            },
            "returnParameters": {
              "id": 1683,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1380:0:13"
            },
            "scope": 1696,
            "src": "1327:108:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1697,
        "src": "678:759:13"
      }
    ],
    "src": "0:1437:13"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-02T19:13:45.975Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.source : openzeppelin-solidity/contracts/drafts/Counters.sol",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}