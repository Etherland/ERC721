{
  "contractName": "Etherland",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int16",
          "name": "adminRights",
          "type": "int16"
        }
      ],
      "name": "AdminRightsGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "noAdmin",
          "type": "address"
        }
      ],
      "name": "AdminRightsRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "BaseTokenUriUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "adminRightsOf",
      "outputs": [
        {
          "internalType": "int16",
          "name": "",
          "type": "int16"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_total",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "canMintBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getMetadatas",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterBurnerRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinterBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxyRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "removeMetadatas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "revokeAdminRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFromWithData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadatas",
          "type": "string"
        }
      ],
      "name": "setMetadatas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setBaseTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCode",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int16\",\"name\":\"adminRights\",\"type\":\"int16\"}],\"name\":\"AdminRightsGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"noAdmin\",\"type\":\"address\"}],\"name\":\"AdminRightsRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"BaseTokenUriUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"adminRightsOf\",\"outputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getMetadatas\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterBurnerRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinterBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"removeMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFromWithData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadatas\",\"type\":\"string\"}],\"name\":\"setMetadatas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"adminRightsOf(address)\":{\"details\":\"know if an address has admin rights and its type of rights\",\"params\":{\"_admin\":\"the address to find admin rights of\"},\"returns\":{\"_0\":\"int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens \"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseTokenURI()\":{\"details\":\"Retrieve all NFTs base token uri \"},\"batchMintTo(uint256,address)\":{\"details\":\"Mint several tokens to an address.\",\"params\":{\"_to\":\"default owner of the new created NFT (reverts if a zero address)\",\"_total\":\"total number of NFT to mint (reverts if <= 0)\"}},\"burn(uint256)\":{\"details\":\"External Burn NFT method\"},\"canMint()\":{\"details\":\"canMint external \",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens\"}},\"canMintBurn()\":{\"details\":\"canBurn external\",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"grantMinterBurnerRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter and burner rights to\"}},\"grantMinterRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter rights to\"}},\"init(string,string,address,string,address)\":{\"details\":\"Logic code implementation contact constructorMUST be called by deployer only if contract has not been initialized before\"},\"isMinter(address)\":{\"details\":\"verifiy if an address can mint new tokens\",\"params\":{\"_admin\":\": the address to verify minting rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint new tokens\"}},\"isMinterBurner(address)\":{\"details\":\"verifiy if an address has rights to mint and burn new tokens\",\"params\":{\"_admin\":\": the address to verify minter-burner rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint and burn new tokens\"}},\"mintTo(address)\":{\"details\":\"Mints a token to an address.\",\"params\":{\"_to\":\"address of the future owner of the token\"}},\"name()\":{\"details\":\"Gets the token name\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"revokeAdminRights(address)\":{\"details\":\"owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to revoke admin access to\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFromWithData(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setBaseTokenURI(string)\":{\"details\":\"Set the base token uri for all NFTs\"},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Retrieve the uri of a specific token \",\"params\":{\"_tokenId\":\"the id of the token to retrieve the uri of\"},\"returns\":{\"_0\":\"computed uri string pointing to a specific _tokenId\"}},\"tokensOf(address)\":{\"details\":\"@notice Non-Standard method to retrieve all NFTs that specific owner owns\",\"returns\":{\"_0\":\"uint[] containing all NFTs that owner owns\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateCode(address)\":{\"details\":\"EIP-1822 featureRealize an update of the Etherland logic code calls the proxy contract to update stored logic code contract address at keccak256(\\\"PROXIABLE\\\")\"}},\"title\":\"Etherland NFT Assets\"},\"userdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Etherland.sol\":\"Etherland\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Administrable.sol\":{\"keccak256\":\"0xb56271eb3d8eb52cf098003fb3654ed150d07ccdfc6ddcfe4f546bb443718f45\",\"urls\":[\"bzz-raw://576f42b80d87a8774605b9d042280c575c53ae5ea0fed96e8594edcebf7ac3a5\",\"dweb:/ipfs/QmR836QA6v4UpkPxycxCxXSaNXsPq4Bbb2MQ5gd2DxowZg\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC165.sol\":{\"keccak256\":\"0x4857a519478cda7a815cefada20cad82ecb373053a071ec03945f71b05a6a8e6\",\"urls\":[\"bzz-raw://6e60a12707dc9aac3c38a4c0c14fe1c9b4c461809dae57f8c79b9b5e0029cd0e\",\"dweb:/ipfs/Qmbz5jczVMZgVXkSwLCxaPhT1k1xk9WFdeZMWEeUQwm7Qe\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC1822/Proxiable.sol\":{\"keccak256\":\"0x7a34d249440c350693e954c8860700d121fabae8d21ca4041d3ffb2e4cd2325e\",\"urls\":[\"bzz-raw://96bc4e443578a70ccaa25738ea0b1b47b99619859ca9ada835bc43d48cf9fda9\",\"dweb:/ipfs/QmVb1FTRjA8AJyt4ZTbUqBPWeSiXN8245cmQVg7qi8ajaq\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC721.sol\":{\"keccak256\":\"0xea11f98b68b7b0f8c838c28612db185b5d4c136fd3423cd4812219c133019568\",\"urls\":[\"bzz-raw://238e93c3222709b9a1157bbe84295bcaffd3ed971076c625ddc268083692d51b\",\"dweb:/ipfs/QmX2g54u82Gy5L2VJvH3BdUgrXjAnJKpXpiS23Mha4xpcd\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC721Full.sol\":{\"keccak256\":\"0x41a4cc1e3ec4044721c2e8dcdf42bed92599b6816ce26b3d52c6219dc07c0f6f\",\"urls\":[\"bzz-raw://ae6704f0d392eb44d5945e06450e63314f07531fb8aa1076c104b9b6d08ba9f6\",\"dweb:/ipfs/QmduZxbp9BrmjCrHswr7cfHrC37W82hUWUAN75qwXjsxxk\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Etherland.sol\":{\"keccak256\":\"0x246fe455144cec6e4d7ac100ba68991ca6024676c4e9c73bb1a2df8a62295e44\",\"urls\":[\"bzz-raw://9d7f72c04679cd1b25b77f5e1f0e7c0b79fb0179b49160803cfe8a0419bbb0c1\",\"dweb:/ipfs/QmVvVkKRwPn1j3yjLc9vraQs7c5fZMW5pMdUmQwbFoD4oX\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Interfaces/IERC165.sol\":{\"keccak256\":\"0xb5c11194ee0591a687c4e855574850e9defc3e60415ebd20618220ec27aacf9d\",\"urls\":[\"bzz-raw://8187d58ed77c8bc94bc8f51e72a930538492f4e96bda45f003e6b22fde2cf4b3\",\"dweb:/ipfs/QmW2rdZBL6k6kdNQRMmKUnBu6m1uS9jAgv1A9cob1fBC8B\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Interfaces/IERC721.sol\":{\"keccak256\":\"0x50ba4f192bf03f70c08227935d81d906d2d3591120ff2770b92f023f81775c87\",\"urls\":[\"bzz-raw://2dd5283e6379ab433e5fb3f4f92b5ae5c814912ea0e4894bea67c1b45c3288ad\",\"dweb:/ipfs/QmUk4mJYtFaWiCBJXWV897d81j2hfXP5Wjoy8G9LFGqEYD\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Interfaces/IERC721Full.sol\":{\"keccak256\":\"0x0947267be9df72236b96eb1dde103e967512b2fce87594594c41d7d70febdaae\",\"urls\":[\"bzz-raw://dfab1506a185a04120d89e34ffda8dc5a6c78e14ed006ec504a730afddedaa86\",\"dweb:/ipfs/QmWzdoWqyv9imyKWBJztWEBmcna5pBz27vGyueB8Sn1fm9\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xaf926ee5f8e0fb4941e267163e5200150e1890509828788bc58987f4628a0a3e\",\"urls\":[\"bzz-raw://0a3ee50fe936a0e5811ddfe21801b9857cfa0267a8caf4def1736b515b3550aa\",\"dweb:/ipfs/QmZ6zmvuDZSv6GwkamZaVtkzjB7DEnVUScfgu7Kx5kym9b\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Libraries/Address.sol\":{\"keccak256\":\"0xc1b21eba9e61e8c264e5c1f69e5807b5397044d3455a53b52b49cb904a5b9232\",\"urls\":[\"bzz-raw://6b274194f5da7871e693c78149cd691dde2d5981e3b992da26fd66a3915c0dd8\",\"dweb:/ipfs/QmVitNkxSaak1PA7EPhoEMbEVg25HHGyFU2A2ixU5nfpxm\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Libraries/Counters.sol\":{\"keccak256\":\"0x86f66ff91d9134f2a5a4897053a57333c3c8729fc821b84fdc89090be92de467\",\"urls\":[\"bzz-raw://acfadf8930b4c52606690af843144a97d25ab503c8fca3785209c053acd62037\",\"dweb:/ipfs/QmNTSZvh6SZ5FwXT8yP1BLZJQ37FZGAWSTTXhAupMERWM1\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Libraries/SafeMath.sol\":{\"keccak256\":\"0x7ec50df97342f10890706aab8d8fba17d9740b8ea96ac5daa9170fe2263cf909\",\"urls\":[\"bzz-raw://f88c51f5fb102b26ef38ac42a886460970ffb3a424f83aa54d46228b7d5012e1\",\"dweb:/ipfs/Qmd9WfsMKCymG16NsMKMhdBBLTHPwqLeUBZrySrSWb3pwR\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Libraries/Strings.sol\":{\"keccak256\":\"0x9742061a3f1f2afd8b609d0b635f7507b03a92e02f9ae0a38c25bd5cb73e988b\",\"urls\":[\"bzz-raw://ef5c7a85e069f3c2b98c2f2bc535212f82ba4d3e9a511eb1c66fd23af2010ec1\",\"dweb:/ipfs/QmQngMmTKaT9xBDung38sTi7ZkFLdQDg1r3QVLiexcajNd\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Ownable.sol\":{\"keccak256\":\"0x34c079eac87e99cfaade6a8af064d1bd5421525cc70c81022953021a75332b8f\",\"urls\":[\"bzz-raw://ab4e15c65c22e3e9ce00ff9597e3034eb740309ac628025cfe4eecd4a2e955f6\",\"dweb:/ipfs/QmQ8DdEuokvDXTxZYb9sPavQRT7uTjry3V7poVq7xQuhhm\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/OwnableDelegateProxy.sol\":{\"keccak256\":\"0x10ea8662e140be0f88f92878a07656151c2634e1b7355499433eff4a93296425\",\"urls\":[\"bzz-raw://085d8002476c8570ab0df5e617b5ef611612e77f5e11a2cf008ffa1bcb326fe0\",\"dweb:/ipfs/QmPaXii2SXdYS9wraiYXeDJo1HbycVf9cCnoiksgx12P5j\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ProxyRegistry.sol\":{\"keccak256\":\"0x0a054cd34afd2166b0b009c6732b3f6d9edf3c202ac7c9d758502eed9a1f85e7\",\"urls\":[\"bzz-raw://839172c96576a0e8c6a2ab9e02f7e3d3c5c4e432970df3d0190ec744e839e416\",\"dweb:/ipfs/QmTh6CoY9NHkpktSdDTzFtQs3MCLci4pTRds9qMF7q5SwR\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Storage.sol\":{\"keccak256\":\"0x0f43ff924400152ac3ae1cf28179b4142b277387dff374302c29db3b0975685b\",\"urls\":[\"bzz-raw://e2307eff437abc8dc446ef6ad5311a7374ef158b18bb6ab2cd138fa704c46bfe\",\"dweb:/ipfs/QmUUeMhgXqLLPiFYVGXKiimhNhK6Eqr95QAyEbpXryoTBk\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TokensMetadatas.sol\":{\"keccak256\":\"0xe7211c5ad846ae0247f1613ca638f7a4a1541efbb11c8c50c4059f0780365a6b\",\"urls\":[\"bzz-raw://e5f8a24be7feb955240eff93cd014dd7d1e831803cb40136c602aa03a3d4dc68\",\"dweb:/ipfs/QmcdDEiqkXT2oHHUBh2vpkxEYs2YVqgMYBT7LEMnwHiNy9\"]},\"/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TradeableERC721Token.sol\":{\"keccak256\":\"0xb1923c7d4727555498f2f6e810ac6d4ebe9b9065dde041a7672094f22485364c\",\"urls\":[\"bzz-raw://7cdd252e32d8c9606138f560c7f3aba285549b20d2768f7fca35253a4d0712f1\",\"dweb:/ipfs/QmNQdDJAi8N3BCwTymx67N1KAiJqtxCVmyT4g5XKFZTUxv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025e5760003560e01c80636a68119011610146578063a22cb465116100c3578063cd7c032611610087578063cd7c032614610957578063d547cfb71461095f578063e985e9c514610967578063f2fde38b14610995578063faa0650b146109bb578063fbd2d1ac14610b855761025e565b8063a22cb465146108b8578063a2e4d239146108e6578063aa271e1a1461090c578063beb9716d14610932578063c87b56dd1461093a5761025e565b80638da5cb5b1161010a5780638da5cb5b146108445780638f32d59b1461084c5780639216b3701461085457806395d89b41146108715780639adfecf9146108795761025e565b80636a6811901461079e57806370a08231146107c4578063715018a6146107ea578063755edd17146107f25780638d0f5b70146108185761025e565b806330176e13116101df57806346951954116101a357806346951954146105fc5780634f6ccce71461062257806352d1902d1461063f5780635a3f26721461064757806360a11672146106bd5780636352211e146107815761025e565b806330176e13146104345780633d9a1379146104d8578063426796831461058357806342842e0e146105a957806342966c68146105df5761025e565b8063158ef93e11610226578063158ef93e146103a857806318160ddd146103b05780631f6eeb68146103ca57806323b872dd146103d25780632f745c59146104085761025e565b806301ffc9a71461026357806305d52d091461029e57806306fdde03146102c6578063081812fc14610343578063095ea7b31461037c575b600080fd5b61028a6004803603602081101561027957600080fd5b50356001600160e01b031916610ba2565b604080519115158252519081900360200190f35b6102c4600480360360208110156102b457600080fd5b50356001600160a01b0316610bc5565b005b6102ce610cab565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103085781810151838201526020016102f0565b50505050905090810190601f1680156103355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103606004803603602081101561035957600080fd5b5035610d42565b604080516001600160a01b039092168252519081900360200190f35b6102c46004803603604081101561039257600080fd5b506001600160a01b038135169060200135610db2565b61028a610eea565b6103b8610ef3565b60408051918252519081900360200190f35b61028a610ef9565b6102c4600480360360608110156103e857600080fd5b506001600160a01b03813581169160208101359091169060400135610f09565b6103b86004803603604081101561041e57600080fd5b506001600160a01b038135169060200135610f74565b6102c46004803603602081101561044a57600080fd5b810190602081018135600160201b81111561046457600080fd5b82018360208201111561047657600080fd5b803590602001918460018302840111600160201b8311171561049757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ffe945050505050565b6102c4600480360360408110156104ee57600080fd5b81359190810190604081016020820135600160201b81111561050f57600080fd5b82018360208201111561052157600080fd5b803590602001918460018302840111600160201b8311171561054257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506110f5945050505050565b61028a6004803603602081101561059957600080fd5b50356001600160a01b031661115b565b6102c4600480360360608110156105bf57600080fd5b506001600160a01b038135811691602081013590911690604001356111af565b6102c4600480360360208110156105f557600080fd5b50356111ca565b6102c46004803603602081101561061257600080fd5b50356001600160a01b031661122f565b6103b86004803603602081101561063857600080fd5b503561127f565b6103b86112ef565b61066d6004803603602081101561065d57600080fd5b50356001600160a01b0316611313565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156106a9578181015183820152602001610691565b505050509050019250505060405180910390f35b6102c4600480360360808110156106d357600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561070d57600080fd5b82018360208201111561071f57600080fd5b803590602001918460018302840111600160201b8311171561074057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611374945050505050565b6103606004803603602081101561079757600080fd5b50356113d9565b6102c4600480360360208110156107b457600080fd5b50356001600160a01b031661143f565b6103b8600480360360208110156107da57600080fd5b50356001600160a01b031661153a565b6102c46115b4565b6102c46004803603602081101561080857600080fd5b50356001600160a01b0316611645565b6102c46004803603604081101561082e57600080fd5b50803590602001356001600160a01b03166116c0565b6103606117d7565b61028a6117e6565b6102ce6004803603602081101561086a57600080fd5b50356117f7565b6102ce61188e565b61089f6004803603602081101561088f57600080fd5b50356001600160a01b03166118ee565b60408051600192830b90920b8252519081900360200190f35b6102c4600480360360408110156108ce57600080fd5b506001600160a01b038135169060200135151561193b565b6102c4600480360360208110156108fc57600080fd5b50356001600160a01b0316611a01565b61028a6004803603602081101561092257600080fd5b50356001600160a01b0316611afc565b61028a611b4e565b6102ce6004803603602081101561095057600080fd5b5035611b59565b610360611b74565b6102ce611b83565b61028a6004803603604081101561097d57600080fd5b506001600160a01b0381358116916020013516611be1565b6102c4600480360360208110156109ab57600080fd5b50356001600160a01b0316611c8c565b6102c4600480360360a08110156109d157600080fd5b810190602081018135600160201b8111156109eb57600080fd5b8201836020820111156109fd57600080fd5b803590602001918460018302840111600160201b83111715610a1e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610a7057600080fd5b820183602082011115610a8257600080fd5b803590602001918460018302840111600160201b83111715610aa357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160a01b03853516959094909350604081019250602001359050600160201b811115610b0657600080fd5b820183602082011115610b1857600080fd5b803590602001918460018302840111600160201b83111715610b3957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b03169150611cdc9050565b6102c460048036036020811015610b9b57600080fd5b5035611d27565b6001600160e01b0319811660009081526006602052604090205460ff165b919050565b610bcd6117e6565b610c0c576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b806001600160a01b038116610c60576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020526040808220805461ffff19169055517f75063598bb424244ef6461ff8e1e0a1836998c3c84ef9e591015fbe8d94fa71f9190a25050565b60008054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d375780601f10610d0c57610100808354040283529160200191610d37565b820191906000526020600020905b815481529060010190602001808311610d1a57829003601f168201915b505050505090505b90565b6000610d4d82611d97565b610d96576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b925108191bd95cdb89dd08195e1a5cdd605a1b604482015290519081900360640190fd5b506000908152600860205260409020546001600160a01b031690565b6000610dbd826113d9565b9050806001600160a01b0316836001600160a01b03161415610e20576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336001600160a01b0382161480610e3c5750610e3c8133611be1565b610e81576040805162461bcd60e51b81526020600482015260116024820152701c195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015290519081900360640190fd5b60008281526008602090815260409182902080546001600160a01b0319166001600160a01b03878116918217909255835186815293519093918516927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3505050565b60125460ff1681565b60055490565b6000610f043361115b565b905090565b610f133382611db4565b610f64576040805162461bcd60e51b815260206004820152601760248201527f7370656e646572206973206e6f7420617070726f766564000000000000000000604482015290519081900360640190fd5b610f6f838383611e0b565b505050565b6000610f7f8361153a565b8210610fc6576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600c60205260409020805483908110610fea57fe5b906000526020600020015490505b92915050565b6110066117e6565b611045576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b8051611058906002906020840190612cba565b507fe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e690816040518080602001828103825283818151815260200191508051906020019080838360005b838110156110b85781810151838201526020016110a0565b50505050905090810190601f1680156110e55780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b6110fd6117e6565b61113c576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b60008281526011602090815260409091208251610f6f92840190612cba565b60006111656117d7565b6001600160a01b0316826001600160a01b0316141561118657506001610bc0565b506001600160a01b038116600090815260106020526040902054600190810b900b600214610bc0565b610f6f83838360405180602001604052806000815250611374565b6111d2610ef9565b611223576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206275726e696e6720726967687473604482015290519081900360640190fd5b61122c81611e2a565b50565b6112376117e6565b611276576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b61122c81611e3c565b6000611289610ef3565b82106112d0576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b600582815481106112dd57fe5b90600052602060002001549050919050565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf790565b606061131e82611f29565b80548060200260200160405190810160405280929190818152602001828054801561136857602002820191906000526020600020905b815481526020019060010190808311611354575b50505050509050919050565b61137f848484610f09565b61138b84848484611f43565b6113d3576040805162461bcd60e51b81526020600482015260146024820152736461746120636865636b206973206e6f74206f6b60601b604482015290519081900360640190fd5b50505050565b6000818152600760205260408120546001600160a01b031680610ff8576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6114476117e6565b611486576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b806001600160a01b0381166114da576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805461ffff19166001908117909155825190815291517fc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a3679281900390910190a25050565b60006001600160a01b038216611593576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6001600160a01b0382166000908152600960205260409020610ff890612076565b6115bc6117e6565b6115fb576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b600f546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600f80546001600160a01b0319169055565b61164d611b4e565b61169e576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b60006116a861207a565b90506116b48282612091565b6116bc6120ae565b5050565b6116c8611b4e565b611719576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b60008211611765576040805162461bcd60e51b815260206004820152601460248201527336b4b73a1036b4b734b6bab69018903a37b5b2b760611b604482015290519081900360640190fd5b6001600160a01b0381166117bb576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b60005b82811015610f6f576117cf82611645565b6001016117be565b600f546001600160a01b031690565b600f546001600160a01b0316331490565b60008181526011602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156113685780601f1061186157610100808354040283529160200191611368565b820191906000526020600020905b81548152906001019060200180831161186f5750939695505050505050565b60018054604080516020601f60026000196101008789161502019095169490940493840181900481028201810190925282815260609390929091830182828015610d375780601f10610d0c57610100808354040283529160200191610d37565b60006118f86117d7565b6001600160a01b0316826001600160a01b0316141561191957506002610bc0565b506001600160a01b03811660009081526010602052604090205460010b610bc0565b6001600160a01b038216331415611993576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336000818152600a602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b611a096117e6565b611a48576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b806001600160a01b038116611a9c576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805461ffff19166002908117909155825190815291517fc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a3679281900390910190a25050565b6000611b066117d7565b6001600160a01b0316826001600160a01b03161415611b2757506001610bc0565b506001600160a01b038116600090815260106020526040812054600190810b900b13610bc0565b6000610f0433611afc565b6060610ff8611b66611b83565b611b6f846120b9565b61217a565b6003546001600160a01b031681565b60028054604080516020601f6000196101006001871615020190941685900493840181900481028201810190925282815260609390929091830182828015610d375780601f10610d0c57610100808354040283529160200191610d37565b6003546040805163c455279160e01b81526001600160a01b0385811660048301529151600093831692851691839163c455279191602480820192602092909190829003018186803b158015611c3557600080fd5b505afa158015611c49573d6000803e3d6000fd5b505050506040513d6020811015611c5f57600080fd5b50516001600160a01b03161415611c7a576001915050610ff8565b611c8484846121bd565b949350505050565b611c946117e6565b611cd3576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b61122c816121eb565b60125460ff161515600114611d20576012805460ff19166001179055611d038585856122a2565b8151611d16906002906020850190612cba565b50611d20816121eb565b5050505050565b611d2f6117e6565b611d6e576040805162461bcd60e51b81526020600482015260136024820152600080516020612d53833981519152604482015290519081900360640190fd5b6040805160208082018084526000808452858152601190925292902081519192610f6f92612cba565b6000908152600760205260409020546001600160a01b0316151590565b600080611dc0836113d9565b9050806001600160a01b0316846001600160a01b03161480611dfb5750836001600160a01b0316611df084610d42565b6001600160a01b0316145b80611c845750611c848185611be1565b611e168383836122d0565b611e20838261244d565b610f6f828261254f565b61122c611e36826113d9565b8261258d565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e7557600080fd5b505afa158015611e89573d6000803e3d6000fd5b505050506040513d6020811015611e9f57600080fd5b50517fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf714611f05576040805162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b604482015290519081900360640190fd5b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b03166000908152600c6020526040902090565b6000611f57846001600160a01b03166125b9565b611f6357506001611c84565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015611fdd578181015183820152602001611fc5565b50505050905090810190601f16801561200a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561202c57600080fd5b505af1158015612040573d6000803e3d6000fd5b505050506040513d602081101561205657600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b5490565b600454600090610f0490600163ffffffff6125bf16565b61209b8282612619565b6120a5828261254f565b6116bc81612745565b600480546001019055565b6060816120de57506040805180820190915260018152600360fc1b6020820152610bc0565b8160005b81156120f657600101600a820491506120e2565b6060816040519080825280601f01601f191660200182016040528015612123576020820181803883390190505b50905060001982015b851561217157600a860660300160f81b8282806001900393508151811061214f57fe5b60200101906001600160f81b031916908160001a905350600a8604955061212c565b50949350505050565b60606121b68383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612789565b9392505050565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b6001600160a01b038116612246576040805162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e65722063616e6e6f7420626520616464726573732030000000604482015290519081900360640190fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b6122ac838361299d565b600380546001600160a01b0319166001600160a01b03929092169190911790555050565b826001600160a01b03166122e3826113d9565b6001600160a01b03161461233e576040805162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f74206f776e6572206f662074686520746f6b656e604482015290519081900360640190fd5b6001600160a01b038216612399576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f742073656e6420746f203020616464726573730000000000000000604482015290519081900360640190fd5b6123a2816129e5565b6001600160a01b03831660009081526009602052604090206123c390612a20565b6001600160a01b03821660009081526009602052604090206123e490612a37565b60008181526007602090815260409182902080546001600160a01b0319166001600160a01b03868116918217909255835185815293519093918716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a3505050565b6001600160a01b0382166000908152600c602052604081205461247790600163ffffffff612a4016565b6000838152600d6020526040902054909150808214612512576001600160a01b0384166000908152600c602052604081208054849081106124b457fe5b9060005260206000200154905080600c6000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106124f257fe5b6000918252602080832090910192909255918252600d9052604090208190555b6001600160a01b0384166000908152600c6020526040902080548061253357fe5b6001900381819060005260206000200160009055905550505050565b6001600160a01b039091166000908152600c602081815260408084208054868652600d84529185208290559282526001810183559183529091200155565b6125978282612a9d565b6125a1828261244d565b6000818152600d60205260408120556116bc81612b92565b3b151590565b6000828201838110156121b6576040805162461bcd60e51b815260206004820181905260248201527f626f7468206e756d62657273206861766520746f20626520706f736974697665604482015290519081900360640190fd5b6001600160a01b03821661266f576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b61267881611d97565b156126c1576040805162461bcd60e51b8152602060048201526014602482015273746f6b656e20616c72656164792065786973747360601b604482015290519081900360640190fd5b600081815260076020908152604080832080546001600160a01b0319166001600160a01b03871690811790915583526009909152902061270090612a37565b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600580546000838152600e60205260408120829055600182018355919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00155565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156127dd576020820181803883390190505b509050806000805b8851811015612836578881815181106127fa57fe5b602001015160f81c60f81b83838060010194508151811061281757fe5b60200101906001600160f81b031916908160001a9053506001016127e5565b5060005b875181101561288b5787818151811061284f57fe5b602001015160f81c60f81b83838060010194508151811061286c57fe5b60200101906001600160f81b031916908160001a90535060010161283a565b5060005b86518110156128e0578681815181106128a457fe5b602001015160f81c60f81b8383806001019450815181106128c157fe5b60200101906001600160f81b031916908160001a90535060010161288f565b5060005b8551811015612935578581815181106128f957fe5b602001015160f81c60f81b83838060010194508151811061291657fe5b60200101906001600160f81b031916908160001a9053506001016128e4565b5060005b845181101561298a5784818151811061294e57fe5b602001015160f81c60f81b83838060010194508151811061296b57fe5b60200101906001600160f81b031916908160001a905350600101612939565b50909d9c50505050505050505050505050565b81516129b0906000906020850190612cba565b5080516129c4906001906020840190612cba565b506129d5635b5e139f60e01b612c46565b6116bc63780e9d6360e01b612c46565b6000818152600860205260409020546001600160a01b03161561122c57600090815260086020526040902080546001600160a01b0319169055565b8054612a3390600163ffffffff612a4016565b9055565b80546001019055565b600082821115612a97576040805162461bcd60e51b815260206004820152601d60248201527f726573756c742063616e6e6f74206265206c6f776572207468616e2030000000604482015290519081900360640190fd5b50900390565b816001600160a01b0316612ab0826113d9565b6001600160a01b031614612b0b576040805162461bcd60e51b815260206004820152601f60248201527f61646472657373206973206e6f74206f776e6572206f6620746f6b656e494400604482015290519081900360640190fd5b612b14816129e5565b6001600160a01b0382166000908152600960205260409020612b3590612a20565b600081815260076020908152604080832080546001600160a01b0319169055805184815290516001600160a01b038616927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a35050565b600554600090612ba990600163ffffffff612a4016565b6000838152600e602052604081205460058054939450909284908110612bcb57fe5b906000526020600020015490508060058381548110612be657fe5b6000918252602080832090910192909255828152600e909152604090208290556005805480612c1157fe5b600190038181906000526020600020016000905590556000600e60008681526020019081526020016000208190555050505050565b6001600160e01b03198082161415612c95576040805162461bcd60e51b815260206004820152600d60248201526c62616420696e7465726661636560981b604482015290519081900360640190fd5b6001600160e01b0319166000908152600660205260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612cfb57805160ff1916838001178555612d28565b82800160010185558215612d28579182015b82811115612d28578251825591602001919060010190612d0d565b50612d34929150612d38565b5090565b610d3f91905b80821115612d345760008155600101612d3e56fe73656e646572206973206e6f74206f776e657200000000000000000000000000a26469706673582212203336d7d1a421823bca1e47402b39b98689895b005963e9af7a25833e54521c7164736f6c63430006020033",
  "sourceMap": "372:2143:6:-:0;;;1296:1:19;1261:36;;583:31:6;;;-1:-1:-1;;583:31:6;;;758:40:1;-1:-1:-1;;;;;;;;758:18:1;:40;:::i;:::-;2630::4;-1:-1:-1;;;;;;;;2630:18:4;:40;:::i;:::-;372:2143:6;;1113:175:1;-1:-1:-1;;;;;;1188:25:1;;;;;1180:51;;;;;-1:-1:-1;;;1180:51:1;;;;;;;;;;;;-1:-1:-1;;;1180:51:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1241:33:1;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1241:40:1;1277:4;1241:40;;;1113:175::o;372:2143:6:-;;;;;;;",
  "deployedSourceMap": "372:2143:6:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;372:2143:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:142:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;894:142:1;-1:-1:-1;;;;;;894:142:1;;:::i;:::-;;;;;;;;;;;;;;;;;;3977:159:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3977:159:0;-1:-1:-1;;;;;3977:159:0;;:::i;:::-;;2330:92:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2330:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4547:185:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4547:185:4;;:::i;:::-;;;;-1:-1:-1;;;;;4547:185:4;;;;;;;;;;;;;;3918:349;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3918:349:4;;;;;;;;:::i;583:31:6:-;;;:::i;3352:103:5:-;;;:::i;:::-;;;;;;;;;;;;;;;;2314:122:0;;;:::i;6173:216:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6173:216:4;;;;;;;;;;;;;;;;;:::i;2991:212:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2991:212:5;;;;;;;;:::i;1671:136:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1671:136:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1671:136:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1671:136:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1671:136:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1671:136:6;;-1:-1:-1;1671:136:6;;-1:-1:-1;;;;;1671:136:6:i;311:139:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;311:139:20;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;311:139:20;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;311:139:20;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;311:139:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;311:139:20;;-1:-1:-1;311:139:20;;-1:-1:-1;;;;;311:139:20:i;1738:182:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1738:182:0;-1:-1:-1;;;;;1738:182:0;;:::i;7012:149:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7012:149:4;;;;;;;;;;;;;;;;;:::i;1585:91:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1585:91:21;;:::i;2415:97:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2415:97:6;-1:-1:-1;;;;;2415:97:6;;:::i;3787:178:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3787:178:5;;:::i;742:145:2:-;;;:::i;10078:114:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10078:114:5;-1:-1:-1;;;;;10078:114:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10078:114:5;;;;;;;;;;;;;;;;;7855:252:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7855:252:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;7855:252:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7855:252:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7855:252:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7855:252:4;;-1:-1:-1;7855:252:4;;-1:-1:-1;;;;;7855:252:4:i;3288:215::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3288:215:4;;:::i;3217:162:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3217:162:0;-1:-1:-1;;;;;3217:162:0;;:::i;2876:198:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2876:198:4;-1:-1:-1;;;;;2876:198:4;;:::i;1590:137:16:-;;;:::i;900:163:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;900:163:21;-1:-1:-1;;;;;900:163:21;;:::i;1282:246::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1282:246:21;;;;;;-1:-1:-1;;;;;1282:246:21;;:::i;813:77:16:-;;;:::i;1152:90::-;;;:::i;625:126:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;625:126:20;;:::i;2527:96:5:-;;;:::i;958:150:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;958:150:0;-1:-1:-1;;;;;958:150:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5019:249:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5019:249:4;;;;;;;;;;:::i;3626:168:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3626:168:0;-1:-1:-1;;;;;3626:168:0;;:::i;1318:175::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1318:175:0;-1:-1:-1;;;;;1318:175:0;;:::i;2049:112::-;;;:::i;2008:193:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2008:193:6;;:::i;1195:35:19:-;;;:::i;1506:97:6:-;;;:::i;2208:434:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2208:434:21;;;;;;;;;;:::i;1895:107:16:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1895:107:16;-1:-1:-1;;;;;1895:107:16;;:::i;913:527:6:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;913:527:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;913:527:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;913:527:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;913:527:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;913:527:6;;;;;;;;-1:-1:-1;913:527:6;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;913:527:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;913:527:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;913:527:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;913:527:6;;-1:-1:-1;;;;;913:527:6;;;;;;;;-1:-1:-1;913:527:6;;;;-1:-1:-1;913:527:6;;;;-1:-1:-1;;;;5:28;;2:2;;;46:1;43;36:12;2:2;913:527:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;913:527:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;913:527:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;913:527:6;;-1:-1:-1;;;913:527:6;;-1:-1:-1;;;;;913:527:6;;-1:-1:-1;913:527:6;;-1:-1:-1;913:527:6:i;456:163:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;456:163:20;;:::i;894:142:1:-;-1:-1:-1;;;;;;996:33:1;;973:4;996:33;;;:20;:33;;;;;;;;894:142;;;;:::o;3977:159:0:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;4052:6:0;-1:-1:-1;;;;;2918:20:0;::::1;2910:54;;;::::0;;-1:-1:-1;;;2910:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2910:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;4070:14:0;::::2;4087:1;4070:14:::0;;;:6:::2;:14;::::0;;;;;:18;;-1:-1:-1;;4070:18:0::2;::::0;;4103:26;::::2;::::0;4087:1;4103:26:::2;1058:1:16::1;3977:159:0::0;:::o;2330:92:5:-;2410:5;2403:12;;;;;;;;-1:-1:-1;;2403:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2378:13;;2403:12;;2410:5;;2403:12;;2410:5;2403:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:92;;:::o;4547:185:4:-;4615:7;4642:16;4650:7;4642;:16::i;:::-;4634:50;;;;;-1:-1:-1;;;4634:50:4;;;;;;;;;;;;-1:-1:-1;;;4634:50:4;;;;;;;;;;;;;;;-1:-1:-1;4701:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4701:24:4;;4547:185::o;3918:349::-;3990:13;4006:16;4014:7;4006;:16::i;:::-;3990:32;;4046:5;-1:-1:-1;;;;;4040:11:4;:2;-1:-1:-1;;;;;4040:11:4;;;4032:47;;;;;-1:-1:-1;;;4032:47:4;;;;;;;;;;;;-1:-1:-1;;;4032:47:4;;;;;;;;;;;;;;;4097:10;-1:-1:-1;;;;;4097:19:4;;;;:58;;;4120:35;4137:5;4144:10;4120:16;:35::i;:::-;4089:88;;;;;-1:-1:-1;;;4089:88:4;;;;;;;;;;;;-1:-1:-1;;;4089:88:4;;;;;;;;;;;;;;;4188:24;;;;:15;:24;;;;;;;;;:29;;-1:-1:-1;;;;;;4188:29:4;-1:-1:-1;;;;;4188:29:4;;;;;;;;;4232:28;;;;;;;4188:29;;4232:28;;;;;;;;;;;;3918:349;;;:::o;583:31:6:-;;;;;;:::o;3352:103:5:-;3431:10;:17;3352:103;:::o;2314:122:0:-;2357:4;2393:26;2408:10;2393:14;:26::i;:::-;2373:56;;2314:122;:::o;6173:216:4:-;6272:39;6291:10;6303:7;6272:18;:39::i;:::-;6264:75;;;;;-1:-1:-1;;;6264:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;6350:32;6364:4;6370:2;6374:7;6350:13;:32::i;:::-;6173:216;;;:::o;2991:212:5:-;3080:7;3115:16;3125:5;3115:9;:16::i;:::-;3107:5;:24;3099:54;;;;;-1:-1:-1;;;3099:54:5;;;;;;;;;;;;-1:-1:-1;;;3099:54:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;3170:19:5;;;;;;:12;:19;;;;;:26;;3190:5;;3170:26;;;;;;;;;;;;;;3163:33;;2991:212;;;;;:::o;1671:136:6:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;1742:19:6;;::::1;::::0;:13:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1776:24;1796:3;1776:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11:::0;;::::1;84:18:::0;71:11;;::::1;64:39:::0;52:2:::1;45:10;8:100;;;12:14;1776:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:136:::0;:::o;311:139:20:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;404:26:20::1;::::0;;;:16:::1;:26;::::0;;;;;;;:39;;::::1;::::0;;::::1;::::0;::::1;:::i;1738:182:0:-:0;1799:4;1829:7;:5;:7::i;:::-;-1:-1:-1;;;;;1819:17:0;:6;-1:-1:-1;;;;;1819:17:0;;1815:98;;;-1:-1:-1;1845:4:0;1838:11;;1815:98;-1:-1:-1;;;;;;1884:14:0;;;;;;:6;:14;;;;;;;;;;:19;;1902:1;1884:19;1864:49;;7012:149:4;7107:47;7132:4;7138:2;7142:7;7107:47;;;;;;;;;;;;:24;:47::i;1585:91:21:-;2767:13:0;:11;:13::i;:::-;2746:92;;;;;-1:-1:-1;;;2746:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:21:21::1;1660:8;1648:11;:21::i;:::-;1585:91:::0;:::o;2415:97:6:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;2479:26:6::1;2497:7;2479:17;:26::i;3787:178:5:-:0;3854:7;3889:13;:11;:13::i;:::-;3881:5;:21;3873:51;;;;;-1:-1:-1;;;3873:51:5;;;;;;;;;;;;-1:-1:-1;;;3873:51:5;;;;;;;;;;;;;;;3941:10;3952:5;3941:17;;;;;;;;;;;;;;;;3934:24;;3787:178;;;:::o;742:145:2:-;814:66;742:145;:::o;10078:114:5:-;10132:13;10164:21;10179:5;10164:14;:21::i;:::-;10157:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10078:114;;;:::o;7855:252:4:-;7978:31;7991:4;7997:2;8001:7;7978:12;:31::i;:::-;8027:48;8050:4;8056:2;8060:7;8069:5;8027:22;:48::i;:::-;8019:81;;;;;-1:-1:-1;;;8019:81:4;;;;;;;;;;;;-1:-1:-1;;;8019:81:4;;;;;;;;;;;;;;;7855:252;;;;:::o;3288:215::-;3352:7;3387:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3387:20:4;3425:19;3417:57;;;;;-1:-1:-1;;;3417:57:4;;;;;;;;;;;;-1:-1:-1;;;3417:57:4;;;;;;;;;;;;;;3217:162:0;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;3292:6:0;-1:-1:-1;;;;;2918:20:0;::::1;2910:54;;;::::0;;-1:-1:-1;;;2910:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2910:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3310:14:0;::::2;;::::0;;;:6:::2;:14;::::0;;;;;;;;:18;;-1:-1:-1;;3310:18:0::2;3327:1;3310:18:::0;;::::2;::::0;;;3343:29;;;;;;;::::2;::::0;;;;;;;;::::2;1058:1:16::1;3217:162:0::0;:::o;2876:198:4:-;2940:7;-1:-1:-1;;;;;2967:19:4;;2959:57;;;;;-1:-1:-1;;;2959:57:4;;;;;;;;;;;;-1:-1:-1;;;2959:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;3033:24:4;;;;;;:17;:24;;;;;:34;;:32;:34::i;1590:137:16:-;1015:9;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;1672:6:::1;::::0;1651:40:::1;::::0;1688:1:::1;::::0;-1:-1:-1;;;;;1672:6:16::1;::::0;1651:40:::1;::::0;1688:1;;1651:40:::1;1701:6;:19:::0;;-1:-1:-1;;;;;;1701:19:16::1;::::0;;1590:137::o;900:163:21:-;2570:9:0;:7;:9::i;:::-;2549:88;;;;;-1:-1:-1;;;2549:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;957:18:21::1;978:17;:15;:17::i;:::-;957:38;;1005:22;1011:3;1016:10;1005:5;:22::i;:::-;1037:19;:17;:19::i;:::-;2647:1:0;900:163:21::0;:::o;1282:246::-;2570:9:0;:7;:9::i;:::-;2549:88;;;;;-1:-1:-1;;;2549:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1374:1:21::1;1365:6;:10;1357:43;;;::::0;;-1:-1:-1;;;1357:43:21;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1357:43:21;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;1418:17:21;::::1;1410:54;;;::::0;;-1:-1:-1;;;1410:54:21;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1410:54:21;;;;;;;;;;;;;::::1;;1480:6;1475:45;1496:6;1492:1;:10;1475:45;;;1509:11;1516:3;1509:6;:11::i;:::-;1504:3;;1475:45;;813:77:16::0;877:6;;-1:-1:-1;;;;;877:6:16;813:77;:::o;1152:90::-;1229:6;;-1:-1:-1;;;;;1229:6:16;1215:10;:20;;1152:90::o;625:126:20:-;718:26;;;;:16;:26;;;;;;;;;711:33;;;;;;-1:-1:-1;;711:33:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:13;;711:33;;;718:26;711:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;711:33:20;;625:126;-1:-1:-1;;;;;;625:126:20:o;2527:96:5:-;2609:7;2602:14;;;;;;;;-1:-1:-1;;2602:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2577:13;;2602:14;;2609:7;;2602:14;;2609:7;2602:14;;;;;;;;;;;;;;;;;;;;;;;;958:150:0;1017:5;1048:7;:5;:7::i;:::-;-1:-1:-1;;;;;1038:17:0;:6;-1:-1:-1;;;;;1038:17:0;;1034:67;;;-1:-1:-1;1064:1:0;1057:8;;1034:67;-1:-1:-1;;;;;;1087:14:0;;;;;;:6;:14;;;;;;;;1080:21;;5019:249:4;-1:-1:-1;;;;;5107:16:4;;5113:10;5107:16;;5099:52;;;;;-1:-1:-1;;;5099:52:4;;;;;;;;;;;;-1:-1:-1;;;5099:52:4;;;;;;;;;;;;;;;5180:10;5161:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;5161:34:4;;;;;;;;;;;;:45;;-1:-1:-1;;5161:45:4;;;;;;;;;;5221:40;;;;;;;5161:34;;5180:10;5221:40;;;;;;;;;;;5019:249;;:::o;3626:168:0:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;3707:6:0;-1:-1:-1;;;;;2918:20:0;::::1;2910:54;;;::::0;;-1:-1:-1;;;2910:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2910:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3725:14:0;::::2;;::::0;;;:6:::2;:14;::::0;;;;;;;;:18;;-1:-1:-1;;3725:18:0::2;3742:1;3725:18:::0;;::::2;::::0;;;3758:29;;;;;;;::::2;::::0;;;;;;;;::::2;1058:1:16::1;3626:168:0::0;:::o;1318:175::-;1373:4;1403:7;:5;:7::i;:::-;-1:-1:-1;;;;;1393:17:0;:6;-1:-1:-1;;;;;1393:17:0;;1389:97;;;-1:-1:-1;1419:4:0;1412:11;;1389:97;-1:-1:-1;;;;;;1458:14:0;;1475:1;1458:14;;;:6;:14;;;;;;;;;;:18;;;1438:48;;2049:112;2088:4;2124:20;2133:10;2124:8;:20::i;2008:193:6:-;2067:13;2099:95;2130:14;:12;:14::i;:::-;2158:26;2175:8;2158:16;:26::i;:::-;2099:17;:95::i;1195:35:19:-;;;-1:-1:-1;;;;;1195:35:19;;:::o;1506:97:6:-;1583:13;1576:20;;;;;;;-1:-1:-1;;1576:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1551:13;;1576:20;;1583:13;;1576:20;;1583:13;1576:20;;;;;;;;;;;;;;;;;;;;;;;;2208:434:21;2457:20;;2500:28;;;-1:-1:-1;;;2500:28:21;;-1:-1:-1;;;;;2500:28:21;;;;;;;;;2331:4;;2457:20;;;2492:49;;;2457:20;;2500:21;;:28;;;;;;;;;;;;;;;2457:20;2500:28;;;5:2:-1;;;;30:1;27;20:12;5:2;2500:28:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2500:28:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2500:28:21;-1:-1:-1;;;;;2492:49:21;;2488:91;;;2564:4;2557:11;;;;;2488:91;2596:39;2619:5;2626:8;2596:22;:39::i;:::-;2589:46;2208:434;-1:-1:-1;;;;2208:434:21:o;1895:107:16:-;1015:9;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;1967:28:::1;1986:8;1967:18;:28::i;913:527:6:-:0;1168:11;;;;:19;;:11;:19;1164:270;;1248:11;:18;;-1:-1:-1;;1248:18:6;1262:4;1248:18;;;1281:64;1307:5;1314:7;1323:21;1281:25;:64::i;:::-;1360:23;;;;:13;;:23;;;;;:::i;:::-;;1397:26;1416:6;1397:18;:26::i;:::-;913:527;;;;;:::o;456:163:20:-;1015:9:16;:7;:9::i;:::-;1007:41;;;;;-1:-1:-1;;;1007:41:16;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1007:41:16;;;;;;;;;;;;;;;526:33:20::1;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;526:33:20;;;569:26;;;:16:::1;:26:::0;;;;;;:43;;526:33;;569:43:::1;::::0;::::1;:::i;8297:152:4:-:0;8354:4;8386:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8386:20:4;8423:19;;;8297:152::o;8803:246::-;8888:4;8904:13;8920:16;8928:7;8920;:16::i;:::-;8904:32;;8965:5;-1:-1:-1;;;;;8954:16:4;:7;-1:-1:-1;;;;;8954:16:4;;:51;;;;8998:7;-1:-1:-1;;;;;8974:31:4;:20;8986:7;8974:11;:20::i;:::-;-1:-1:-1;;;;;8974:31:4;;8954:51;:87;;;;9009:32;9026:5;9033:7;9009:16;:32::i;4334:248:5:-;4428:38;4448:4;4454:2;4458:7;4428:19;:38::i;:::-;4477:47;4510:4;4516:7;4477:32;:47::i;:::-;4535:40;4563:2;4567:7;4535:27;:40::i;10374:90:4:-;10425:32;10431:16;10439:7;10431;:16::i;:::-;10449:7;10425:5;:32::i;336:401:2:-;512:10;-1:-1:-1;;;;;502:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:37:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;502:37:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;502:37:2;431:66;423:116;402:177;;;;;-1:-1:-1;;;402:177:2;;;;;;;;;;;;-1:-1:-1;;;402:177:2;;;;;;;;;;;;;;;642:66;635:86;598:133::o;5877:124:5:-;-1:-1:-1;;;;;5975:19:5;5939:17;5975:19;;;:12;:19;;;;;;5877:124::o;11787:343:4:-;11904:4;11929:15;:2;-1:-1:-1;;;;;11929:13:4;;:15::i;:::-;11924:58;;-1:-1:-1;11967:4:4;11960:11;;11924:58;12008:70;;-1:-1:-1;;;12008:70:4;;12045:10;12008:70;;;;;;-1:-1:-1;;;;;12008:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11992:13;;12008:36;;;;;;12045:10;;12057:4;;12063:7;;12072:5;;12008:70;;;;;;;;;;;11992:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12008:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12008:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12008:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12008:70:4;-1:-1:-1;;;;;;12096:26:4;-1:-1:-1;;;12096:26:4;;-1:-1:-1;;11787:343:4;;;;;;:::o;1114:112:12:-;1205:14;;1114:112::o;1827:104:21:-;1902:15;;1876:7;;1902:22;;1922:1;1902:22;:19;:22;:::i;4832:205:5:-;4904:24;4916:2;4920:7;4904:11;:24::i;:::-;4939:40;4967:2;4971:7;4939:27;:40::i;:::-;4990;5022:7;4990:31;:40::i;2011:72:21:-;2059:15;:17;;;;;;2011:72::o;1557:465:14:-;1607:27;1650:7;1646:48;;-1:-1:-1;1673:10:14;;;;;;;;;;;;-1:-1:-1;;;1673:10:14;;;;;;1646:48;1712:2;1703:6;1742:66;1749:6;;1742:66;;1771:5;;1795:2;1790:7;;;;1742:66;;;1817:17;1847:3;1837:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;1837:14:14;87:34:-1;135:17;;-1:-1;1837:14:14;-1:-1:-1;1817:34:14;-1:-1:-1;;;1870:7:14;;1887:100;1894:7;;1887:100;;1950:2;1945;:7;1940:2;:12;1929:25;;1917:4;1922:3;;;;;;;1917:9;;;;;;;;;;;:37;-1:-1:-1;;;;;1917:37:14;;;;;;;;-1:-1:-1;1974:2:14;1968:8;;;;1887:100;;;-1:-1:-1;2010:4:14;1557:465;-1:-1:-1;;;;1557:465:14:o;1405:146::-;1483:13;1515:29;1525:2;1529;1515:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1508:36;1405:146;-1:-1:-1;;;1405:146:14:o;5584:162:4:-;-1:-1:-1;;;;;5704:25:4;;;5681:4;5704:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5584:162::o;2143:216:16:-;-1:-1:-1;;;;;2216:22:16;;2208:64;;;;;-1:-1:-1;;;2208:64:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:6;;2287:38;;-1:-1:-1;;;;;2287:38:16;;;;2308:6;;2287:38;;2308:6;;2287:38;2335:6;:17;;-1:-1:-1;;;;;;2335:17:16;-1:-1:-1;;;;;2335:17:16;;;;;;;;;;2143:216::o;581:200:21:-;689:31;705:5;712:7;689:15;:31::i;:::-;730:20;:44;;-1:-1:-1;;;;;;730:44:21;-1:-1:-1;;;;;730:44:21;;;;;;;;;;-1:-1:-1;;581:200:21:o;10833:434:4:-;10954:4;-1:-1:-1;;;;;10934:24:4;:16;10942:7;10934;:16::i;:::-;-1:-1:-1;;;;;10934:24:4;;10926:69;;;;;-1:-1:-1;;;10926:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11013:16:4;;11005:53;;;;;-1:-1:-1;;;11005:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;11069:23;11084:7;11069:14;:23::i;:::-;-1:-1:-1;;;;;11103:23:4;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;11148:21:4;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11192:20;;;;:11;:20;;;;;;;;;:25;;-1:-1:-1;;;;;;11192:25:4;-1:-1:-1;;;;;11192:25:4;;;;;;;;;11233:27;;;;;;;11192:25;;11233:27;;;;;;;;;;;;10833:434;;;:::o;7435:1125:5:-;-1:-1:-1;;;;;7722:18:5;;7697:22;7722:18;;;:12;:18;;;;;:25;:32;;7752:1;7722:32;:29;:32;:::i;:::-;7764:18;7785:26;;;:17;:26;;;;;;7697:57;;-1:-1:-1;7915:28:5;;;7911:323;;-1:-1:-1;;;;;7981:18:5;;7959:19;7981:18;;;:12;:18;;;;;:34;;8000:14;;7981:34;;;;;;;;;;;;;;7959:56;;8063:11;8030:12;:18;8043:4;-1:-1:-1;;;;;8030:18:5;-1:-1:-1;;;;;8030:18:5;;;;;;;;;;;;8049:10;8030:30;;;;;;;;;;;;;;;;;;;:44;;;;8146:30;;;:17;:30;;;;;:43;;;7911:323;-1:-1:-1;;;;;8320:18:5;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;7435:1125;;;;:::o;6291:183::-;-1:-1:-1;;;;;6404:16:5;;;;;;;:12;:16;;;;;;;;:23;;6375:26;;;:17;:26;;;;;:52;;;6437:16;;;39:1:-1;23:18;;45:23;;6437:30:5;;;;;;;;6291:183::o;5303:374::-;5378:27;5390:5;5397:7;5378:11;:27::i;:::-;5416:48;5449:5;5456:7;5416:32;:48::i;:::-;5612:1;5583:26;;;:17;:26;;;;;:30;5624:45;5601:7;5624:36;:45::i;521:524:11:-;992:20;1030:8;;;521:524::o;1569:181:13:-;1627:7;1658:5;;;1681:6;;;;1673:51;;;;;-1:-1:-1;;;1673:51:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;9287:319:4;-1:-1:-1;;;;;9366:16:4;;9358:53;;;;;-1:-1:-1;;;9358:53:4;;;;;;;;;;;;-1:-1:-1;;;9358:53:4;;;;;;;;;;;;;;;9430:16;9438:7;9430;:16::i;:::-;9429:17;9421:50;;;;;-1:-1:-1;;;9421:50:4;;;;;;;;;;;;-1:-1:-1;;;9421:50:4;;;;;;;;;;;;;;;9482:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;9482:25:4;-1:-1:-1;;;;;9482:25:4;;;;;;;;9517:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9566;;;;;;;;-1:-1:-1;;;;;9566:33:4;;;9583:1;;9566:33;;;;;;;;;9287:319;;:::o;6666:161:5:-;6769:10;:17;;6742:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;6796:24:5;;;;;;;6666:161::o;156:885:14:-;288:13;313:16;338:2;313:28;;351:16;376:2;351:28;;389:16;414:2;389:28;;427:16;452:2;427:28;;465:16;490:2;465:28;;503:19;588:3;:10;575:3;:10;562:3;:10;549:3;:10;536:3;:10;:23;:36;:49;:62;525:74;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;525:74:14;87:34:-1;135:17;;-1:-1;525:74:14;-1:-1:-1;503:96:14;-1:-1:-1;503:96:14;653:6;;673:58;694:3;:10;690:1;:14;673:58;;;725:3;729:1;725:6;;;;;;;;;;;;;;;;711;718:3;;;;;;711:11;;;;;;;;;;;:20;-1:-1:-1;;;;;711:20:14;;;;;;;;-1:-1:-1;706:3:14;;673:58;;;-1:-1:-1;746:6:14;741:58;762:3;:10;758:1;:14;741:58;;;793:3;797:1;793:6;;;;;;;;;;;;;;;;779;786:3;;;;;;779:11;;;;;;;;;;;:20;-1:-1:-1;;;;;779:20:14;;;;;;;;-1:-1:-1;774:3:14;;741:58;;;-1:-1:-1;814:6:14;809:58;830:3;:10;826:1;:14;809:58;;;861:3;865:1;861:6;;;;;;;;;;;;;;;;847;854:3;;;;;;847:11;;;;;;;;;;;:20;-1:-1:-1;;;;;847:20:14;;;;;;;;-1:-1:-1;842:3:14;;809:58;;;-1:-1:-1;882:6:14;877:58;898:3;:10;894:1;:14;877:58;;;929:3;933:1;929:6;;;;;;;;;;;;;;;;915;922:3;;;;;;915:11;;;;;;;;;;;:20;-1:-1:-1;;;;;915:20:14;;;;;;;;-1:-1:-1;910:3:14;;877:58;;;-1:-1:-1;950:6:14;945:58;966:3;:10;962:1;:14;945:58;;;997:3;1001:1;997:6;;;;;;;;;;;;;;;;983;990:3;;;;;;983:11;;;;;;;;;;;:20;-1:-1:-1;;;;;983:20:14;;;;;;;;-1:-1:-1;978:3:14;;945:58;;;-1:-1:-1;1027:6:14;;156:885;-1:-1:-1;;;;;;;;;;;;;156:885:14:o;1824:405:5:-;1900:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1922:16:5;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;2026:49:5;-1:-1:-1;;;2026:18:5;:49::i;:::-;2171:51;-1:-1:-1;;;2171:18:5;:51::i;12288:171:4:-;12387:1;12351:24;;;:15;:24;;;;;;-1:-1:-1;;;;;12351:24:4;:38;12347:106;;12440:1;12405:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;12405:37:4;;;12288:171::o;1327:108:12:-;1407:14;;:21;;1426:1;1407:21;:18;:21;:::i;:::-;1390:38;;1327:108::o;1232:89::-;1295:19;;1313:1;1295:19;;;1232:89::o;1310:178:13:-;1368:7;1400:1;1395;:6;;1387:48;;;;;-1:-1:-1;;;1387:48:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1457:5:13;;;1310:178::o;9873:326:4:-;9975:5;-1:-1:-1;;;;;9955:25:4;:16;9963:7;9955;:16::i;:::-;-1:-1:-1;;;;;9955:25:4;;9947:69;;;;;-1:-1:-1;;;9947:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10027:23;10042:7;10027:14;:23::i;:::-;-1:-1:-1;;;;;10061:24:4;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;10138:1;10107:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;10107:33:4;;;10156:36;;;;;;;-1:-1:-1;;;;;10156:36:4;;;;;;;;;;;9873:326;;:::o;8844:1061:5:-;9118:10;:17;9093:22;;9118:24;;9140:1;9118:24;:21;:24;:::i;:::-;9152:18;9173:24;;;:15;:24;;;;;;9541:10;:26;;9093:49;;-1:-1:-1;9173:24:5;;9093:49;;9541:26;;;;;;;;;;;;;;9519:48;;9603:11;9578:10;9589;9578:22;;;;;;;;;;;;;;;;;;;:36;;;;9682:28;;;:15;:28;;;;;;:41;;;9844:10;:16;;;;;;;;;;;;;;;;;;;;;;;;9897:1;9870:15;:24;9886:7;9870:24;;;;;;;;;;;:28;;;;8844:1061;;;;:::o;1113:175:1:-;-1:-1:-1;;;;;;1188:25:1;;;;;1180:51;;;;;-1:-1:-1;;;1180:51:1;;;;;;;;;;;;-1:-1:-1;;;1180:51:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1241:33:1;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1241:40:1;1277:4;1241:40;;;1113:175::o;372:2143:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;372:2143:6;;;-1:-1:-1;372:2143:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: UNLICENSED\n/**\n * @author Mathieu Lecoq\n * september 3rd 2020 \n *\n * @dev Property\n * all rights are reserved to EtherLand ltd\n *\n * @dev deployed with compiler version 0.6.2\n */\npragma solidity 0.6.2;\n\nimport \"./TradeableERC721Token.sol\";\nimport \"./TokensMetadatas.sol\";\nimport \"./ERC1822/Proxiable.sol\";\n\n/**\n* @title Etherland NFT Assets\n*/\ncontract Etherland is TradeableERC721Token, TokensMetadatas, Proxiable {\n    // string private _baseTokenURI;\n    /**\n    * @dev initialized state MUST remain set to false on Implementation Contract \n    */\n    bool public initialized = false;\n\n    /**\n    * @dev event emitting when the `_baseTokenUri` is updated by owner\n    */\n    event BaseTokenUriUpdated(string newUri);\n\n    /**\n    * @dev Logic code implementation contact constructor\n    * @dev MUST be called by deployer only if contract has not been initialized before\n    */\n    function init(\n        string memory _name,\n        string memory _symbol,\n        address _proxyRegistryAddress,\n        string memory baseURI,\n        address _owner\n    ) public {\n        // logic code contract can be initialized only once\n        if (initialized != true) {\n            // MUST set Proxy contract state\n            initialized = true;\n\n            TradeableERC721Token.init(_name, _symbol, _proxyRegistryAddress);\n\n            _baseTokenURI = baseURI;\n            _transferOwnership(_owner);\n        }\n    }\n\n    /**\n    * @dev Retrieve all NFTs base token uri \n    */\n    function baseTokenURI() public view returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    /**\n    * @dev Set the base token uri for all NFTs\n    */\n    function setBaseTokenURI(string memory uri) public onlyOwner {\n        _baseTokenURI = uri;\n        emit BaseTokenUriUpdated(uri);\n    }\n\n    /**\n    * @dev Retrieve the uri of a specific token \n    * @param _tokenId the id of the token to retrieve the uri of\n    * @return computed uri string pointing to a specific _tokenId\n    */\n    function tokenURI(uint256 _tokenId) external view returns (string memory) {\n        return Strings.strConcat(\n            baseTokenURI(),\n            Strings.uint2str(_tokenId)\n        );\n    }\n\n    /**\n    * @dev EIP-1822 feature\n    * @dev Realize an update of the Etherland logic code \n    * @dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")\n    */\n    function updateCode(address newCode) public onlyOwner {\n        updateCodeAddress(newCode);\n    }\n\n}\n",
  "sourcePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Etherland.sol",
  "ast": {
    "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Etherland.sol",
    "exportedSymbols": {
      "Etherland": [
        1375
      ]
    },
    "id": 1376,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1265,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "207:22:6"
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 2635,
        "src": "231:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TokensMetadatas.sol",
        "file": "./TokensMetadatas.sol",
        "id": 1267,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 2466,
        "src": "268:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC1822/Proxiable.sol",
        "file": "./ERC1822/Proxiable.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 289,
        "src": "300:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1269,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2634,
              "src": "394:20:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$2634",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 1270,
            "nodeType": "InheritanceSpecifier",
            "src": "394:20:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1271,
              "name": "TokensMetadatas",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2465,
              "src": "416:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokensMetadatas_$2465",
                "typeString": "contract TokensMetadatas"
              }
            },
            "id": 1272,
            "nodeType": "InheritanceSpecifier",
            "src": "416:15:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1273,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "433:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$288",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1274,
            "nodeType": "InheritanceSpecifier",
            "src": "433:9:6"
          }
        ],
        "contractDependencies": [
          207,
          256,
          288,
          892,
          1263,
          1385,
          1488,
          1525,
          2323,
          2409,
          2465,
          2634
        ],
        "contractKind": "contract",
        "documentation": "@title Etherland NFT Assets",
        "fullyImplemented": true,
        "id": 1375,
        "linearizedBaseContracts": [
          1375,
          288,
          2465,
          2634,
          207,
          2323,
          1263,
          1525,
          892,
          1488,
          256,
          2409,
          1385
        ],
        "name": "Etherland",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 1277,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1375,
            "src": "583:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1275,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "583:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "609:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitting when the `_baseTokenUri` is updated by owner",
            "id": 1281,
            "name": "BaseTokenUriUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1279,
                  "indexed": false,
                  "name": "newUri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1281,
                  "src": "733:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "732:15:6"
            },
            "src": "707:41:6"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "1094:346:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1294,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "1168:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1183:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1168:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1318,
                  "nodeType": "IfStatement",
                  "src": "1164:270:6",
                  "trueBody": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "1189:245:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1297,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "1248:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1262:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1248:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "1248:18:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1304,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "1307:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1305,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "1314:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1306,
                              "name": "_proxyRegistryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "1323:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1301,
                              "name": "TradeableERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2634,
                              "src": "1281:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$2634_$",
                                "typeString": "type(contract TradeableERC721Token)"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "init",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2502,
                            "src": "1281:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,string memory,address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "1281:64:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1309,
                            "name": "_baseTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "1360:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1310,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1376:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1360:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "1360:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1291,
                              "src": "1416:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1313,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "1397:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1397:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "1397:26:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Logic code implementation contact constructor\n@dev MUST be called by deployer only if contract has not been initialized before",
            "functionSelector": "faa0650b",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "936:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "965:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1287,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "996:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1035:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1066:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:160:6"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:0:6"
            },
            "scope": 1375,
            "src": "913:527:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1327,
              "nodeType": "Block",
              "src": "1566:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1325,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2346,
                    "src": "1583:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1324,
                  "id": 1326,
                  "nodeType": "Return",
                  "src": "1576:20:6"
                }
              ]
            },
            "documentation": "@dev Retrieve all NFTs base token uri ",
            "functionSelector": "d547cfb7",
            "id": 1328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:6"
            },
            "returnParameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1328,
                  "src": "1551:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1550:15:6"
            },
            "scope": 1375,
            "src": "1506:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1343,
              "nodeType": "Block",
              "src": "1732:75:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1335,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "1742:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1336,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1330,
                      "src": "1758:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1742:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:19:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "1796:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1339,
                      "name": "BaseTokenUriUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "1776:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "EmitStatement",
                  "src": "1771:29:6"
                }
              ]
            },
            "documentation": "@dev Set the base token uri for all NFTs",
            "functionSelector": "30176e13",
            "id": 1344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1333,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1332,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2253,
                  "src": "1722:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:6"
              }
            ],
            "name": "setBaseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1330,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1344,
                  "src": "1696:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:19:6"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:6"
            },
            "scope": 1375,
            "src": "1671:136:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "2082:119:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1353,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "2130:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1357,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1346,
                            "src": "2175:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2168,
                            "src": "2158:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$2168_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2074,
                          "src": "2158:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2158:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1351,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "2099:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$2168_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1996,
                      "src": "2099:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1350,
                  "id": 1360,
                  "nodeType": "Return",
                  "src": "2092:102:6"
                }
              ]
            },
            "documentation": "@dev Retrieve the uri of a specific token \n@param _tokenId the id of the token to retrieve the uri of\n@return computed uri string pointing to a specific _tokenId",
            "functionSelector": "c87b56dd",
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1362,
                  "src": "2026:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:18:6"
            },
            "returnParameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1349,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1362,
                  "src": "2067:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:15:6"
            },
            "scope": 1375,
            "src": "2008:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1373,
              "nodeType": "Block",
              "src": "2469:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1370,
                        "name": "newCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2497:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1369,
                      "name": "updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2479:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:26:6"
                }
              ]
            },
            "documentation": "@dev EIP-1822 feature\n@dev Realize an update of the Etherland logic code \n@dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")",
            "functionSelector": "46951954",
            "id": 1374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1367,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1366,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2253,
                  "src": "2459:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2459:9:6"
              }
            ],
            "name": "updateCode",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "name": "newCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1374,
                  "src": "2435:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2434:17:6"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:0:6"
            },
            "scope": 1375,
            "src": "2415:97:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1376,
        "src": "372:2143:6"
      }
    ],
    "src": "207:2309:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/Etherland.sol",
    "exportedSymbols": {
      "Etherland": [
        1375
      ]
    },
    "id": 1376,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1265,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "207:22:6"
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 1266,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 2635,
        "src": "231:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/TokensMetadatas.sol",
        "file": "./TokensMetadatas.sol",
        "id": 1267,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 2466,
        "src": "268:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/macos/Desktop/Mat/Apps/ETHERLAND/Etherland_ERC721/ERC721/contracts/ERC1822/Proxiable.sol",
        "file": "./ERC1822/Proxiable.sol",
        "id": 1268,
        "nodeType": "ImportDirective",
        "scope": 1376,
        "sourceUnit": 289,
        "src": "300:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1269,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2634,
              "src": "394:20:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$2634",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 1270,
            "nodeType": "InheritanceSpecifier",
            "src": "394:20:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1271,
              "name": "TokensMetadatas",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2465,
              "src": "416:15:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokensMetadatas_$2465",
                "typeString": "contract TokensMetadatas"
              }
            },
            "id": 1272,
            "nodeType": "InheritanceSpecifier",
            "src": "416:15:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1273,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 288,
              "src": "433:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$288",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1274,
            "nodeType": "InheritanceSpecifier",
            "src": "433:9:6"
          }
        ],
        "contractDependencies": [
          207,
          256,
          288,
          892,
          1263,
          1385,
          1488,
          1525,
          2323,
          2409,
          2465,
          2634
        ],
        "contractKind": "contract",
        "documentation": "@title Etherland NFT Assets",
        "fullyImplemented": true,
        "id": 1375,
        "linearizedBaseContracts": [
          1375,
          288,
          2465,
          2634,
          207,
          2323,
          1263,
          1525,
          892,
          1488,
          256,
          2409,
          1385
        ],
        "name": "Etherland",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 1277,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1375,
            "src": "583:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1275,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "583:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "609:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitting when the `_baseTokenUri` is updated by owner",
            "id": 1281,
            "name": "BaseTokenUriUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1279,
                  "indexed": false,
                  "name": "newUri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1281,
                  "src": "733:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1278,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "733:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "732:15:6"
            },
            "src": "707:41:6"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "1094:346:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1294,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "1168:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1183:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1168:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1318,
                  "nodeType": "IfStatement",
                  "src": "1164:270:6",
                  "trueBody": {
                    "id": 1317,
                    "nodeType": "Block",
                    "src": "1189:245:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1297,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1277,
                            "src": "1248:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1262:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1248:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "1248:18:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1304,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "1307:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1305,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1285,
                              "src": "1314:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1306,
                              "name": "_proxyRegistryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1287,
                              "src": "1323:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1301,
                              "name": "TradeableERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2634,
                              "src": "1281:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$2634_$",
                                "typeString": "type(contract TradeableERC721Token)"
                              }
                            },
                            "id": 1303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "init",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2502,
                            "src": "1281:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,string memory,address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "1281:64:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1309,
                            "name": "_baseTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "1360:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1310,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1376:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1360:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "1360:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1291,
                              "src": "1416:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1313,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2322,
                            "src": "1397:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1397:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1316,
                        "nodeType": "ExpressionStatement",
                        "src": "1397:26:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Logic code implementation contact constructor\n@dev MUST be called by deployer only if contract has not been initialized before",
            "functionSelector": "faa0650b",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "936:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "965:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1287,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "996:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1289,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1035:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1035:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1066:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1066:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "926:160:6"
            },
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1094:0:6"
            },
            "scope": 1375,
            "src": "913:527:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1327,
              "nodeType": "Block",
              "src": "1566:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1325,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2346,
                    "src": "1583:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1324,
                  "id": 1326,
                  "nodeType": "Return",
                  "src": "1576:20:6"
                }
              ]
            },
            "documentation": "@dev Retrieve all NFTs base token uri ",
            "functionSelector": "d547cfb7",
            "id": 1328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:2:6"
            },
            "returnParameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1323,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1328,
                  "src": "1551:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1550:15:6"
            },
            "scope": 1375,
            "src": "1506:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1343,
              "nodeType": "Block",
              "src": "1732:75:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1335,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "1742:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1336,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1330,
                      "src": "1758:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1742:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:19:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "1796:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1339,
                      "name": "BaseTokenUriUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1281,
                      "src": "1776:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1342,
                  "nodeType": "EmitStatement",
                  "src": "1771:29:6"
                }
              ]
            },
            "documentation": "@dev Set the base token uri for all NFTs",
            "functionSelector": "30176e13",
            "id": 1344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1333,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1332,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2253,
                  "src": "1722:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:9:6"
              }
            ],
            "name": "setBaseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1330,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1344,
                  "src": "1696:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:19:6"
            },
            "returnParameters": {
              "id": 1334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1732:0:6"
            },
            "scope": 1375,
            "src": "1671:136:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1361,
              "nodeType": "Block",
              "src": "2082:119:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1353,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1328,
                          "src": "2130:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 1354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2130:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1357,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1346,
                            "src": "2175:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1355,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2168,
                            "src": "2158:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$2168_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2074,
                          "src": "2158:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 1358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2158:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1351,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2168,
                        "src": "2099:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$2168_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 1352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1996,
                      "src": "2099:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 1359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1350,
                  "id": 1360,
                  "nodeType": "Return",
                  "src": "2092:102:6"
                }
              ]
            },
            "documentation": "@dev Retrieve the uri of a specific token \n@param _tokenId the id of the token to retrieve the uri of\n@return computed uri string pointing to a specific _tokenId",
            "functionSelector": "c87b56dd",
            "id": 1362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1346,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1362,
                  "src": "2026:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2026:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:18:6"
            },
            "returnParameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1349,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1362,
                  "src": "2067:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2067:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2066:15:6"
            },
            "scope": 1375,
            "src": "2008:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1373,
              "nodeType": "Block",
              "src": "2469:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1370,
                        "name": "newCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1364,
                        "src": "2497:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1369,
                      "name": "updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "2479:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2479:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2479:26:6"
                }
              ]
            },
            "documentation": "@dev EIP-1822 feature\n@dev Realize an update of the Etherland logic code \n@dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")",
            "functionSelector": "46951954",
            "id": 1374,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1367,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1366,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2253,
                  "src": "2459:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2459:9:6"
              }
            ],
            "name": "updateCode",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "name": "newCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1374,
                  "src": "2435:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2435:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2434:17:6"
            },
            "returnParameters": {
              "id": 1368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2469:0:6"
            },
            "scope": 1375,
            "src": "2415:97:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1376,
        "src": "372:2143:6"
      }
    ],
    "src": "207:2309:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a367": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "int16",
              "name": "adminRights",
              "type": "int16"
            }
          ],
          "name": "AdminRightsGranted",
          "type": "event"
        },
        "0x75063598bb424244ef6461ff8e1e0a1836998c3c84ef9e591015fbe8d94fa71f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "noAdmin",
              "type": "address"
            }
          ],
          "name": "AdminRightsRevoked",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e690": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "newUri",
              "type": "string"
            }
          ],
          "name": "BaseTokenUriUpdated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb0A0668dcb07F43974e311214754053257499BC4",
      "transactionHash": "0x29d97e25986df8cfc78f63abf0acb08bc02eeb8d707928f04749f8292683cdcd"
    }
  },
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-11-05T22:02:42.127Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "adminRightsOf(address)": {
        "details": "know if an address has admin rights and its type of rights",
        "params": {
          "_admin": "the address to find admin rights of"
        },
        "returns": {
          "_0": "int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens "
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseTokenURI()": {
        "details": "Retrieve all NFTs base token uri "
      },
      "batchMintTo(uint256,address)": {
        "details": "Mint several tokens to an address.",
        "params": {
          "_to": "default owner of the new created NFT (reverts if a zero address)",
          "_total": "total number of NFT to mint (reverts if <= 0)"
        }
      },
      "burn(uint256)": {
        "details": "External Burn NFT method"
      },
      "canMint()": {
        "details": "canMint external ",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens"
        }
      },
      "canMintBurn()": {
        "details": "canBurn external",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "grantMinterBurnerRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter and burner rights to"
        }
      },
      "grantMinterRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter rights to"
        }
      },
      "init(string,string,address,string,address)": {
        "details": "Logic code implementation contact constructorMUST be called by deployer only if contract has not been initialized before"
      },
      "isMinter(address)": {
        "details": "verifiy if an address can mint new tokens",
        "params": {
          "_admin": ": the address to verify minting rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint new tokens"
        }
      },
      "isMinterBurner(address)": {
        "details": "verifiy if an address has rights to mint and burn new tokens",
        "params": {
          "_admin": ": the address to verify minter-burner rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint and burn new tokens"
        }
      },
      "mintTo(address)": {
        "details": "Mints a token to an address.",
        "params": {
          "_to": "address of the future owner of the token"
        }
      },
      "name()": {
        "details": "Gets the token name",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revokeAdminRights(address)": {
        "details": "owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to revoke admin access to"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFromWithData(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setBaseTokenURI(string)": {
        "details": "Set the base token uri for all NFTs"
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Retrieve the uri of a specific token ",
        "params": {
          "_tokenId": "the id of the token to retrieve the uri of"
        },
        "returns": {
          "_0": "computed uri string pointing to a specific _tokenId"
        }
      },
      "tokensOf(address)": {
        "details": "@notice Non-Standard method to retrieve all NFTs that specific owner owns",
        "returns": {
          "_0": "uint[] containing all NFTs that owner owns"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateCode(address)": {
        "details": "EIP-1822 featureRealize an update of the Etherland logic code calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")"
      }
    },
    "title": "Etherland NFT Assets"
  },
  "userdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}