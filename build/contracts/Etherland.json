{
  "contractName": "Etherland",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int16",
          "name": "adminRights",
          "type": "int16"
        }
      ],
      "name": "AdminRightsGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "noAdmin",
          "type": "address"
        }
      ],
      "name": "AdminRightsRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "BaseTokenUriUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "adminRightsOf",
      "outputs": [
        {
          "internalType": "int16",
          "name": "",
          "type": "int16"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_total",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "batchMintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "canMintBurn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "docType",
          "type": "string"
        }
      ],
      "name": "getIpfsHash",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterBurnerRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantMinterRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "isMinterBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "proxyRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "docType",
          "type": "string"
        }
      ],
      "name": "removeIpfsHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "revokeAdminRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFromWithData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "docType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "setIpfsHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "tokensOf",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_proxyRegistryAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setBaseTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newCode",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int16\",\"name\":\"adminRights\",\"type\":\"int16\"}],\"name\":\"AdminRightsGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"noAdmin\",\"type\":\"address\"}],\"name\":\"AdminRightsRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"BaseTokenUriUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"adminRightsOf\",\"outputs\":[{\"internalType\":\"int16\",\"name\":\"\",\"type\":\"int16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"batchMintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"docType\",\"type\":\"string\"}],\"name\":\"getIpfsHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterBurnerRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantMinterRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_proxyRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"isMinterBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"docType\",\"type\":\"string\"}],\"name\":\"removeIpfsHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFromWithData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"setBaseTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"docType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_hash\",\"type\":\"string\"}],\"name\":\"setIpfsHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCode\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"adminRightsOf(address)\":{\"details\":\"know if an address has admin rights and its type of rights\",\"params\":{\"_admin\":\"the address to find admin rights of\"},\"returns\":{\"_0\":\"int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens \"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseTokenURI()\":{\"details\":\"Retrieve all NFTs base token uri \"},\"batchMintTo(uint256,address)\":{\"details\":\"Mint several tokens to an address.\",\"params\":{\"_to\":\"default owner of the new created NFT (reverts if a zero address)\",\"_total\":\"total number of NFT to mint (reverts if <= 0)\"}},\"burn(uint256)\":{\"details\":\"External Burn NFT method\"},\"canMint()\":{\"details\":\"canMint external \",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens\"}},\"canMintBurn()\":{\"details\":\"canBurn external\",\"returns\":{\"_0\":\"bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"grantMinterBurnerRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter and burner rights to\"}},\"grantMinterRights(address)\":{\"details\":\"owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to grant admin minter rights to\"}},\"init(string,string,address,string,address)\":{\"details\":\"Logic code implementation contact constructorMUST be called by deployer only if contract has not been initialized before\"},\"isMinter(address)\":{\"details\":\"verifiy if an address can mint new tokens\",\"params\":{\"_admin\":\": the address to verify minting rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint new tokens\"}},\"isMinterBurner(address)\":{\"details\":\"verifiy if an address has rights to mint and burn new tokens\",\"params\":{\"_admin\":\": the address to verify minter-burner rights of\"},\"returns\":{\"_0\":\"a boolean, truthy when _admin has rights to mint and burn new tokens\"}},\"mintTo(address)\":{\"details\":\"Mints a token to an address.\",\"params\":{\"_to\":\"address of the future owner of the token\"}},\"name()\":{\"details\":\"Gets the token name\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"revokeAdminRights(address)\":{\"details\":\"owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY\",\"params\":{\"_admin\":\": address to revoke admin access to\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFromWithData(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setBaseTokenURI(string)\":{\"details\":\"Set the base token uri for all NFTs\"},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Retrieve the uri of a specific token \",\"params\":{\"_tokenId\":\"the id of the token to retrieve the uri of\"},\"returns\":{\"_0\":\"computed uri string pointing to a specific _tokenId\"}},\"tokensOf(address)\":{\"details\":\"@notice Non-Standard method to retrieve all NFTs that specific owner owns\",\"returns\":{\"_0\":\"uint[] containing all NFTs that owner owns\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"updateCode(address)\":{\"details\":\"EIP-1822 featureRealize an update of the Etherland logic code calls the proxy contract to update stored logic code contract address at keccak256(\\\"PROXIABLE\\\")\"}},\"title\":\"Etherland NFT Assets\"},\"userdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"notice\":\"Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings.\"},\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Etherland.sol\":\"Etherland\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Administrable.sol\":{\"keccak256\":\"0x8f99764ad7616746ca2ceabce1cc7230558b6c6dc5d8e2429c98609696e36eda\",\"urls\":[\"bzz-raw://20938c00763c19bdbf7191b6fbf06c1918005666ef0816f2bcc4a34376cb855a\",\"dweb:/ipfs/QmNwyThrfRPVkGdgmWTudNqtTuY1K5tiYUztgUZ2UGxqyQ\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC165.sol\":{\"keccak256\":\"0x780d14a6b8e622d4819cb2f0c9690e559072c30c31e0d6aac4c7e8292c048fe9\",\"urls\":[\"bzz-raw://43b561c6d617108b3c48c22efb7f46ec8c654ef835ce658bb9114f8eee7b0fcd\",\"dweb:/ipfs/QmVcWAeCLcYPAXxFkivGSE3pCopAoNHWedwUcjfxRE3cCa\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC1822/Proxiable.sol\":{\"keccak256\":\"0x7a34d249440c350693e954c8860700d121fabae8d21ca4041d3ffb2e4cd2325e\",\"urls\":[\"bzz-raw://96bc4e443578a70ccaa25738ea0b1b47b99619859ca9ada835bc43d48cf9fda9\",\"dweb:/ipfs/QmVb1FTRjA8AJyt4ZTbUqBPWeSiXN8245cmQVg7qi8ajaq\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC721.sol\":{\"keccak256\":\"0x6dad4073702cad8189ccc00e0ef693cda8648ee604061cc9303b2da76939d3fb\",\"urls\":[\"bzz-raw://1f8275ac1fa62c78abd31a44c24ccf11ba137611c3ca9eab1df5f9d793ad7ebb\",\"dweb:/ipfs/QmZRmsiaHo6csbuXVC82YNA1LevLtZjQDra4TM7HSyWfW3\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC721Full.sol\":{\"keccak256\":\"0x4ef6da1cce8f6a4ca82f9a03cc297eb1161f5b4a62b80231fd031eae3c8b3e37\",\"urls\":[\"bzz-raw://a9ca913f95d6200bb8b438c2cdfcdc4c754f90af7ed4307d86ddf7dc5ce3b205\",\"dweb:/ipfs/QmesUNLxS46rsDvgPyXngsm1wnJg6Jsa8e334azF621geP\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Etherland.sol\":{\"keccak256\":\"0xe800c250d9951a778f031e290b2b485d6ae1bfdc83a98450d6966424bff08ca3\",\"urls\":[\"bzz-raw://18f74fe344b94c54d66af8afc0f3463bac976f46b33432ad8992d15603875282\",\"dweb:/ipfs/QmWmH1cH7tj7EESv9XKLmbL1KnZj2y9YTBCyjG62EHkhC5\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Interfaces/IERC165.sol\":{\"keccak256\":\"0xb5c11194ee0591a687c4e855574850e9defc3e60415ebd20618220ec27aacf9d\",\"urls\":[\"bzz-raw://8187d58ed77c8bc94bc8f51e72a930538492f4e96bda45f003e6b22fde2cf4b3\",\"dweb:/ipfs/QmW2rdZBL6k6kdNQRMmKUnBu6m1uS9jAgv1A9cob1fBC8B\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Interfaces/IERC721.sol\":{\"keccak256\":\"0x50ba4f192bf03f70c08227935d81d906d2d3591120ff2770b92f023f81775c87\",\"urls\":[\"bzz-raw://2dd5283e6379ab433e5fb3f4f92b5ae5c814912ea0e4894bea67c1b45c3288ad\",\"dweb:/ipfs/QmUk4mJYtFaWiCBJXWV897d81j2hfXP5Wjoy8G9LFGqEYD\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Interfaces/IERC721Full.sol\":{\"keccak256\":\"0x0947267be9df72236b96eb1dde103e967512b2fce87594594c41d7d70febdaae\",\"urls\":[\"bzz-raw://dfab1506a185a04120d89e34ffda8dc5a6c78e14ed006ec504a730afddedaa86\",\"dweb:/ipfs/QmWzdoWqyv9imyKWBJztWEBmcna5pBz27vGyueB8Sn1fm9\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Interfaces/IERC721Receiver.sol\":{\"keccak256\":\"0xaf926ee5f8e0fb4941e267163e5200150e1890509828788bc58987f4628a0a3e\",\"urls\":[\"bzz-raw://0a3ee50fe936a0e5811ddfe21801b9857cfa0267a8caf4def1736b515b3550aa\",\"dweb:/ipfs/QmZ6zmvuDZSv6GwkamZaVtkzjB7DEnVUScfgu7Kx5kym9b\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/IpfsHashs.sol\":{\"keccak256\":\"0x10f58c230b563a39fecc74c2111c95e5b3e13363ffd27e9703f48a2ad5a828f2\",\"urls\":[\"bzz-raw://44195ade8a6d5279f27e5ee5f58add8026f3bfcc0d6ea918ac007f680eb3fd69\",\"dweb:/ipfs/QmWbpwy2kppFvrfyCcympf6RuBRrtmrYyssk21nscNV8Xe\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Libraries/Address.sol\":{\"keccak256\":\"0xc1b21eba9e61e8c264e5c1f69e5807b5397044d3455a53b52b49cb904a5b9232\",\"urls\":[\"bzz-raw://6b274194f5da7871e693c78149cd691dde2d5981e3b992da26fd66a3915c0dd8\",\"dweb:/ipfs/QmVitNkxSaak1PA7EPhoEMbEVg25HHGyFU2A2ixU5nfpxm\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Libraries/Counters.sol\":{\"keccak256\":\"0x86f66ff91d9134f2a5a4897053a57333c3c8729fc821b84fdc89090be92de467\",\"urls\":[\"bzz-raw://acfadf8930b4c52606690af843144a97d25ab503c8fca3785209c053acd62037\",\"dweb:/ipfs/QmNTSZvh6SZ5FwXT8yP1BLZJQ37FZGAWSTTXhAupMERWM1\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Libraries/SafeMath.sol\":{\"keccak256\":\"0x7ec50df97342f10890706aab8d8fba17d9740b8ea96ac5daa9170fe2263cf909\",\"urls\":[\"bzz-raw://f88c51f5fb102b26ef38ac42a886460970ffb3a424f83aa54d46228b7d5012e1\",\"dweb:/ipfs/Qmd9WfsMKCymG16NsMKMhdBBLTHPwqLeUBZrySrSWb3pwR\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Libraries/Strings.sol\":{\"keccak256\":\"0x9742061a3f1f2afd8b609d0b635f7507b03a92e02f9ae0a38c25bd5cb73e988b\",\"urls\":[\"bzz-raw://ef5c7a85e069f3c2b98c2f2bc535212f82ba4d3e9a511eb1c66fd23af2010ec1\",\"dweb:/ipfs/QmQngMmTKaT9xBDung38sTi7ZkFLdQDg1r3QVLiexcajNd\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Ownable.sol\":{\"keccak256\":\"0x8b7b0605b60a13280c8755858f18732fdbba579fa549db507c101b9b373aaeb3\",\"urls\":[\"bzz-raw://aeb1cce175eac44a18637b174c92bf691eef3702eb51c7c843c1bb17e3908029\",\"dweb:/ipfs/QmZkomVMXASdkkaDZFnWTQyTSrtb9NSGkzS7gSuP93xyng\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/OwnableDelegateProxy.sol\":{\"keccak256\":\"0x9ad8c5230c7b83290f09725f62c4643ba6a939981a89d98bebc38ec734b8d2df\",\"urls\":[\"bzz-raw://bfc9ef75a676768422c344e00489766e39f9b8699a02ba3e0eb3117271575de3\",\"dweb:/ipfs/QmeAdHvKbwb9EhrqSMuD6xpqunKNPDo2yKU3ZuAG8fBTEa\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ProxyRegistry.sol\":{\"keccak256\":\"0x0a054cd34afd2166b0b009c6732b3f6d9edf3c202ac7c9d758502eed9a1f85e7\",\"urls\":[\"bzz-raw://839172c96576a0e8c6a2ab9e02f7e3d3c5c4e432970df3d0190ec744e839e416\",\"dweb:/ipfs/QmTh6CoY9NHkpktSdDTzFtQs3MCLci4pTRds9qMF7q5SwR\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Storage.sol\":{\"keccak256\":\"0x861dd84479181e7132f96465e0458562313748015b2bc7bb0d946f8890f8fad6\",\"urls\":[\"bzz-raw://55b61b993bdf4740903eb5ae218c1c9945e93102885def4b1413f8d45db6b9b6\",\"dweb:/ipfs/QmTSaDLuvvqWkmN826tPvvQh4854NXquNxQ4jz9iFx13kW\"]},\"/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/TradeableERC721Token.sol\":{\"keccak256\":\"0xd9d4d3ca507420098794f3e373f3f0c90716f65bdcca11a75c09bf9647749bdc\",\"urls\":[\"bzz-raw://9a27a73c8ecad6d0c487611d1b26904a033f1b9d1091b66470625850bb7bf85a\",\"dweb:/ipfs/QmZmnWgMTeS7eVbHWZJ7hpJnCScX5edjcGFkj7UroLbtRw\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061025e5760003560e01c806360a11672116101465780639adfecf9116100c3578063c87b56dd11610087578063c87b56dd14610af8578063cd7c032614610b15578063d547cfb714610b1d578063e985e9c514610b25578063f2fde38b14610b53578063faa0650b14610b795761025e565b80639adfecf914610a37578063a22cb46514610a76578063a2e4d23914610aa4578063aa271e1a14610aca578063beb9716d14610af05761025e565b8063755edd171161010a578063755edd17146109cd5780638d0f5b70146109f35780638da5cb5b14610a1f5780638f32d59b14610a2757806395d89b4114610a2f5761025e565b806360a11672146108985780636352211e1461095c5780636a6811901461097957806370a082311461099f578063715018a6146109c55761025e565b80632f745c59116101df57806342966c68116101a357806342966c681461070f578063469519541461072c5780634f6ccce71461075257806352d1902d1461076f578063598b34aa146107775780635a3f2672146108225761025e565b80632f745c591461053857806330176e13146105645780633b25f6a01461060857806342679683146106b357806342842e0e146106d95761025e565b8063158ef93e11610226578063158ef93e146103a857806318160ddd146103b05780631f6eeb68146103ca57806323b872dd146103d25780632a4b48ed146104085761025e565b806301ffc9a71461026357806305d52d091461029e57806306fdde03146102c6578063081812fc14610343578063095ea7b31461037c575b600080fd5b61028a6004803603602081101561027957600080fd5b50356001600160e01b031916610d43565b604080519115158252519081900360200190f35b6102c4600480360360208110156102b457600080fd5b50356001600160a01b0316610d66565b005b6102ce610e54565b6040805160208082528351818301528351919283929083019185019080838360005b838110156103085781810151838201526020016102f0565b50505050905090810190601f1680156103355780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103606004803603602081101561035957600080fd5b5035610eeb565b604080516001600160a01b039092168252519081900360200190f35b6102c46004803603604081101561039257600080fd5b506001600160a01b038135169060200135610f5b565b61028a611093565b6103b861109c565b60408051918252519081900360200190f35b61028a6110a2565b6102c4600480360360608110156103e857600080fd5b506001600160a01b038135811691602081013590911690604001356110b2565b6102c46004803603606081101561041e57600080fd5b81359190810190604081016020820135600160201b81111561043f57600080fd5b82018360208201111561045157600080fd5b803590602001918460018302840111600160201b8311171561047257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156104c457600080fd5b8201836020820111156104d657600080fd5b803590602001918460018302840111600160201b831117156104f757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061111d945050505050565b6103b86004803603604081101561054e57600080fd5b506001600160a01b038135169060200135611256565b6102c46004803603602081101561057a57600080fd5b810190602081018135600160201b81111561059457600080fd5b8201836020820111156105a657600080fd5b803590602001918460018302840111600160201b831117156105c757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112e0945050505050565b6102ce6004803603604081101561061e57600080fd5b81359190810190604081016020820135600160201b81111561063f57600080fd5b82018360208201111561065157600080fd5b803590602001918460018302840111600160201b8311171561067257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506113df945050505050565b61028a600480360360208110156106c957600080fd5b50356001600160a01b03166114e5565b6102c4600480360360608110156106ef57600080fd5b506001600160a01b03813581169160208101359091169060400135611539565b6102c46004803603602081101561072557600080fd5b5035611554565b6102c46004803603602081101561074257600080fd5b50356001600160a01b03166115b9565b6103b86004803603602081101561076857600080fd5b5035611611565b6103b8611681565b6102c46004803603604081101561078d57600080fd5b81359190810190604081016020820135600160201b8111156107ae57600080fd5b8201836020820111156107c057600080fd5b803590602001918460018302840111600160201b831117156107e157600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506116a5945050505050565b6108486004803603602081101561083857600080fd5b50356001600160a01b0316611792565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561088457818101518382015260200161086c565b505050509050019250505060405180910390f35b6102c4600480360360808110156108ae57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b8111156108e857600080fd5b8201836020820111156108fa57600080fd5b803590602001918460018302840111600160201b8311171561091b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506117f3945050505050565b6103606004803603602081101561097257600080fd5b5035611852565b6102c46004803603602081101561098f57600080fd5b50356001600160a01b03166118b8565b6103b8600480360360208110156109b557600080fd5b50356001600160a01b03166119bb565b6102c4611a35565b6102c4600480360360208110156109e357600080fd5b50356001600160a01b0316611ace565b6102c460048036036040811015610a0957600080fd5b50803590602001356001600160a01b0316611b49565b610360611c60565b61028a611c6f565b6102ce611c80565b610a5d60048036036020811015610a4d57600080fd5b50356001600160a01b0316611ce0565b60408051600192830b90920b8252519081900360200190f35b6102c460048036036040811015610a8c57600080fd5b506001600160a01b0381351690602001351515611d2d565b6102c460048036036020811015610aba57600080fd5b50356001600160a01b0316611df3565b61028a60048036036020811015610ae057600080fd5b50356001600160a01b0316611ef6565b61028a611f48565b6102ce60048036036020811015610b0e57600080fd5b5035611f53565b610360611f6e565b6102ce611f7d565b61028a60048036036040811015610b3b57600080fd5b506001600160a01b0381358116916020013516611fdb565b6102c460048036036020811015610b6957600080fd5b50356001600160a01b0316612086565b6102c4600480360360a0811015610b8f57600080fd5b810190602081018135600160201b811115610ba957600080fd5b820183602082011115610bbb57600080fd5b803590602001918460018302840111600160201b83111715610bdc57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b811115610c2e57600080fd5b820183602082011115610c4057600080fd5b803590602001918460018302840111600160201b83111715610c6157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092956001600160a01b03853516959094909350604081019250602001359050600160201b811115610cc457600080fd5b820183602082011115610cd657600080fd5b803590602001918460018302840111600160201b83111715610cf757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b031691506120de9050565b6001600160e01b0319811660009081526006602052604090205460ff165b919050565b610d6e611c6f565b610db5576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b038116610e09576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020526040808220805461ffff19169055517f75063598bb424244ef6461ff8e1e0a1836998c3c84ef9e591015fbe8d94fa71f9190a25050565b60008054604080516020601f6002600019610100600188161502019095169490940493840181900481028201810190925282815260609390929091830182828015610ee05780601f10610eb557610100808354040283529160200191610ee0565b820191906000526020600020905b815481529060010190602001808311610ec357829003601f168201915b505050505090505b90565b6000610ef682612169565b610f3f576040805162461bcd60e51b81526020600482015260156024820152741d1bdad95b925108191bd95cdb89dd08195e1a5cdd605a1b604482015290519081900360640190fd5b506000908152600860205260409020546001600160a01b031690565b6000610f6682611852565b9050806001600160a01b0316836001600160a01b03161415610fc9576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336001600160a01b0382161480610fe55750610fe58133611fdb565b61102a576040805162461bcd60e51b81526020600482015260116024820152701c195c9b5a5cdcda5bdb8819195b9a5959607a1b604482015290519081900360640190fd5b60008281526008602090815260409182902080546001600160a01b0319166001600160a01b03878116918217909255835186815293519093918516927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3505050565b60125460ff1681565b60055490565b60006110ad336114e5565b905090565b6110bc3382612186565b61110d576040805162461bcd60e51b815260206004820152601760248201527f7370656e646572206973206e6f7420617070726f766564000000000000000000604482015290519081900360640190fd5b6111188383836121dd565b505050565b611125611f48565b611176576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b600083116111cb576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a20746f6b656e207a65726f2063616e742062652075736564604482015290519081900360640190fd5b8060116000858152602001908152602001600020836040518082805190602001908083835b6020831061120f5780518252601f1990920191602091820191016111f0565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451611250959194919091019250905061306b565b50505050565b6000611261836119bb565b82106112a8576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b6001600160a01b0383166000908152600c602052604090208054839081106112cc57fe5b906000526020600020015490505b92915050565b6112e8611c6f565b61132f576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b805161134290600290602084019061306b565b507fe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e690816040518080602001828103825283818151815260200191508051906020019080838360005b838110156113a257818101518382015260200161138a565b50505050905090810190601f1680156113cf5780820380516001836020036101000a031916815260200191505b509250505060405180910390a150565b606060116000848152602001908152602001600020826040518082805190602001908083835b602083106114245780518252601f199092019160209182019101611405565b518151600019602094850361010090810a820192831692199390931691909117909252949092019687526040805197889003820188208054601f60026001831615909802909501169590950492830182900482028801820190528187529294509250508301828280156114d85780601f106114ad576101008083540402835291602001916114d8565b820191906000526020600020905b8154815290600101906020018083116114bb57829003601f168201915b5050505050905092915050565b60006114ef611c60565b6001600160a01b0316826001600160a01b0316141561151057506001610d61565b506001600160a01b038116600090815260106020526040902054600190810b900b600214610d61565b611118838383604051806020016040528060008152506117f3565b61155c6110a2565b6115ad576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206275726e696e6720726967687473604482015290519081900360640190fd5b6115b6816121fc565b50565b6115c1611c6f565b611608576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6115b68161220e565b600061161b61109c565b8210611662576040805162461bcd60e51b81526020600482015260116024820152700d2dcc8caf040d2e640e8dede40d0d2ced607b1b604482015290519081900360640190fd5b6005828154811061166f57fe5b90600052602060002001549050919050565b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf790565b6116ad6110a2565b6116fe576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206275726e696e6720726967687473604482015290519081900360640190fd5b6040518060200160405280600081525060116000848152602001908152602001600020826040518082805190602001908083835b602083106117515780518252601f199092019160209182019101611732565b51815160209384036101000a60001901801990921691161790529201948552506040519384900381019093208451611118959194919091019250905061306b565b606061179d826122fb565b8054806020026020016040519081016040528092919081815260200182805480156117e757602002820191906000526020600020905b8154815260200190600101908083116117d3575b50505050509050919050565b6117fe8484846110b2565b61180a84848484612315565b611250576040805162461bcd60e51b81526020600482015260146024820152736461746120636865636b206973206e6f74206f6b60601b604482015290519081900360640190fd5b6000818152600760205260408120546001600160a01b0316806112da576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6118c0611c6f565b611907576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b03811661195b576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805461ffff19166001908117909155825190815291517fc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a3679281900390910190a25050565b60006001600160a01b038216611a14576040805162461bcd60e51b815260206004820152601960248201527806f776e65722063616e6e6f742062652061646472657373203603c1b604482015290519081900360640190fd5b6001600160a01b03821660009081526009602052604090206112da90612448565b611a3d611c6f565b611a84576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b600f546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600f80546001600160a01b0319169055565b611ad6611f48565b611b27576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b6000611b3161244c565b9050611b3d8282612463565b611b45612480565b5050565b611b51611f48565b611ba2576040805162461bcd60e51b815260206004820181905260248201527f64656e696564203a206e6f2061646d696e206d696e74696e6720726967687473604482015290519081900360640190fd5b60008211611bee576040805162461bcd60e51b815260206004820152601460248201527336b4b73a1036b4b734b6bab69018903a37b5b2b760611b604482015290519081900360640190fd5b6001600160a01b038116611c44576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b60005b8281101561111857611c5882611ace565b600101611c47565b600f546001600160a01b031690565b600f546001600160a01b0316331490565b60018054604080516020601f60026000196101008789161502019095169490940493840181900481028201810190925282815260609390929091830182828015610ee05780601f10610eb557610100808354040283529160200191610ee0565b6000611cea611c60565b6001600160a01b0316826001600160a01b03161415611d0b57506002610d61565b506001600160a01b03811660009081526010602052604090205460010b610d61565b6001600160a01b038216331415611d85576040805162461bcd60e51b815260206004820152601760248201527631b0b73737ba1030b8383937bb32903cb7bab939b2b63360491b604482015290519081900360640190fd5b336000818152600a602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b611dfb611c6f565b611e42576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b806001600160a01b038116611e96576040805162461bcd60e51b8152602060048201526015602482015274696e76616c69642061646d696e206164647265737360581b604482015290519081900360640190fd5b6001600160a01b038216600081815260106020908152604091829020805461ffff19166002908117909155825190815291517fc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a3679281900390910190a25050565b6000611f00611c60565b6001600160a01b0316826001600160a01b03161415611f2157506001610d61565b506001600160a01b038116600090815260106020526040812054600190810b900b13610d61565b60006110ad33611ef6565b60606112da611f60611f7d565b611f698461248b565b61254c565b6003546001600160a01b031681565b60028054604080516020601f6000196101006001871615020190941685900493840181900481028201810190925282815260609390929091830182828015610ee05780601f10610eb557610100808354040283529160200191610ee0565b6003546040805163c455279160e01b81526001600160a01b0385811660048301529151600093831692851691839163c455279191602480820192602092909190829003018186803b15801561202f57600080fd5b505afa158015612043573d6000803e3d6000fd5b505050506040513d602081101561205957600080fd5b50516001600160a01b031614156120745760019150506112da565b61207e848461258f565b949350505050565b61208e611c6f565b6120d5576040805162461bcd60e51b815260206004820152601360248201527239b2b73232b91034b9903737ba1037bbb732b960691b604482015290519081900360640190fd5b6115b6816125bd565b60125460ff161515600114612162576012805460ff19166001179055612105858585612674565b815161211890600290602085019061306b565b506121296301ffc9a760e01b6126a2565b612139635b5e139f60e01b6126a2565b61214963780e9d6360e01b6126a2565b6121596380ac58cd60e01b6126a2565b612162816125bd565b5050505050565b6000908152600760205260409020546001600160a01b0316151590565b60008061219283611852565b9050806001600160a01b0316846001600160a01b031614806121cd5750836001600160a01b03166121c284610eeb565b6001600160a01b0316145b8061207e575061207e8185611fdb565b6121e8838383612716565b6121f28382612893565b6111188282612995565b6115b661220882611852565b826129d3565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561224757600080fd5b505afa15801561225b573d6000803e3d6000fd5b505050506040513d602081101561227157600080fd5b50517fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf7146122d7576040805162461bcd60e51b815260206004820152600e60248201526d4e6f7420636f6d70617469626c6560901b604482015290519081900360640190fd5b7fc5f16f0fcc639fa48a6947836d9850f504798523bf8c9a3a87d5876cf622bcf755565b6001600160a01b03166000908152600c6020526040902090565b6000612329846001600160a01b03166129ff565b6123355750600161207e565b604051630a85bd0160e11b815233600482018181526001600160a01b03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b838110156123af578181015183820152602001612397565b50505050905090810190601f1680156123dc5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156123fe57600080fd5b505af1158015612412573d6000803e3d6000fd5b505050506040513d602081101561242857600080fd5b50516001600160e01b031916630a85bd0160e11b14915050949350505050565b5490565b6004546000906110ad90600163ffffffff612a0516565b61246d8282612a5f565b6124778282612995565b611b4581612b8b565b600480546001019055565b6060816124b057506040805180820190915260018152600360fc1b6020820152610d61565b8160005b81156124c857600101600a820491506124b4565b6060816040519080825280601f01601f1916602001820160405280156124f5576020820181803883390190505b50905060001982015b851561254357600a860660300160f81b8282806001900393508151811061252157fe5b60200101906001600160f81b031916908160001a905350600a860495506124fe565b50949350505050565b60606125888383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612bcf565b9392505050565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b6001600160a01b038116612618576040805162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e65722063616e6e6f7420626520616464726573732030000000604482015290519081900360640190fd5b600f546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600f80546001600160a01b0319166001600160a01b0392909216919091179055565b61267e8383612de3565b600380546001600160a01b0319166001600160a01b03929092169190911790555050565b6001600160e01b031980821614156126f1576040805162461bcd60e51b815260206004820152600d60248201526c62616420696e7465726661636560981b604482015290519081900360640190fd5b6001600160e01b0319166000908152600660205260409020805460ff19166001179055565b826001600160a01b031661272982611852565b6001600160a01b031614612784576040805162461bcd60e51b815260206004820181905260248201527f73656e646572206973206e6f74206f776e6572206f662074686520746f6b656e604482015290519081900360640190fd5b6001600160a01b0382166127df576040805162461bcd60e51b815260206004820152601860248201527f63616e6e6f742073656e6420746f203020616464726573730000000000000000604482015290519081900360640190fd5b6127e881612e0a565b6001600160a01b038316600090815260096020526040902061280990612e45565b6001600160a01b038216600090815260096020526040902061282a90612e5c565b60008181526007602090815260409182902080546001600160a01b0319166001600160a01b03868116918217909255835185815293519093918716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a3505050565b6001600160a01b0382166000908152600c60205260408120546128bd90600163ffffffff612e6516565b6000838152600d6020526040902054909150808214612958576001600160a01b0384166000908152600c602052604081208054849081106128fa57fe5b9060005260206000200154905080600c6000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061293857fe5b6000918252602080832090910192909255918252600d9052604090208190555b6001600160a01b0384166000908152600c6020526040902080548061297957fe5b6001900381819060005260206000200160009055905550505050565b6001600160a01b039091166000908152600c602081815260408084208054868652600d84529185208290559282526001810183559183529091200155565b6129dd8282612ec2565b6129e78282612893565b6000818152600d6020526040812055611b4581612fb7565b3b151590565b600082820183811015612588576040805162461bcd60e51b815260206004820181905260248201527f626f7468206e756d62657273206861766520746f20626520706f736974697665604482015290519081900360640190fd5b6001600160a01b038216612ab5576040805162461bcd60e51b8152602060048201526018602482015277063616e6e6f74206d696e7420746f206164647265737320360441b604482015290519081900360640190fd5b612abe81612169565b15612b07576040805162461bcd60e51b8152602060048201526014602482015273746f6b656e20616c72656164792065786973747360601b604482015290519081900360640190fd5b600081815260076020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260099091529020612b4690612e5c565b6040805182815290516001600160a01b038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b600580546000838152600e60205260408120829055600182018355919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00155565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612c23576020820181803883390190505b509050806000805b8851811015612c7c57888181518110612c4057fe5b602001015160f81c60f81b838380600101945081518110612c5d57fe5b60200101906001600160f81b031916908160001a905350600101612c2b565b5060005b8751811015612cd157878181518110612c9557fe5b602001015160f81c60f81b838380600101945081518110612cb257fe5b60200101906001600160f81b031916908160001a905350600101612c80565b5060005b8651811015612d2657868181518110612cea57fe5b602001015160f81c60f81b838380600101945081518110612d0757fe5b60200101906001600160f81b031916908160001a905350600101612cd5565b5060005b8551811015612d7b57858181518110612d3f57fe5b602001015160f81c60f81b838380600101945081518110612d5c57fe5b60200101906001600160f81b031916908160001a905350600101612d2a565b5060005b8451811015612dd057848181518110612d9457fe5b602001015160f81c60f81b838380600101945081518110612db157fe5b60200101906001600160f81b031916908160001a905350600101612d7f565b50909d9c50505050505050505050505050565b8151612df690600090602085019061306b565b50805161111890600190602084019061306b565b6000818152600860205260409020546001600160a01b0316156115b657600090815260086020526040902080546001600160a01b0319169055565b8054612e5890600163ffffffff612e6516565b9055565b80546001019055565b600082821115612ebc576040805162461bcd60e51b815260206004820152601d60248201527f726573756c742063616e6e6f74206265206c6f776572207468616e2030000000604482015290519081900360640190fd5b50900390565b816001600160a01b0316612ed582611852565b6001600160a01b031614612f30576040805162461bcd60e51b815260206004820152601f60248201527f61646472657373206973206e6f74206f776e6572206f6620746f6b656e494400604482015290519081900360640190fd5b612f3981612e0a565b6001600160a01b0382166000908152600960205260409020612f5a90612e45565b600081815260076020908152604080832080546001600160a01b0319169055805184815290516001600160a01b038616927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928290030190a35050565b600554600090612fce90600163ffffffff612e6516565b6000838152600e602052604081205460058054939450909284908110612ff057fe5b90600052602060002001549050806005838154811061300b57fe5b6000918252602080832090910192909255828152600e90915260409020829055600580548061303657fe5b600190038181906000526020600020016000905590556000600e60008681526020019081526020016000208190555050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106130ac57805160ff19168380011785556130d9565b828001600101855582156130d9579182015b828111156130d95782518255916020019190600101906130be565b506130e59291506130e9565b5090565b610ee891905b808211156130e557600081556001016130ef56fea264697066735822122069e79d2b0e3dc2eb8e403b2ac25f84b62574968db953a719451ac4ebf32cc6e664736f6c63430006020033",
  "sourceMap": "366:2314:6:-:0;;;753:1:20;718:36;;534:31:6;;;-1:-1:-1;;534:31:6;;;366:2314;5:2:-1;;;;30:1;27;20:12;5:2;366:2314:6;;;;;;;",
  "deployedSourceMap": "366:2314:6:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;366:2314:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;601:142:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;601:142:1;-1:-1:-1;;;;;;601:142:1;;:::i;:::-;;;;;;;;;;;;;;;;;;3847:159:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3847:159:0;-1:-1:-1;;;;;3847:159:0;;:::i;:::-;;778:92:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;778:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:185:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3089:185:4;;:::i;:::-;;;;-1:-1:-1;;;;;3089:185:4;;;;;;;;;;;;;;2460:349;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2460:349:4;;;;;;;;:::i;534:31:6:-;;;:::i;1800:103:5:-;;;:::i;:::-;;;;;;;;;;;;;;;;2241:122:0;;;:::i;4715:216:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4715:216:4;;;;;;;;;;;;;;;;;:::i;255:215:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;255:215:11;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;255:215:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;255:215:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;255:215:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;255:215:11;;;;;;;;-1:-1:-1;255:215:11;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;255:215:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;255:215:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;255:215:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;255:215:11;;-1:-1:-1;255:215:11;;-1:-1:-1;;;;;255:215:11:i;1439:212:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1439:212:5;;;;;;;;:::i;1836:136:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1836:136:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1836:136:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1836:136:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1836:136:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;1836:136:6;;-1:-1:-1;1836:136:6;;-1:-1:-1;;;;;1836:136:6:i;616:145:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;616:145:11;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;616:145:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;616:145:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;616:145:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;616:145:11;;-1:-1:-1;616:145:11;;-1:-1:-1;;;;;616:145:11:i;1665:182:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1665:182:0;-1:-1:-1;;;;;1665:182:0;;:::i;5554:149:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5554:149:4;;;;;;;;;;;;;;;;;:::i;1473:91:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1473:91:21;;:::i;2580:97:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2580:97:6;-1:-1:-1;;;;;2580:97:6;;:::i;2235:178:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2235:178:5;;:::i;742:145:2:-;;;:::i;476:134:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;476:134:11;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;476:134:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;476:134:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;476:134:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;476:134:11;;-1:-1:-1;476:134:11;;-1:-1:-1;;;;;476:134:11:i;7246:114:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7246:114:5;-1:-1:-1;;;;;7246:114:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7246:114:5;;;;;;;;;;;;;;;;;6397:252:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6397:252:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6397:252:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6397:252:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6397:252:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6397:252:4;;-1:-1:-1;6397:252:4;;-1:-1:-1;;;;;6397:252:4:i;1830:215::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1830:215:4;;:::i;3087:162:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3087:162:0;-1:-1:-1;;;;;3087:162:0;;:::i;1418:198:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1418:198:4;-1:-1:-1;;;;;1418:198:4;;:::i;1254:137:17:-;;;:::i;788:163:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;788:163:21;-1:-1:-1;;;;;788:163:21;;:::i;1170:246::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1170:246:21;;;;;;-1:-1:-1;;;;;1170:246:21;;:::i;477:77:17:-;;;:::i;816:90::-;;;:::i;975:96:5:-;;;:::i;885:150:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;885:150:0;-1:-1:-1;;;;;885:150:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3561:249:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3561:249:4;;;;;;;;;;:::i;3496:168:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3496:168:0;-1:-1:-1;;;;;3496:168:0;;:::i;1245:175::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1245:175:0;-1:-1:-1;;;;;1245:175:0;;:::i;1976:112::-;;;:::i;2173:193:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2173:193:6;;:::i;652:35:20:-;;;:::i;1671:97:6:-;;;:::i;2096:434:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2096:434:21;;;;;;;;;;:::i;1559:107:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1559:107:17;-1:-1:-1;;;;;1559:107:17;;:::i;864:741:6:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;864:741:6;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;864:741:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;864:741:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;864:741:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;864:741:6;;;;;;;;-1:-1:-1;864:741:6;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;864:741:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;864:741:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;864:741:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;864:741:6;;-1:-1:-1;;;;;864:741:6;;;;;;;;-1:-1:-1;864:741:6;;;;-1:-1:-1;864:741:6;;;;-1:-1:-1;;;;5:28;;2:2;;;46:1;43;36:12;2:2;864:741:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;864:741:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;864:741:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;864:741:6;;-1:-1:-1;;;864:741:6;;-1:-1:-1;;;;;864:741:6;;-1:-1:-1;864:741:6;;-1:-1:-1;864:741:6:i;601:142:1:-;-1:-1:-1;;;;;;703:33:1;;680:4;703:33;;;:20;:33;;;;;;;;601:142;;;;:::o;3847:159:0:-;679:9:17;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;3922:6:0;-1:-1:-1;;;;;2815:20:0;::::1;2807:54;;;::::0;;-1:-1:-1;;;2807:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2807:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3940:14:0;::::2;3957:1;3940:14:::0;;;:6:::2;:14;::::0;;;;;:18;;-1:-1:-1;;3940:18:0::2;::::0;;3973:26;::::2;::::0;3957:1;3973:26:::2;722:1:17::1;3847:159:0::0;:::o;778:92:5:-;858:5;851:12;;;;;;;;-1:-1:-1;;851:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:13;;851:12;;858:5;;851:12;;858:5;851:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:92;;:::o;3089:185:4:-;3157:7;3184:16;3192:7;3184;:16::i;:::-;3176:50;;;;;-1:-1:-1;;;3176:50:4;;;;;;;;;;;;-1:-1:-1;;;3176:50:4;;;;;;;;;;;;;;;-1:-1:-1;3243:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;3243:24:4;;3089:185::o;2460:349::-;2532:13;2548:16;2556:7;2548;:16::i;:::-;2532:32;;2588:5;-1:-1:-1;;;;;2582:11:4;:2;-1:-1:-1;;;;;2582:11:4;;;2574:47;;;;;-1:-1:-1;;;2574:47:4;;;;;;;;;;;;-1:-1:-1;;;2574:47:4;;;;;;;;;;;;;;;2639:10;-1:-1:-1;;;;;2639:19:4;;;;:58;;;2662:35;2679:5;2686:10;2662:16;:35::i;:::-;2631:88;;;;;-1:-1:-1;;;2631:88:4;;;;;;;;;;;;-1:-1:-1;;;2631:88:4;;;;;;;;;;;;;;;2730:24;;;;:15;:24;;;;;;;;;:29;;-1:-1:-1;;;;;;2730:29:4;-1:-1:-1;;;;;2730:29:4;;;;;;;;;2774:28;;;;;;;2730:29;;2774:28;;;;;;;;;;;;2460:349;;;:::o;534:31:6:-;;;;;;:::o;1800:103:5:-;1879:10;:17;1800:103;:::o;2241:122:0:-;2284:4;2320:26;2335:10;2320:14;:26::i;:::-;2300:56;;2241:122;:::o;4715:216:4:-;4814:39;4833:10;4845:7;4814:18;:39::i;:::-;4806:75;;;;;-1:-1:-1;;;4806:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;4892:32;4906:4;4912:2;4916:7;4892:13;:32::i;:::-;4715:216;;;:::o;255:215:11:-;2468:9:0;:7;:9::i;:::-;2447:88;;;;;-1:-1:-1;;;2447:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:1:11::1;370:7;:11;362:56;;;::::0;;-1:-1:-1;;;362:56:11;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;458:5;428:9;:18;438:7;428:18;;;;;;;;;;;447:7;428:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;-1:-1;;139:12;;;;98:2:::1;89:12:::0;;::::1;::::0;114::::1;36:153;;;299:10:::0;344;;263:2:::1;259:12:::0;;::::1;254:3;250:22;-1:-1:::0;;246:30;311:9;::::1;295:26:::0;;::::1;340:21:::0;::::1;377:20;365:33:::0;;428:27:11;::::1;::::0;;;-1:-1:-1;428:27:11::1;::::0;;;;;;;;;;:35;;::::1;::::0;:27;;:35;;;::::1;::::0;-1:-1:-1;428:35:11;-1:-1:-1;428:35:11::1;:::i;:::-;;255:215:::0;;;:::o;1439:212:5:-;1528:7;1563:16;1573:5;1563:9;:16::i;:::-;1555:5;:24;1547:54;;;;;-1:-1:-1;;;1547:54:5;;;;;;;;;;;;-1:-1:-1;;;1547:54:5;;;;;;;;;;;;;;;-1:-1:-1;;;;;1618:19:5;;;;;;:12;:19;;;;;:26;;1638:5;;1618:26;;;;;;;;;;;;;;1611:33;;1439:212;;;;;:::o;1836:136:6:-;679:9:17;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;1907:19:6;;::::1;::::0;:13:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1941:24;1961:3;1941:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11:::0;;::::1;84:18:::0;71:11;;::::1;64:39:::0;52:2:::1;45:10;8:100;;;12:14;1941:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1836:136:::0;:::o;616:145:11:-;695:13;727:9;:18;737:7;727:18;;;;;;;;;;;746:7;727:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;-1:-1;;263:2;259:12;;;254:3;250:22;;;246:30;;340:21;;;311:9;;295:26;;;;377:20;;;;365:33;;;727:27:11;;;;;;;;;;;;;;;;;;720:34;;;;274:1:-1;720:34:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:27;;-1:-1:-1;720:34:11;-1:-1:-1;;720:34:11;;727:27;720:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;616:145;;;;:::o;1665:182:0:-;1726:4;1756:7;:5;:7::i;:::-;-1:-1:-1;;;;;1746:17:0;:6;-1:-1:-1;;;;;1746:17:0;;1742:98;;;-1:-1:-1;1772:4:0;1765:11;;1742:98;-1:-1:-1;;;;;;1811:14:0;;;;;;:6;:14;;;;;;;;;;:19;;1829:1;1811:19;1791:49;;5554:149:4;5649:47;5674:4;5680:2;5684:7;5649:47;;;;;;;;;;;;:24;:47::i;1473:91:21:-;2664:13:0;:11;:13::i;:::-;2643:92;;;;;-1:-1:-1;;;2643:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1536:21:21::1;1548:8;1536:11;:21::i;:::-;1473:91:::0;:::o;2580:97:6:-;679:9:17;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;2644:26:6::1;2662:7;2644:17;:26::i;2235:178:5:-:0;2302:7;2337:13;:11;:13::i;:::-;2329:5;:21;2321:51;;;;;-1:-1:-1;;;2321:51:5;;;;;;;;;;;;-1:-1:-1;;;2321:51:5;;;;;;;;;;;;;;;2389:10;2400:5;2389:17;;;;;;;;;;;;;;;;2382:24;;2235:178;;;:::o;742:145:2:-;814:66;742:145;:::o;476:134:11:-;2664:13:0;:11;:13::i;:::-;2643:92;;;;;-1:-1:-1;;;2643:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;571:32:11::1;;;;;;;;;;;::::0;:9:::1;:18;581:7;571:18;;;;;;;;;;;590:7;571:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;-1:-1;;139:12;;;;98:2:::1;89:12:::0;;::::1;::::0;114::::1;36:153;;;299:10:::0;344;;263:2:::1;259:12:::0;;::::1;254:3;250:22;-1:-1:::0;;246:30;311:9;::::1;295:26:::0;;::::1;340:21:::0;::::1;377:20;365:33:::0;;571:27:11;::::1;::::0;;;-1:-1:-1;571:27:11::1;::::0;;;;;;;;;;:32;;::::1;::::0;:27;;:32;;;::::1;::::0;-1:-1:-1;571:32:11;-1:-1:-1;571:32:11::1;:::i;7246:114:5:-:0;7300:13;7332:21;7347:5;7332:14;:21::i;:::-;7325:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7246:114;;;:::o;6397:252:4:-;6520:31;6533:4;6539:2;6543:7;6520:12;:31::i;:::-;6569:48;6592:4;6598:2;6602:7;6611:5;6569:22;:48::i;:::-;6561:81;;;;;-1:-1:-1;;;6561:81:4;;;;;;;;;;;;-1:-1:-1;;;6561:81:4;;;;;;;;;;;;;;1830:215;1894:7;1929:20;;;:11;:20;;;;;;-1:-1:-1;;;;;1929:20:4;1967:19;1959:57;;;;;-1:-1:-1;;;1959:57:4;;;;;;;;;;;;-1:-1:-1;;;1959:57:4;;;;;;;;;;;;;;3087:162:0;679:9:17;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;3162:6:0;-1:-1:-1;;;;;2815:20:0;::::1;2807:54;;;::::0;;-1:-1:-1;;;2807:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2807:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3180:14:0;::::2;;::::0;;;:6:::2;:14;::::0;;;;;;;;:18;;-1:-1:-1;;3180:18:0::2;3197:1;3180:18:::0;;::::2;::::0;;;3213:29;;;;;;;::::2;::::0;;;;;;;;::::2;722:1:17::1;3087:162:0::0;:::o;1418:198:4:-;1482:7;-1:-1:-1;;;;;1509:19:4;;1501:57;;;;;-1:-1:-1;;;1501:57:4;;;;;;;;;;;;-1:-1:-1;;;1501:57:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;1575:24:4;;;;;;:17;:24;;;;;:34;;:32;:34::i;1254:137:17:-;679:9;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;1336:6:::1;::::0;1315:40:::1;::::0;1352:1:::1;::::0;-1:-1:-1;;;;;1336:6:17::1;::::0;1315:40:::1;::::0;1352:1;;1315:40:::1;1365:6;:19:::0;;-1:-1:-1;;;;;;1365:19:17::1;::::0;;1254:137::o;788:163:21:-;2468:9:0;:7;:9::i;:::-;2447:88;;;;;-1:-1:-1;;;2447:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:18:21::1;866:17;:15;:17::i;:::-;845:38;;893:22;899:3;904:10;893:5;:22::i;:::-;925:19;:17;:19::i;:::-;2545:1:0;788:163:21::0;:::o;1170:246::-;2468:9:0;:7;:9::i;:::-;2447:88;;;;;-1:-1:-1;;;2447:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:1:21::1;1253:6;:10;1245:43;;;::::0;;-1:-1:-1;;;1245:43:21;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1245:43:21;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;1306:17:21;::::1;1298:54;;;::::0;;-1:-1:-1;;;1298:54:21;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;1298:54:21;;;;;;;;;;;;;::::1;;1368:6;1363:45;1384:6;1380:1;:10;1363:45;;;1397:11;1404:3;1397:6;:11::i;:::-;1392:3;;1363:45;;477:77:17::0;541:6;;-1:-1:-1;;;;;541:6:17;477:77;:::o;816:90::-;893:6;;-1:-1:-1;;;;;893:6:17;879:10;:20;;816:90::o;975:96:5:-;1057:7;1050:14;;;;;;;;-1:-1:-1;;1050:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1025:13;;1050:14;;1057:7;;1050:14;;1057:7;1050:14;;;;;;;;;;;;;;;;;;;;;;;;885:150:0;944:5;975:7;:5;:7::i;:::-;-1:-1:-1;;;;;965:17:0;:6;-1:-1:-1;;;;;965:17:0;;961:67;;;-1:-1:-1;991:1:0;984:8;;961:67;-1:-1:-1;;;;;;1014:14:0;;;;;;:6;:14;;;;;;;;1007:21;;3561:249:4;-1:-1:-1;;;;;3649:16:4;;3655:10;3649:16;;3641:52;;;;;-1:-1:-1;;;3641:52:4;;;;;;;;;;;;-1:-1:-1;;;3641:52:4;;;;;;;;;;;;;;;3722:10;3703:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;3703:34:4;;;;;;;;;;;;:45;;-1:-1:-1;;3703:45:4;;;;;;;;;;3763:40;;;;;;;3703:34;;3722:10;3763:40;;;;;;;;;;;3561:249;;:::o;3496:168:0:-;679:9:17;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;3577:6:0;-1:-1:-1;;;;;2815:20:0;::::1;2807:54;;;::::0;;-1:-1:-1;;;2807:54:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2807:54:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;3595:14:0;::::2;;::::0;;;:6:::2;:14;::::0;;;;;;;;:18;;-1:-1:-1;;3595:18:0::2;3612:1;3595:18:::0;;::::2;::::0;;;3628:29;;;;;;;::::2;::::0;;;;;;;;::::2;722:1:17::1;3496:168:0::0;:::o;1245:175::-;1300:4;1330:7;:5;:7::i;:::-;-1:-1:-1;;;;;1320:17:0;:6;-1:-1:-1;;;;;1320:17:0;;1316:97;;;-1:-1:-1;1346:4:0;1339:11;;1316:97;-1:-1:-1;;;;;;1385:14:0;;1402:1;1385:14;;;:6;:14;;;;;;;;;;:18;;;1365:48;;1976:112;2015:4;2051:20;2060:10;2051:8;:20::i;2173:193:6:-;2232:13;2264:95;2295:14;:12;:14::i;:::-;2323:26;2340:8;2323:16;:26::i;:::-;2264:17;:95::i;652:35:20:-;;;-1:-1:-1;;;;;652:35:20;;:::o;1671:97:6:-;1748:13;1741:20;;;;;;;-1:-1:-1;;1741:20:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:13;;1741:20;;1748:13;;1741:20;;1748:13;1741:20;;;;;;;;;;;;;;;;;;;;;;;;2096:434:21;2345:20;;2388:28;;;-1:-1:-1;;;2388:28:21;;-1:-1:-1;;;;;2388:28:21;;;;;;;;;2219:4;;2345:20;;;2380:49;;;2345:20;;2388:21;;:28;;;;;;;;;;;;;;;2345:20;2388:28;;;5:2:-1;;;;30:1;27;20:12;5:2;2388:28:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2388:28:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2388:28:21;-1:-1:-1;;;;;2380:49:21;;2376:91;;;2452:4;2445:11;;;;;2376:91;2484:39;2507:5;2514:8;2484:22;:39::i;:::-;2477:46;2096:434;-1:-1:-1;;;;2096:434:21:o;1559:107:17:-;679:9;:7;:9::i;:::-;671:41;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;-1:-1:-1;;;671:41:17;;;;;;;;;;;;;;;1631:28:::1;1650:8;1631:18;:28::i;864:741:6:-:0;1059:11;;;;:19;;:11;:19;1055:544;;1094:11;:18;;-1:-1:-1;;1094:18:6;1108:4;1094:18;;;1127:64;1153:5;1160:7;1169:21;1127:25;:64::i;:::-;1206:23;;;;:13;;:23;;;;;:::i;:::-;-1:-1:-1;1325:40:6;-1:-1:-1;;;1325:18:6;:40::i;:::-;1379:49;-1:-1:-1;;;1379:18:6;:49::i;:::-;1442:51;-1:-1:-1;;;1442:18:6;:51::i;:::-;1507:40;-1:-1:-1;;;1507:18:6;:40::i;:::-;1562:26;1581:6;1562:18;:26::i;:::-;864:741;;;;;:::o;6839:152:4:-;6896:4;6928:20;;;:11;:20;;;;;;-1:-1:-1;;;;;6928:20:4;6965:19;;;6839:152::o;7345:246::-;7430:4;7446:13;7462:16;7470:7;7462;:16::i;:::-;7446:32;;7507:5;-1:-1:-1;;;;;7496:16:4;:7;-1:-1:-1;;;;;7496:16:4;;:51;;;;7540:7;-1:-1:-1;;;;;7516:31:4;:20;7528:7;7516:11;:20::i;:::-;-1:-1:-1;;;;;7516:31:4;;7496:51;:87;;;;7551:32;7568:5;7575:7;7551:16;:32::i;2782:248:5:-;2876:38;2896:4;2902:2;2906:7;2876:19;:38::i;:::-;2925:47;2958:4;2964:7;2925:32;:47::i;:::-;2983:40;3011:2;3015:7;2983:27;:40::i;8916:90:4:-;8967:32;8973:16;8981:7;8973;:16::i;:::-;8991:7;8967:5;:32::i;336:401:2:-;512:10;-1:-1:-1;;;;;502:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:37:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;502:37:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;502:37:2;431:66;423:116;402:177;;;;;-1:-1:-1;;;402:177:2;;;;;;;;;;;;-1:-1:-1;;;402:177:2;;;;;;;;;;;;;;;642:66;635:86;598:133::o;4325:124:5:-;-1:-1:-1;;;;;4423:19:5;4387:17;4423:19;;;:12;:19;;;;;;4325:124::o;10329:343:4:-;10446:4;10471:15;:2;-1:-1:-1;;;;;10471:13:4;;:15::i;:::-;10466:58;;-1:-1:-1;10509:4:4;10502:11;;10466:58;10550:70;;-1:-1:-1;;;10550:70:4;;10587:10;10550:70;;;;;;-1:-1:-1;;;;;10550:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;10534:13;;10550:36;;;;;;10587:10;;10599:4;;10605:7;;10614:5;;10550:70;;;;;;;;;;;10534:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10550:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10550:70:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10550:70:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10550:70:4;-1:-1:-1;;;;;;10638:26:4;-1:-1:-1;;;10638:26:4;;-1:-1:-1;;10329:343:4;;;;;;:::o;1114:112:13:-;1205:14;;1114:112::o;1715:104:21:-;1790:15;;1764:7;;1790:22;;1810:1;1790:22;:19;:22;:::i;3280:205:5:-;3352:24;3364:2;3368:7;3352:11;:24::i;:::-;3387:40;3415:2;3419:7;3387:27;:40::i;:::-;3438;3470:7;3438:31;:40::i;1899:72:21:-;1947:15;:17;;;;;;1899:72::o;1557:465:15:-;1607:27;1650:7;1646:48;;-1:-1:-1;1673:10:15;;;;;;;;;;;;-1:-1:-1;;;1673:10:15;;;;;;1646:48;1712:2;1703:6;1742:66;1749:6;;1742:66;;1771:5;;1795:2;1790:7;;;;1742:66;;;1817:17;1847:3;1837:14;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;1837:14:15;87:34:-1;135:17;;-1:-1;1837:14:15;-1:-1:-1;1817:34:15;-1:-1:-1;;;1870:7:15;;1887:100;1894:7;;1887:100;;1950:2;1945;:7;1940:2;:12;1929:25;;1917:4;1922:3;;;;;;;1917:9;;;;;;;;;;;:37;-1:-1:-1;;;;;1917:37:15;;;;;;;;-1:-1:-1;1974:2:15;1968:8;;;;1887:100;;;-1:-1:-1;2010:4:15;1557:465;-1:-1:-1;;;;1557:465:15:o;1405:146::-;1483:13;1515:29;1525:2;1529;1515:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;1508:36;1405:146;-1:-1:-1;;;1405:146:15:o;4126:162:4:-;-1:-1:-1;;;;;4246:25:4;;;4223:4;4246:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4126:162::o;1807:216:17:-;-1:-1:-1;;;;;1880:22:17;;1872:64;;;;;-1:-1:-1;;;1872:64:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:6;;1951:38;;-1:-1:-1;;;;;1951:38:17;;;;1972:6;;1951:38;;1972:6;;1951:38;1999:6;:17;;-1:-1:-1;;;;;;1999:17:17;-1:-1:-1;;;;;1999:17:17;;;;;;;;;;1807:216::o;469:200:21:-;577:31;593:5;600:7;577:15;:31::i;:::-;618:20;:44;;-1:-1:-1;;;;;;618:44:21;-1:-1:-1;;;;;618:44:21;;;;;;;;;;-1:-1:-1;;469:200:21:o;820:175:1:-;-1:-1:-1;;;;;;895:25:1;;;;;887:51;;;;;-1:-1:-1;;;887:51:1;;;;;;;;;;;;-1:-1:-1;;;887:51:1;;;;;;;;;;;;;;;-1:-1:-1;;;;;;948:33:1;;;;;:20;:33;;;;;:40;;-1:-1:-1;;948:40:1;984:4;948:40;;;820:175::o;9375:434:4:-;9496:4;-1:-1:-1;;;;;9476:24:4;:16;9484:7;9476;:16::i;:::-;-1:-1:-1;;;;;9476:24:4;;9468:69;;;;;-1:-1:-1;;;9468:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9555:16:4;;9547:53;;;;;-1:-1:-1;;;9547:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;9611:23;9626:7;9611:14;:23::i;:::-;-1:-1:-1;;;;;9645:23:4;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;9690:21:4;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;9734:20;;;;:11;:20;;;;;;;;;:25;;-1:-1:-1;;;;;;9734:25:4;-1:-1:-1;;;;;9734:25:4;;;;;;;;;9775:27;;;;;;;9734:25;;9775:27;;;;;;;;;;;;9375:434;;;:::o;5883:490:5:-;-1:-1:-1;;;;;5999:18:5;;5974:22;5999:18;;;:12;:18;;;;;:25;:32;;6029:1;5999:32;:29;:32;:::i;:::-;6041:18;6062:26;;;:17;:26;;;;;;5974:57;;-1:-1:-1;6103:28:5;;;6099:233;;-1:-1:-1;;;;;6169:18:5;;6147:19;6169:18;;;:12;:18;;;;;:34;;6188:14;;6169:34;;;;;;;;;;;;;;6147:56;;6251:11;6218:12;:18;6231:4;-1:-1:-1;;;;;6218:18:5;-1:-1:-1;;;;;6218:18:5;;;;;;;;;;;;6237:10;6218:30;;;;;;;;;;;;;;;;;;;:44;;;;6277:30;;;:17;:30;;;;;:43;;;6099:233;-1:-1:-1;;;;;6342:18:5;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5883:490;;;;:::o;4739:183::-;-1:-1:-1;;;;;4852:16:5;;;;;;;:12;:16;;;;;;;;:23;;4823:26;;;:17;:26;;;;;:52;;;4885:16;;;39:1:-1;23:18;;45:23;;4885:30:5;;;;;;;;4739:183::o;3751:374::-;3826:27;3838:5;3845:7;3826:11;:27::i;:::-;3864:48;3897:5;3904:7;3864:32;:48::i;:::-;4060:1;4031:26;;;:17;:26;;;;;:30;4072:45;4049:7;4072:36;:45::i;521:524:12:-;992:20;1030:8;;;521:524::o;1569:181:14:-;1627:7;1658:5;;;1681:6;;;;1673:51;;;;;-1:-1:-1;;;1673:51:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;7829:319:4;-1:-1:-1;;;;;7908:16:4;;7900:53;;;;;-1:-1:-1;;;7900:53:4;;;;;;;;;;;;-1:-1:-1;;;7900:53:4;;;;;;;;;;;;;;;7972:16;7980:7;7972;:16::i;:::-;7971:17;7963:50;;;;;-1:-1:-1;;;7963:50:4;;;;;;;;;;;;-1:-1:-1;;;7963:50:4;;;;;;;;;;;;;;;8024:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8024:25:4;-1:-1:-1;;;;;8024:25:4;;;;;;;;8059:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;8108;;;;;;;;-1:-1:-1;;;;;8108:33:4;;;8125:1;;8108:33;;;;;;;;;7829:319;;:::o;5114:161:5:-;5217:10;:17;;5190:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5244:24:5;;;;;;;5114:161::o;156:885:15:-;288:13;313:16;338:2;313:28;;351:16;376:2;351:28;;389:16;414:2;389:28;;427:16;452:2;427:28;;465:16;490:2;465:28;;503:19;588:3;:10;575:3;:10;562:3;:10;549:3;:10;536:3;:10;:23;:36;:49;:62;525:74;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;104:10;525:74:15;87:34:-1;135:17;;-1:-1;525:74:15;-1:-1:-1;503:96:15;-1:-1:-1;503:96:15;653:6;;673:58;694:3;:10;690:1;:14;673:58;;;725:3;729:1;725:6;;;;;;;;;;;;;;;;711;718:3;;;;;;711:11;;;;;;;;;;;:20;-1:-1:-1;;;;;711:20:15;;;;;;;;-1:-1:-1;706:3:15;;673:58;;;-1:-1:-1;746:6:15;741:58;762:3;:10;758:1;:14;741:58;;;793:3;797:1;793:6;;;;;;;;;;;;;;;;779;786:3;;;;;;779:11;;;;;;;;;;;:20;-1:-1:-1;;;;;779:20:15;;;;;;;;-1:-1:-1;774:3:15;;741:58;;;-1:-1:-1;814:6:15;809:58;830:3;:10;826:1;:14;809:58;;;861:3;865:1;861:6;;;;;;;;;;;;;;;;847;854:3;;;;;;847:11;;;;;;;;;;;:20;-1:-1:-1;;;;;847:20:15;;;;;;;;-1:-1:-1;842:3:15;;809:58;;;-1:-1:-1;882:6:15;877:58;898:3;:10;894:1;:14;877:58;;;929:3;933:1;929:6;;;;;;;;;;;;;;;;915;922:3;;;;;;915:11;;;;;;;;;;;:20;-1:-1:-1;;;;;915:20:15;;;;;;;;-1:-1:-1;910:3:15;;877:58;;;-1:-1:-1;950:6:15;945:58;966:3;:10;962:1;:14;945:58;;;997:3;1001:1;997:6;;;;;;;;;;;;;;;;983;990:3;;;;;;983:11;;;;;;;;;;;:20;-1:-1:-1;;;;;983:20:15;;;;;;;;-1:-1:-1;978:3:15;;945:58;;;-1:-1:-1;1027:6:15;;156:885;-1:-1:-1;;;;;;;;;;;;;156:885:15:o;556:121:5:-;632:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;654:16:5;;;;:7;;:16;;;;;:::i;10830:171:4:-;10929:1;10893:24;;;:15;:24;;;;;;-1:-1:-1;;;;;10893:24:4;:38;10889:106;;10982:1;10947:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;10947:37:4;;;10830:171::o;1327:108:13:-;1407:14;;:21;;1426:1;1407:21;:18;:21;:::i;:::-;1390:38;;1327:108::o;1232:89::-;1295:19;;1313:1;1295:19;;;1232:89::o;1310:178:14:-;1368:7;1400:1;1395;:6;;1387:48;;;;;-1:-1:-1;;;1387:48:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1457:5:14;;;1310:178::o;8415:326:4:-;8517:5;-1:-1:-1;;;;;8497:25:4;:16;8505:7;8497;:16::i;:::-;-1:-1:-1;;;;;8497:25:4;;8489:69;;;;;-1:-1:-1;;;8489:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;8569:23;8584:7;8569:14;:23::i;:::-;-1:-1:-1;;;;;8603:24:4;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;8680:1;8649:20;;;:11;:20;;;;;;;;:33;;-1:-1:-1;;;;;;8649:33:4;;;8698:36;;;;;;;-1:-1:-1;;;;;8698:36:4;;;;;;;;;;;8415:326;;:::o;6657:416:5:-;6763:10;:17;6738:22;;6763:24;;6785:1;6763:24;:21;:24;:::i;:::-;6797:18;6818:24;;;:15;:24;;;;;;6875:10;:26;;6738:49;;-1:-1:-1;6818:24:5;;6738:49;;6875:26;;;;;;;;;;;;;;6853:48;;6937:11;6912:10;6923;6912:22;;;;;;;;;;;;;;;;;;;:36;;;;6959:28;;;:15;:28;;;;;;:41;;;7012:10;:16;;;;;;;;;;;;;;;;;;;;;;;;7065:1;7038:15;:24;7054:7;7038:24;;;;;;;;;;;:28;;;;6657:416;;;;:::o;366:2314:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;366:2314:6;;;-1:-1:-1;366:2314:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: UNLICENSED\n/**\n * @author Mathieu Lecoq\n * september 3rd 2020 \n *\n * @dev Property\n * all rights are reserved to EtherLand ltd\n *\n * @dev deployed with compiler version 0.6.2\n */\npragma solidity 0.6.2;\n\nimport \"./TradeableERC721Token.sol\";\nimport \"./IpfsHashs.sol\";\nimport \"./ERC1822/Proxiable.sol\";\n\n/**\n* @title Etherland NFT Assets\n*/\ncontract Etherland is TradeableERC721Token, IpfsHashs, Proxiable {\n    /**\n    * @dev initialized state MUST remain set to false on Implementation Contract \n    */\n    bool public initialized = false;\n\n    /**\n    * @dev event emitting when the `_baseTokenUri` is updated by owner\n    */\n    event BaseTokenUriUpdated(string newUri);\n\n    /**\n    * @dev Logic code implementation contact constructor\n    * @dev MUST be called by deployer only if contract has not been initialized before\n    */\n    function init(\n        string memory _name,\n        string memory _symbol,\n        address _proxyRegistryAddress,\n        string memory baseURI,\n        address _owner\n    ) public {\n        if (initialized != true) {\n            initialized = true;\n\n            TradeableERC721Token.init(_name, _symbol, _proxyRegistryAddress);\n\n            _baseTokenURI = baseURI;\n\n            // register the supported interfaces to conform to ERC721 via ERC165\n            _registerInterface(_INTERFACE_ID_ERC165);\n            _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n            _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n            _registerInterface(_INTERFACE_ID_ERC721);\n\n            _transferOwnership(_owner);\n        }\n    }\n\n    /**\n    * @dev Retrieve all NFTs base token uri \n    */\n    function baseTokenURI() public view returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    /**\n    * @dev Set the base token uri for all NFTs\n    */\n    function setBaseTokenURI(string memory uri) public onlyOwner {\n        _baseTokenURI = uri;\n        emit BaseTokenUriUpdated(uri);\n    }\n\n    /**\n    * @dev Retrieve the uri of a specific token \n    * @param _tokenId the id of the token to retrieve the uri of\n    * @return computed uri string pointing to a specific _tokenId\n    */\n    function tokenURI(uint256 _tokenId) external view returns (string memory) {\n        return Strings.strConcat(\n            baseTokenURI(),\n            Strings.uint2str(_tokenId)\n        );\n    }\n\n    /**\n    * @dev EIP-1822 feature\n    * @dev Realize an update of the Etherland logic code \n    * @dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")\n    */\n    function updateCode(address newCode) public onlyOwner {\n        updateCodeAddress(newCode);\n    }\n\n}\n",
  "sourcePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Etherland.sol",
  "ast": {
    "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Etherland.sol",
    "exportedSymbols": {
      "Etherland": [
        1367
      ]
    },
    "id": 1368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1241,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "207:22:6"
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 1242,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 2644,
        "src": "231:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/IpfsHashs.sol",
        "file": "./IpfsHashs.sol",
        "id": 1243,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 1607,
        "src": "268:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC1822/Proxiable.sol",
        "file": "./ERC1822/Proxiable.sol",
        "id": 1244,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 281,
        "src": "294:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1245,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2643,
              "src": "388:20:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$2643",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 1246,
            "nodeType": "InheritanceSpecifier",
            "src": "388:20:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1247,
              "name": "IpfsHashs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1606,
              "src": "410:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IpfsHashs_$1606",
                "typeString": "contract IpfsHashs"
              }
            },
            "id": 1248,
            "nodeType": "InheritanceSpecifier",
            "src": "410:9:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1249,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 280,
              "src": "421:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$280",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1250,
            "nodeType": "InheritanceSpecifier",
            "src": "421:9:6"
          }
        ],
        "contractDependencies": [
          207,
          248,
          280,
          876,
          1239,
          1377,
          1480,
          1517,
          1606,
          2388,
          2474,
          2643
        ],
        "contractKind": "contract",
        "documentation": "@title Etherland NFT Assets",
        "fullyImplemented": true,
        "id": 1367,
        "linearizedBaseContracts": [
          1367,
          280,
          1606,
          2643,
          207,
          2388,
          1239,
          1517,
          876,
          1480,
          248,
          2474,
          1377
        ],
        "name": "Etherland",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 1253,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1367,
            "src": "534:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1251,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "534:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1252,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitting when the `_baseTokenUri` is updated by owner",
            "id": 1257,
            "name": "BaseTokenUriUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "indexed": false,
                  "name": "newUri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1257,
                  "src": "684:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:15:6"
            },
            "src": "658:41:6"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "1045:560:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "1059:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1059:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1310,
                  "nodeType": "IfStatement",
                  "src": "1055:544:6",
                  "trueBody": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "1080:519:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1273,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "1094:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1108:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1094:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1276,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:18:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1280,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "1153:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1281,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1261,
                              "src": "1160:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1282,
                              "name": "_proxyRegistryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "1169:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "TradeableERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2643,
                              "src": "1127:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$2643_$",
                                "typeString": "type(contract TradeableERC721Token)"
                              }
                            },
                            "id": 1279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "init",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2511,
                            "src": "1127:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,string memory,address)"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1127:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "1127:64:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1285,
                            "name": "_baseTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "1206:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1286,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "1222:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1206:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "1206:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1290,
                              "name": "_INTERFACE_ID_ERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2414,
                              "src": "1344:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1289,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1325:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1292,
                        "nodeType": "ExpressionStatement",
                        "src": "1325:40:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1294,
                              "name": "_INTERFACE_ID_ERC721_METADATA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2426,
                              "src": "1398:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1293,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1379:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:49:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1298,
                              "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2423,
                              "src": "1461:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1297,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1442:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1442:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "1442:51:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1302,
                              "name": "_INTERFACE_ID_ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2420,
                              "src": "1526:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1301,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1507:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1507:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1304,
                        "nodeType": "ExpressionStatement",
                        "src": "1507:40:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1306,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1581:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1305,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2387,
                            "src": "1562:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:26:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Logic code implementation contact constructor\n@dev MUST be called by deployer only if contract has not been initialized before",
            "functionSelector": "faa0650b",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1259,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "887:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1261,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "916:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1263,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "947:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1265,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "986:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "1017:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "877:160:6"
            },
            "returnParameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:6"
            },
            "scope": 1367,
            "src": "864:741:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "1731:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1317,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2411,
                    "src": "1748:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1318,
                  "nodeType": "Return",
                  "src": "1741:20:6"
                }
              ]
            },
            "documentation": "@dev Retrieve all NFTs base token uri ",
            "functionSelector": "d547cfb7",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:2:6"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1716:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:15:6"
            },
            "scope": 1367,
            "src": "1671:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1335,
              "nodeType": "Block",
              "src": "1897:75:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1327,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2411,
                      "src": "1907:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1328,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1322,
                      "src": "1923:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1907:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:19:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "1961:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1331,
                      "name": "BaseTokenUriUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "1941:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "EmitStatement",
                  "src": "1936:29:6"
                }
              ]
            },
            "documentation": "@dev Set the base token uri for all NFTs",
            "functionSelector": "30176e13",
            "id": 1336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1324,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "1887:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1887:9:6"
              }
            ],
            "name": "setBaseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1322,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1336,
                  "src": "1861:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1860:19:6"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:0:6"
            },
            "scope": 1367,
            "src": "1836:136:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1353,
              "nodeType": "Block",
              "src": "2247:119:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1345,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "2295:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1349,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "2340:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1347,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2233,
                            "src": "2323:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$2233_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2139,
                          "src": "2323:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2323:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1343,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "2264:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$2233_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2061,
                      "src": "2264:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1342,
                  "id": 1352,
                  "nodeType": "Return",
                  "src": "2257:102:6"
                }
              ]
            },
            "documentation": "@dev Retrieve the uri of a specific token \n@param _tokenId the id of the token to retrieve the uri of\n@return computed uri string pointing to a specific _tokenId",
            "functionSelector": "c87b56dd",
            "id": 1354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1354,
                  "src": "2191:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2190:18:6"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1354,
                  "src": "2232:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2231:15:6"
            },
            "scope": 1367,
            "src": "2173:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1365,
              "nodeType": "Block",
              "src": "2634:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "newCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1356,
                        "src": "2662:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1361,
                      "name": "updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2644:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:26:6"
                }
              ]
            },
            "documentation": "@dev EIP-1822 feature\n@dev Realize an update of the Etherland logic code \n@dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")",
            "functionSelector": "46951954",
            "id": 1366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1359,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1358,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "2624:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2624:9:6"
              }
            ],
            "name": "updateCode",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "name": "newCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1366,
                  "src": "2600:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2599:17:6"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:0:6"
            },
            "scope": 1367,
            "src": "2580:97:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1368,
        "src": "366:2314:6"
      }
    ],
    "src": "207:2474:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/Etherland.sol",
    "exportedSymbols": {
      "Etherland": [
        1367
      ]
    },
    "id": 1368,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1241,
        "literals": [
          "solidity",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "207:22:6"
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/TradeableERC721Token.sol",
        "file": "./TradeableERC721Token.sol",
        "id": 1242,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 2644,
        "src": "231:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/IpfsHashs.sol",
        "file": "./IpfsHashs.sol",
        "id": 1243,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 1607,
        "src": "268:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/proapps/Desktop/Mat/Apps/Etherland/ERC721/contracts/ERC1822/Proxiable.sol",
        "file": "./ERC1822/Proxiable.sol",
        "id": 1244,
        "nodeType": "ImportDirective",
        "scope": 1368,
        "sourceUnit": 281,
        "src": "294:33:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1245,
              "name": "TradeableERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2643,
              "src": "388:20:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TradeableERC721Token_$2643",
                "typeString": "contract TradeableERC721Token"
              }
            },
            "id": 1246,
            "nodeType": "InheritanceSpecifier",
            "src": "388:20:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1247,
              "name": "IpfsHashs",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1606,
              "src": "410:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IpfsHashs_$1606",
                "typeString": "contract IpfsHashs"
              }
            },
            "id": 1248,
            "nodeType": "InheritanceSpecifier",
            "src": "410:9:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1249,
              "name": "Proxiable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 280,
              "src": "421:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxiable_$280",
                "typeString": "contract Proxiable"
              }
            },
            "id": 1250,
            "nodeType": "InheritanceSpecifier",
            "src": "421:9:6"
          }
        ],
        "contractDependencies": [
          207,
          248,
          280,
          876,
          1239,
          1377,
          1480,
          1517,
          1606,
          2388,
          2474,
          2643
        ],
        "contractKind": "contract",
        "documentation": "@title Etherland NFT Assets",
        "fullyImplemented": true,
        "id": 1367,
        "linearizedBaseContracts": [
          1367,
          280,
          1606,
          2643,
          207,
          2388,
          1239,
          1517,
          876,
          1480,
          248,
          2474,
          1377
        ],
        "name": "Etherland",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "158ef93e",
            "id": 1253,
            "name": "initialized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1367,
            "src": "534:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1251,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "534:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1252,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:5:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": "@dev event emitting when the `_baseTokenUri` is updated by owner",
            "id": 1257,
            "name": "BaseTokenUriUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "indexed": false,
                  "name": "newUri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1257,
                  "src": "684:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "683:15:6"
            },
            "src": "658:41:6"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "1045:560:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1270,
                      "name": "initialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1253,
                      "src": "1059:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 1271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1074:4:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1059:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1310,
                  "nodeType": "IfStatement",
                  "src": "1055:544:6",
                  "trueBody": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "1080:519:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1273,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1253,
                            "src": "1094:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1108:4:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1094:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1276,
                        "nodeType": "ExpressionStatement",
                        "src": "1094:18:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1280,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1259,
                              "src": "1153:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1281,
                              "name": "_symbol",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1261,
                              "src": "1160:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1282,
                              "name": "_proxyRegistryAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1263,
                              "src": "1169:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1277,
                              "name": "TradeableERC721Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2643,
                              "src": "1127:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TradeableERC721Token_$2643_$",
                                "typeString": "type(contract TradeableERC721Token)"
                              }
                            },
                            "id": 1279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "init",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2511,
                            "src": "1127:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,string memory,address)"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1127:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "1127:64:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1285,
                            "name": "_baseTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2411,
                            "src": "1206:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1286,
                            "name": "baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1265,
                            "src": "1222:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1206:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "1206:23:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1290,
                              "name": "_INTERFACE_ID_ERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2414,
                              "src": "1344:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1289,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1325:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1292,
                        "nodeType": "ExpressionStatement",
                        "src": "1325:40:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1294,
                              "name": "_INTERFACE_ID_ERC721_METADATA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2426,
                              "src": "1398:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1293,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1379:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1296,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:49:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1298,
                              "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2423,
                              "src": "1461:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1297,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1442:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1442:51:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1300,
                        "nodeType": "ExpressionStatement",
                        "src": "1442:51:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1302,
                              "name": "_INTERFACE_ID_ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2420,
                              "src": "1526:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 1301,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "1507:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 1303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1507:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1304,
                        "nodeType": "ExpressionStatement",
                        "src": "1507:40:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1306,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1267,
                              "src": "1581:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1305,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2387,
                            "src": "1562:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:26:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Logic code implementation contact constructor\n@dev MUST be called by deployer only if contract has not been initialized before",
            "functionSelector": "faa0650b",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1259,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "887:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1258,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "887:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1261,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "916:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1263,
                  "name": "_proxyRegistryAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "947:29:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1265,
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "986:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1264,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1267,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1312,
                  "src": "1017:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1017:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "877:160:6"
            },
            "returnParameters": {
              "id": 1269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:0:6"
            },
            "scope": 1367,
            "src": "864:741:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1319,
              "nodeType": "Block",
              "src": "1731:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1317,
                    "name": "_baseTokenURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2411,
                    "src": "1748:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1316,
                  "id": 1318,
                  "nodeType": "Return",
                  "src": "1741:20:6"
                }
              ]
            },
            "documentation": "@dev Retrieve all NFTs base token uri ",
            "functionSelector": "d547cfb7",
            "id": 1320,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:2:6"
            },
            "returnParameters": {
              "id": 1316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1320,
                  "src": "1716:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1715:15:6"
            },
            "scope": 1367,
            "src": "1671:97:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1335,
              "nodeType": "Block",
              "src": "1897:75:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1327,
                      "name": "_baseTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2411,
                      "src": "1907:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1328,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1322,
                      "src": "1923:3:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1907:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1330,
                  "nodeType": "ExpressionStatement",
                  "src": "1907:19:6"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1332,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1322,
                        "src": "1961:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1331,
                      "name": "BaseTokenUriUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1257,
                      "src": "1941:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:24:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1334,
                  "nodeType": "EmitStatement",
                  "src": "1936:29:6"
                }
              ]
            },
            "documentation": "@dev Set the base token uri for all NFTs",
            "functionSelector": "30176e13",
            "id": 1336,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1325,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1324,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "1887:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1887:9:6"
              }
            ],
            "name": "setBaseTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1322,
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1336,
                  "src": "1861:17:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1321,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1860:19:6"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1897:0:6"
            },
            "scope": 1367,
            "src": "1836:136:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1353,
              "nodeType": "Block",
              "src": "2247:119:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1345,
                          "name": "baseTokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1320,
                          "src": "2295:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view returns (string memory)"
                          }
                        },
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2295:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1349,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "2340:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1347,
                            "name": "Strings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2233,
                            "src": "2323:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Strings_$2233_$",
                              "typeString": "type(library Strings)"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "uint2str",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2139,
                          "src": "2323:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (string memory)"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2323:26:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1343,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2233,
                        "src": "2264:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$2233_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 1344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strConcat",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2061,
                      "src": "2264:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (string memory,string memory) pure returns (string memory)"
                      }
                    },
                    "id": 1351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1342,
                  "id": 1352,
                  "nodeType": "Return",
                  "src": "2257:102:6"
                }
              ]
            },
            "documentation": "@dev Retrieve the uri of a specific token \n@param _tokenId the id of the token to retrieve the uri of\n@return computed uri string pointing to a specific _tokenId",
            "functionSelector": "c87b56dd",
            "id": 1354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1354,
                  "src": "2191:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2190:18:6"
            },
            "returnParameters": {
              "id": 1342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1341,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1354,
                  "src": "2232:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2232:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2231:15:6"
            },
            "scope": 1367,
            "src": "2173:193:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1365,
              "nodeType": "Block",
              "src": "2634:43:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1362,
                        "name": "newCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1356,
                        "src": "2662:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1361,
                      "name": "updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2644:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2644:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1364,
                  "nodeType": "ExpressionStatement",
                  "src": "2644:26:6"
                }
              ]
            },
            "documentation": "@dev EIP-1822 feature\n@dev Realize an update of the Etherland logic code \n@dev calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")",
            "functionSelector": "46951954",
            "id": 1366,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1359,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1358,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2318,
                  "src": "2624:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2624:9:6"
              }
            ],
            "name": "updateCode",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "name": "newCode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1366,
                  "src": "2600:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2599:17:6"
            },
            "returnParameters": {
              "id": 1360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2634:0:6"
            },
            "scope": 1367,
            "src": "2580:97:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1368,
        "src": "366:2314:6"
      }
    ],
    "src": "207:2474:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xc9650477e67b3b00a3cf84fb7f5e1c3c95d7271a855253a09dde0a403695a367": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "newAdmin",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "int16",
              "name": "adminRights",
              "type": "int16"
            }
          ],
          "name": "AdminRightsGranted",
          "type": "event"
        },
        "0x75063598bb424244ef6461ff8e1e0a1836998c3c84ef9e591015fbe8d94fa71f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "noAdmin",
              "type": "address"
            }
          ],
          "name": "AdminRightsRevoked",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xe0b4aa3a614e11365fec002edc82449b5849402d025b31c4770f0e270286e690": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "newUri",
              "type": "string"
            }
          ],
          "name": "BaseTokenUriUpdated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x2Bf94b941571AFf63E8022B0F492c217Aa9A3A1B",
      "transactionHash": "0x16835cef7803b1b272f5b6b49d9f055ffc93c02ec2d2bb66d9aef4a3db594fe0"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-14T09:10:01.779Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "adminRightsOf(address)": {
        "details": "know if an address has admin rights and its type of rights",
        "params": {
          "_admin": "the address to find admin rights of"
        },
        "returns": {
          "_0": "int16 the admin right for _admin :      1 : address can only mint tokens       2 : address can mint AND burn tokens "
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseTokenURI()": {
        "details": "Retrieve all NFTs base token uri "
      },
      "batchMintTo(uint256,address)": {
        "details": "Mint several tokens to an address.",
        "params": {
          "_to": "default owner of the new created NFT (reverts if a zero address)",
          "_total": "total number of NFT to mint (reverts if <= 0)"
        }
      },
      "burn(uint256)": {
        "details": "External Burn NFT method"
      },
      "canMint()": {
        "details": "canMint external ",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens"
        }
      },
      "canMintBurn()": {
        "details": "canBurn external",
        "returns": {
          "_0": "bool : truthy if msg.sender has admin rights to mint new tokens and burn existing tokens"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "grantMinterBurnerRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokens and to burn existing tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter and burner rights to"
        }
      },
      "grantMinterRights(address)": {
        "details": "owner can grant admin access to allow any address to mint new tokensRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to grant admin minter rights to"
        }
      },
      "init(string,string,address,string,address)": {
        "details": "Logic code implementation contact constructorMUST be called by deployer only if contract has not been initialized before"
      },
      "isMinter(address)": {
        "details": "verifiy if an address can mint new tokens",
        "params": {
          "_admin": ": the address to verify minting rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint new tokens"
        }
      },
      "isMinterBurner(address)": {
        "details": "verifiy if an address has rights to mint and burn new tokens",
        "params": {
          "_admin": ": the address to verify minter-burner rights of"
        },
        "returns": {
          "_0": "a boolean, truthy when _admin has rights to mint and burn new tokens"
        }
      },
      "mintTo(address)": {
        "details": "Mints a token to an address.",
        "params": {
          "_to": "address of the future owner of the token"
        }
      },
      "name()": {
        "details": "Gets the token name",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "revokeAdminRights(address)": {
        "details": "owner can revoke admin right of any admin addressRestricted to CONTRACT OWNER ONLY",
        "params": {
          "_admin": ": address to revoke admin access to"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFromWithData(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setBaseTokenURI(string)": {
        "details": "Set the base token uri for all NFTs"
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Retrieve the uri of a specific token ",
        "params": {
          "_tokenId": "the id of the token to retrieve the uri of"
        },
        "returns": {
          "_0": "computed uri string pointing to a specific _tokenId"
        }
      },
      "tokensOf(address)": {
        "details": "@notice Non-Standard method to retrieve all NFTs that specific owner owns",
        "returns": {
          "_0": "uint[] containing all NFTs that owner owns"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "updateCode(address)": {
        "details": "EIP-1822 featureRealize an update of the Etherland logic code calls the proxy contract to update stored logic code contract address at keccak256(\"PROXIABLE\")"
      }
    },
    "title": "Etherland NFT Assets"
  },
  "userdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "notice": "Override isApprovedForAll to whitelist user's OpenSea proxy accounts to enable gas-less listings."
      },
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}